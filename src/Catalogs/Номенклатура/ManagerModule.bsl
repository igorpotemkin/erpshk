
&ИзменениеИКонтроль("ТабличныйДокументКарточкиНоменклатуры")
Функция Расш1_ТабличныйДокументКарточкиНоменклатуры(Номенклатура, НастройкиВидимостиИЗаголовков, ДляПечати)

	Перем Заголовок;

	Если НастройкиВидимостиИЗаголовков = Неопределено Тогда
		НастройкиВидимостиИЗаголовков = НастройкиВидимостиИЗаголовков(Номенклатура);
	КонецЕсли;

	Объект = Неопределено;
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		Объект = Номенклатура.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(Номенклатура) = Тип("СправочникОбъект.Номенклатура")
		Или ТипЗнч(Номенклатура) = Тип("ДанныеФормыСтруктура") Тогда
		Объект = Номенклатура;
	Иначе
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;

	ТабличныйДокументКарточка = Новый ТабличныйДокумент;

	СтруктураВидимости = НастройкиВидимостиИЗаголовков.ВидимостьЭлементов;
	СтруктураЗаголовков = НастройкиВидимостиИЗаголовков.ЗаголовкиЭлементов;

	Макет = ПолучитьМакет("ПФ_MXL_КарточкаНоменклатуры");

	#Область Шапка

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, Объект);

	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		ОбластьШапка.Параметры.Наименование = ТекстЗначенияНеЗаполнен("Наименование");
	КонецЕсли;
	Если Не ДляПечати Тогда
		ОбластьШапка.Параметры.РасшифровкаНаименование = "Наименование";
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.НаименованиеПолное) Тогда
		ОбластьШапка.Параметры.НаименованиеПолное = ТекстЗначенияНеЗаполнен("НаименованиеПолное");
	КонецЕсли;
	Если Не ДляПечати Тогда
		ОбластьШапка.Параметры.РасшифровкаНаименованиеПолное = "НаименованиеПолное";
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.Артикул) Тогда
		ОбластьШапка.Параметры.Артикул = ТекстЗначенияНеЗаполнен("Артикул");
	КонецЕсли;
	Если Не ДляПечати Тогда
		ОбластьШапка.Параметры.РасшифровкаАртикул = "Артикул";
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.Код) Тогда
		ОбластьШапка.Параметры.Код = ТекстЗначенияНеЗаполнен("Код");
	КонецЕсли;
	Если Не ДляПечати Тогда
		ОбластьШапка.Параметры.РасшифровкаКод = "Код";
	КонецЕсли;

	Если РазделВиден("ГиперссылкаПерейтиНоменклатураСАналогичнымиСвойствами", СтруктураВидимости) Тогда
		Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиНоменклатураСАналогичнымиСвойствами", Заголовок) Тогда
			ОбластьШапка.Параметры.ГиперссылкаПерейтиНоменклатураСАналогичнымиСвойствами = Строка(Заголовок);
		КонецЕсли;
		Если Не ДляПечати Тогда
			ОбластьШапка.Параметры.РасшифровкаГиперссылкаПерейтиНоменклатураСАналогичнымиСвойствами = "ГиперссылкаПерейтиНоменклатураСАналогичнымиСвойствами";
		КонецЕсли;
	КонецЕсли;

	Если РазделВиден("ГиперссылкаПерейтиШтрихкодыНоменклатуры", СтруктураВидимости) Тогда 
		Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиШтрихкодыНоменклатуры", Заголовок) Тогда
			ОбластьШапка.Параметры.ГиперссылкаПерейтиШтрихкодыНоменклатуры = Строка(Заголовок);
		КонецЕсли;
		Если Не ДляПечати Тогда
			ОбластьШапка.Параметры.РасшифровкаГиперссылкаПерейтиШтрихкодыНоменклатуры = "ГиперссылкаПерейтиШтрихкодыНоменклатуры";
		КонецЕсли;
	КонецЕсли;

	ТабличныйДокументКарточка.Присоединить(ОбластьШапка);

	#КонецОбласти

	ТабличныйДокументКолонки = Новый ТабличныйДокумент;

	#Область ТабличныйДокументЛево

	ТабличныйДокументЛево = Новый ТабличныйДокумент;

	#Область Описание

	Если ГлаваВидна("Описание", СтруктураВидимости) Тогда 

		ОбластьОписаниеЗаголовок = Макет.ПолучитьОбласть("ОписаниеЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьОписаниеЗаголовок);

		// Вывод картинки
		Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда

			ОбластьОписаниеКартинка = Макет.ПолучитьОбласть("ОписаниеКартинка");
			Попытка
				УстановитьПривилегированныйРежим(Истина);
				КартинкаНоменклатуры = РаботаСФайлами.ДвоичныеДанныеФайла(Объект.ФайлКартинки);
				УстановитьПривилегированныйРежим(Ложь);
			Исключение
				КартинкаНоменклатуры = Неопределено;
			КонецПопытки;

			Если ЗначениеЗаполнено(КартинкаНоменклатуры) Тогда
				ОбластьКартинка = ОбластьОписаниеКартинка.Области.АдресКартинки;

				Если ТипЗнч(КартинкаНоменклатуры) = Тип("Картинка") Тогда
					ОбластьКартинка.Картинка = КартинкаНоменклатуры;
				ИначеЕсли ТипЗнч(КартинкаНоменклатуры) = Тип("ДвоичныеДанные") Тогда
					КартинкаКарточки = Новый Картинка(КартинкаНоменклатуры);

					ОбластьКартинка.Картинка = ?(КартинкаКарточки.Формат() = ФорматКартинки.НеизвестныйФормат,
					Неопределено,
					КартинкаКарточки);
				КонецЕсли;

				Если Не ДляПечати Тогда
					ОбластьОписаниеКартинка.Параметры.Расшифровка = "ФайлКартинки";
				КонецЕсли;

				ТабличныйДокументЛево.Вывести(ОбластьОписаниеКартинка);
			Иначе
				ОписаниеКартинкиОшибка = Макет.ПолучитьОбласть("ФайлКартинкиСтрокаОшибка");
				Если Не ДляПечати Тогда
					ОписаниеКартинкиОшибка.Параметры.Расшифровка = "ФайлКартинки";
				КонецЕсли;
				ТабличныйДокументЛево.Вывести(ОписаниеКартинкиОшибка);
			КонецЕсли;

		Иначе

			ОписаниеКартинкиНет = Макет.ПолучитьОбласть("ФайлКартинкиСтрока");
			Если Не ДляПечати Тогда
				ОписаниеКартинкиНет.Параметры.Расшифровка = "ФайлКартинки";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОписаниеКартинкиНет);

		КонецЕсли;	

		ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
		ПараметрыВыводаРаздела.ИмяРаздела = "Описание";
		ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ОписаниеСтрока";
		ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ОписаниеРеквизит";
		ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.Описание;
		ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);

		Если РазделВиден("ФайлОписанияДляСайта", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ФайлОписанияДляСайта";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ФайлОписанияДляСайтаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ФайлОписанияДляСайтаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.ФайлОписанияДляСайта;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиФайлы", СтруктураВидимости) Тогда
			ОбластьОписаниеФайлыСтрока = Макет.ПолучитьОбласть("ФайлыСтрока");

			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиФайлы", Заголовок) Тогда
				ОбластьОписаниеФайлыСтрока.Параметры.Файлы = Строка(Заголовок);
				Если Не ДляПечати Тогда
					ОбластьОписаниеФайлыСтрока.Параметры.Расшифровка = "ГиперссылкаПерейтиФайлы";
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьОписаниеФайлыСтрока);
		КонецЕсли;

		Если РазделВиден("ВестиУчетСертификатовНоменклатуры", СтруктураВидимости) Тогда 


			Область = Макет.ПолучитьОбласть("ВестиУчетСертификатовНоменклатурыСтрока");
			Картинка = КартинкаФлагаПоЗначению(Объект.ВестиУчетСертификатовНоменклатуры);
			Область.Область("ВестиУчетСертификатовНоменклатурыФлаг").Картинка = Картинка;

			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиСертификатыНоменклатуры", Заголовок) Тогда
				Область.Параметры.ГиперссылкаПерейтиСертификатыНоменклатуры = Строка(Заголовок);
				Если РазделВиден("ГиперссылкаПерейтиСертификатыНоменклатурыВнимание", СтруктураВидимости) Тогда 
					Область.Область("ГиперссылкаПерейтиСертификатыНоменклатурыВнимание").Картинка = БиблиотекаКартинок.Внимание16;
				КонецЕсли;
				Если Не ДляПечати Тогда
					Область.Параметры.РасшифровкаГиперссылки = "ГиперссылкаПерейтиСертификатыНоменклатуры";
				КонецЕсли;
			КонецЕсли;

			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ВестиУчетСертификатовНоменклатуры";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);

		КонецЕсли;


	КонецЕсли;

	#КонецОбласти

	#Область ДополнительныеРеквизиты

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НаборыДопРеквизитов.НомерСтроки			КАК НомерСтрокиДляСортировки,
	|	ЛОЖЬ									КАК ОбщееСвойство,
	|	ВидыНоменклатуры.НаборСвойств			КАК НаборСвойств,
	|	НаборыДопРеквизитов.Свойство			КАК Свойство,
	|	НаборыДопРеквизитов.Свойство.Имя		КАК ИмяРеквизита,
	|	НаборыДопРеквизитов.Свойство.Заголовок	КАК ПредставлениеРеквизита,
	|	ДопРеквизитыНоменклатуры.Значение		КАК Значение
	|ПОМЕСТИТЬ ДопРеквизитыНоменклатуры
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДопРеквизитов
	|		ПО ВидыНоменклатуры.НаборСвойств = НаборыДопРеквизитов.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДопРеквизитыНоменклатуры
	|		ПО ДопРеквизитыНоменклатуры.Ссылка = &Номенклатура
	|			И НаборыДопРеквизитов.Свойство = ДопРеквизитыНоменклатуры.Свойство
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка В(&ВидНоменклатуры)
	|	И НЕ НаборыДопРеквизитов.Свойство.ЭтоДополнительноеСведение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НаборыДопРеквизитов.НомерСтроки			КАК НомерСтрокиДляСортировки,
	|	ИСТИНА									КАК ОбщееСвойство,
	|	&ОбщийНабор								КАК НаборСвойств,
	|	НаборыДопРеквизитов.Свойство			КАК Свойство,
	|	НаборыДопРеквизитов.Свойство.Имя		КАК ИмяРеквизита,
	|	НаборыДопРеквизитов.Свойство.Заголовок	КАК ПредставлениеРеквизита,
	|	ДопРеквизитыНоменклатуры.Значение		КАК Значение
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДопРеквизитов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДопРеквизитыНоменклатуры
	|		ПО ДопРеквизитыНоменклатуры.Ссылка = &Номенклатура
	|			И НаборыДопРеквизитов.Свойство = ДопРеквизитыНоменклатуры.Свойство
	|ГДЕ
	|	НаборыДопРеквизитов.Ссылка = &ОбщийНабор
	|	И НЕ НаборыДопРеквизитов.Свойство.ЭтоДополнительноеСведение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗависимостиДопРеквизитов.Ссылка		КАК Свойство,
	|	ЗависимостиДопРеквизитов.Реквизит	КАК Реквизит,
	|	ЗависимостиДопРеквизитов.Условие	КАК Условие,
	|	ЗависимостиДопРеквизитов.Значение	КАК Значение
	|ПОМЕСТИТЬ УсловияВидимостиДопРеквизтов
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов КАК ЗависимостиДопРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДопРеквизитыНоменклатуры КАК ДопРеквизитыНоменклатуры
	|		ПО ЗависимостиДопРеквизитов.Ссылка = ДопРеквизитыНоменклатуры.Свойство
	|
	|ГДЕ
	|	ЗависимостиДопРеквизитов.НаборСвойств В(&НаборВида, &ОбщийНабор)
	|	И ЗависимостиДопРеквизитов.ЗависимоеСвойство ПОДОБНО ""Виден""";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&НаборВида",
	"ВЫРАЗИТЬ(&ВидНоменклатуры КАК Справочник.ВидыНоменклатуры).НаборСвойств");

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("ВидНоменклатуры",	Объект.ВидНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура",		Объект.Ссылка);
	Запрос.УстановитьПараметр("ОбщийНабор",			УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Номенклатура_Общие"));

	РезультатЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	ДополнительныеРеквизиты		= РезультатЗапроса[0].Выгрузить();
	УсловияВидимостиРеквизитов	= РезультатЗапроса[1].Выгрузить();

	Если ГлаваВидна("ДополнительныеРеквизиты", СтруктураВидимости, ДополнительныеРеквизиты.Количество()) Тогда

		ОбластьЗаголовок = Макет.ПолучитьОбласть("ДополнительныеРеквизитыЗаголовок");

		ТабличныйДокументЛево.Вывести(ОбластьЗаголовок);

		ДополнительныеРеквизиты.Сортировать("ОбщееСвойство Убыв, НомерСтрокиДляСортировки Возр");
		УсловияВидимостиРеквизитов.Индексы.Добавить("Свойство");

		Для Каждого ДопРеквизит Из ДополнительныеРеквизиты Цикл

			ЗначениеРеквизита = ДопРеквизит.Значение;
			Если Не ЗначениеЗаполнено(ЗначениеРеквизита)
				И ДопРеквизит.Свойство.ТипЗначения = Новый ОписаниеТипов("Булево") Тогда

				ЗначениеРеквизита = Ложь;

			КонецЕсли;

			ИмяЭлементаДопРеквизита = "ДополнительныйРеквизитЗначение_" 
			+ СтрЗаменить(ВРег(Строка(ДопРеквизит.НаборСвойств.УникальныйИдентификатор())), "-", "x")
			+ "_"
			+ СтрЗаменить(ВРег(Строка(ДопРеквизит.Свойство.УникальныйИдентификатор())), "-", "x");


			ВыводитьРеквизит = ВидимостьДополнительногоРеквизита(Объект,
			ДопРеквизит,
			ДополнительныеРеквизиты,
			УсловияВидимостиРеквизитов)
			И РазделВиден(ИмяЭлементаДопРеквизита, СтруктураВидимости);

			Если ВыводитьРеквизит Тогда
				ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
				ПараметрыВыводаРаздела.ИмяРаздела				= "ДополнительныеРеквизиты";
				ПараметрыВыводаРаздела.ИмяОбластиСтрока			= "ДополнительныеРеквизитыСтрока";
				ПараметрыВыводаРаздела.ИмяПараметраРеквизит		= "ДополнительныеРеквизитыРеквизит";
				ПараметрыВыводаРаздела.ТекстЗначенияРеквизита	= ЗначениеРеквизита;
				ПараметрыВыводаРаздела.ТекстЗаголовкаРеквизита	= ДопРеквизит.ПредставлениеРеквизита;
				ПараметрыВыводаРаздела.НовоеИмяРаздела			= ИмяЭлементаДопРеквизита;

				ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
			КонецЕсли;
		КонецЦикла;
         #Вставка 
		//zaitsev@syspod.ru #79304  
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеСведения.Значение КАК Значение,
		|	ДополнительныеСведения.Свойство.Наименование КАК СвойствоНаименование
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Объект = &Объект
		|	И (ДополнительныеСведения.Свойство.Наименование = &Свойство1
		|			ИЛИ ДополнительныеСведения.Свойство.Наименование = &Свойство2
		|			ИЛИ ДополнительныеСведения.Свойство.Наименование = &Свойство3
		|			ИЛИ ДополнительныеСведения.Свойство.Наименование = &Свойство4
		|			ИЛИ ДополнительныеСведения.Свойство.Наименование = &Свойство5
		|			ИЛИ ДополнительныеСведения.Свойство.Наименование = &Свойство6
		|			ИЛИ ДополнительныеСведения.Свойство.Наименование = &Свойство7)";
	
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	Запрос.УстановитьПараметр("Свойство1", "Масса Шт Брутто (Номенклатура)");  
	Запрос.УстановитьПараметр("Свойство2", "Шт в коробке (Номенклатура)");
	Запрос.УстановитьПараметр("Свойство3", "Содержание белка, не менее");
	Запрос.УстановитьПараметр("Свойство4", "Содержание углеводов, не менее");
	Запрос.УстановитьПараметр("Свойство5", "Каллорийность/Энер.ценность");
	Запрос.УстановитьПараметр("Свойство6", "Содержание жира, не менее");
	Запрос.УстановитьПараметр("Свойство7", "Влажность не более, %");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Счетчик=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если  ВыборкаДетальныеЗаписи.СвойствоНаименование="Масса Шт Брутто (Номенклатура)" Тогда   
			ДопСвойство=Формат(ВыборкаДетальныеЗаписи.Значение,"ЧДЦ=5");
		КонецЕсли;
		Если  ВыборкаДетальныеЗаписи.СвойствоНаименование="Шт в коробке (Номенклатура)" Тогда  
			 ДопСвойство=Формат(ВыборкаДетальныеЗаписи.Значение,"ЧДЦ=5");
		КонецЕсли;
		Если  ВыборкаДетальныеЗаписи.СвойствоНаименование="Содержание белка, не менее" Тогда 
			ДопСвойство=Формат(ВыборкаДетальныеЗаписи.Значение,"ЧДЦ=5");
		КонецЕсли;
		Если  ВыборкаДетальныеЗаписи.СвойствоНаименование="Содержание углеводов, не менее" Тогда
			ДопСвойство=Формат(ВыборкаДетальныеЗаписи.Значение,"ЧДЦ=5");
		КонецЕсли;
		Если  ВыборкаДетальныеЗаписи.СвойствоНаименование="Каллорийность/Энер.ценность" Тогда  
			ДопСвойство=ВыборкаДетальныеЗаписи.Значение;
		КонецЕсли;
		Если  ВыборкаДетальныеЗаписи.СвойствоНаименование="Содержание жира, не менее" Тогда  
			ДопСвойство=Формат(ВыборкаДетальныеЗаписи.Значение,"ЧДЦ=5");
		КонецЕсли;
		Если  ВыборкаДетальныеЗаписи.СвойствоНаименование="Влажность не более, %" Тогда  
			ДопСвойство=Формат(ВыборкаДетальныеЗаписи.Значение,"ЧДЦ=5");
		КонецЕсли;  
		
		 ЗначениеРеквизита = ДопСвойство;
					Если Не ЗначениеЗаполнено(ЗначениеРеквизита)
				И ТИПЗНЧ(ДопСвойство) = Новый ОписаниеТипов("Булево") Тогда

				ЗначениеРеквизита = Ложь;

			КонецЕсли;

			ИмяЭлементаДопРеквизита = "ДополнительныйРеквизитЗначение_" 
			+ СтрЗаменить(ВРег(Строка(Счетчик)), "-", "x")
			+ "_"
			+ СтрЗаменить(ВРег(Строка(Счетчик)), "-", "x");
            Счетчик=Счетчик+1;

			Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
				ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
				ПараметрыВыводаРаздела.ИмяРаздела				= "ДополнительныеРеквизиты";
				ПараметрыВыводаРаздела.ИмяОбластиСтрока			= "ДополнительныеРеквизитыСтрока";
				ПараметрыВыводаРаздела.ИмяПараметраРеквизит		= "ДополнительныеРеквизитыРеквизит";
				ПараметрыВыводаРаздела.ТекстЗначенияРеквизита	= ЗначениеРеквизита;
				ПараметрыВыводаРаздела.ТекстЗаголовкаРеквизита	= ВыборкаДетальныеЗаписи.СвойствоНаименование;
				ПараметрыВыводаРаздела.НовоеИмяРаздела			= ИмяЭлементаДопРеквизита;

				ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
			КонецЕсли;

		
	КонецЦикла;

		//zaitsev@syspod.ru #79304
		#КонецВставки
	КонецЕсли;

	#КонецОбласти	

	#Область СведенияОПроизводителе

	Если ГлаваВидна("СведенияОПроизводителе", СтруктураВидимости) Тогда 


		ОбластьОписаниеЗаголовок = Макет.ПолучитьОбласть("СведенияОПроизводителеЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьОписаниеЗаголовок);

		Если РазделВиден("ПроизводительИмпортерКонтрагент", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ПроизводительИмпортерКонтрагент";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ПроизводительИмпортерКонтрагентСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ПроизводительИмпортерКонтрагентРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.ПроизводительИмпортерКонтрагент;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("Производитель", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Производитель";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ПроизводительСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ПроизводительРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.Производитель;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("Марка", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Марка";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "МаркаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "МаркаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.Марка;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("СтранаПроисхождения", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "СтранаПроисхождения";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "СтранаПроисхожденияСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "СтранаПроисхожденияРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.СтранаПроисхождения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("Принципал", СтруктураВидимости)
			Или РазделВиден("Контрагент", СтруктураВидимости)
			Или РазделВиден ("ГиперссылкаПерейтиСоглашения", СтруктураВидимости) Тогда
			ОбластьРеализацияУслугиПоАгентскомуДоговору = Макет.ПолучитьОбласть("РеализацияУслугиПоАгентскомуДоговору");
			Если СтруктураЗаголовков.Свойство("ГруппаАгентскиеУслуги", Заголовок) Тогда
				ОбластьРеализацияУслугиПоАгентскомуДоговору.Параметры.РеализацияУслугиПоАгентскомуДоговору = Заголовок;
			КонецЕсли;
			Если Не ДляПечати Тогда
				ОбластьРеализацияУслугиПоАгентскомуДоговору.Параметры.Расшифровка = "ГруппаАгентскиеУслуги";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьРеализацияУслугиПоАгентскомуДоговору);
		КонецЕсли;

		Если РазделВиден("Принципал", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Принципал";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ПринципалСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ПринципалРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.Принципал;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("Контрагент", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Контрагент";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "КонтрагентСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "КонтрагентРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.Контрагент;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиСоглашения", СтруктураВидимости) Тогда 
			ОбластьГиперссылкаПерейтиСоглашения = Макет.ПолучитьОбласть("ГиперссылкаПерейтиСоглашенияСтрока");

			ОбластьГиперссылкаПерейтиСоглашения.Параметры.ГиперссылкаПерейтиСоглашения = Строка(
			СтруктураЗаголовков.ГиперссылкаПерейтиСоглашения.Заголовок);

			Если Не ДляПечати Тогда
				РасшифровкаСоглашения = Новый Структура;
				РасшифровкаСоглашения.Вставить("ИмяЭлемента", "ГиперссылкаПерейтиСоглашения");
				РасшифровкаСоглашения.Вставить("Гиперссылка", СтруктураЗаголовков.ГиперссылкаПерейтиСоглашения.Гиперссылка);

				ОбластьГиперссылкаПерейтиСоглашения.Параметры.Расшифровка = РасшифровкаСоглашения;
			КонецЕсли;

			ТабличныйДокументЛево.Вывести(ОбластьГиперссылкаПерейтиСоглашения);
		КонецЕсли;

	КонецЕсли;	

	#КонецОбласти

	#Область ПланированиеИМаркетинг

	Если ГлаваВидна("ПланированиеИМаркетинг", СтруктураВидимости) Тогда 

		ОбластьОписаниеЗаголовок = Макет.ПолучитьОбласть("ПланированиеИМаркетингЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьОписаниеЗаголовок);

		Если РазделВиден("ТоварнаяКатегория", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ТоварнаяКатегория";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ТоварнаяКатегорияСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ТоварнаяКатегорияРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.ТоварнаяКатегория;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("КоллекцияНоменклатуры", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "КоллекцияНоменклатуры";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "КоллекцияНоменклатурыСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "КоллекцияНоменклатурыРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.КоллекцияНоменклатуры;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("СезоннаяГруппа", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "СезоннаяГруппа";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "СезоннаяГруппаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "СезоннаяГруппаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.СезоннаяГруппа;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("РейтингПродаж", СтруктураВидимости) Тогда 
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "РейтингПродаж";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "РейтингПродажСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "РейтингПродажРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.РейтингПродаж;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиСовместныеПродажи", СтруктураВидимости) Тогда
			ОбластьГиперссылкаПерейтиСовместныеПродажиСтрока = Макет.ПолучитьОбласть("ГиперссылкаПерейтиСовместныеПродажиСтрока");
			Если Не ДляПечати Тогда
				ОбластьГиперссылкаПерейтиСовместныеПродажиСтрока.Параметры.Расшифровка = "ГиперссылкаПерейтиСовместныеПродажи";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьГиперссылкаПерейтиСовместныеПродажиСтрока);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиСегменты", СтруктураВидимости) Тогда
			ОбластьГиперссылкаПерейтиСегменты = Макет.ПолучитьОбласть("ГиперссылкаПерейтиСегментыСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиСегменты", Заголовок) Тогда  
				ОбластьГиперссылкаПерейтиСегменты.Параметры.ГиперссылкаПерейтиСегменты = Строка(Заголовок);
			КонецЕсли;
			Если Не ДляПечати Тогда
				ОбластьГиперссылкаПерейтиСегменты.Параметры.Расшифровка = "ГиперссылкаПерейтиСегменты";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьГиперссылкаПерейтиСегменты);
		КонецЕсли;

	КонецЕсли;	

	#КонецОбласти

	#Область ОбеспечениеИПроизводство

	Если ГлаваВидна("ОбеспечениеИПроизводство", СтруктураВидимости) Тогда 

		Область = Макет.ПолучитьОбласть("ОбеспечениеИПроизводствоЗаголовок");
		Если СтруктураЗаголовков.Свойство("ДекорацияЗаголовокОбеспечение", Заголовок) Тогда
			Область.Параметры.ОбеспечениеПроизводство = Заголовок;
		КонецЕсли;		
		ТабличныйДокументЛево.Вывести(Область);

		Если РазделВиден("ОбособленнаяЗакупкаПродажа", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ОбособленнаяЗакупкаПродажаСтрока");
			Картинка = КартинкаФлагаПоЗначению(Объект.ОбособленнаяЗакупкаПродажа);
			Область.Область("ОбособленнаяЗакупкаПродажаФлаг").Картинка = Картинка;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ОбособленнаяЗакупкаПродажа";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("СпособОбеспеченияПотребностей", СтруктураВидимости) Тогда 
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "СпособОбеспеченияПотребностей";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "СпособОбеспеченияПотребностейСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "СпособОбеспеченияПотребностейРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.СпособОбеспеченияПотребностей;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("СхемаОбеспечения", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "СхемаОбеспечения";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "СхемаОбеспеченияСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "СхемаОбеспеченияРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.СхемаОбеспечения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиВариантыКомплектации", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиВариантыКомплектацииСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиВариантыКомплектации", Заголовок) Тогда
				Область.Параметры.ГиперссылкаПерейтиВариантыКомплектации = Строка(Заголовок);
			КонецЕсли;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиВариантыКомплектации";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиНастройкаПоддержанияЗапасов", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиНастройкаПоддержанияЗапасовСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиНастройкаПоддержанияЗапасов";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиНастройкаСпособовОбеспеченияПотребностей", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиНастройкаСпособовОбеспеченияПотребностейСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиНастройкаСпособовОбеспеченияПотребностей";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиНастройкаПередачиМатериаловВПроизводство", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиНастройкаПередачиМатериаловВПроизводствоСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиНастройкаПередачиМатериаловВПроизводство";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиПроизводство", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиПроизводствоСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиПроизводство";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

	КонецЕсли;	

	#КонецОбласти

	#Область Цены

	Если ГлаваВидна("Цены", СтруктураВидимости) Тогда 


		ОбластьОписаниеЗаголовок = Макет.ПолучитьОбласть("ЦеныЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьОписаниеЗаголовок);

		Если РазделВиден("ЦеноваяГруппа", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ЦеноваяГруппа";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ЦеноваяГруппаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ЦеноваяГруппаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.ЦеноваяГруппа;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументЛево, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиПрайсЛистКомпании", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПрайсЛистКомпанииСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиПрайсЛистКомпании";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиПрайсЛистыПоставщиков", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ПрайсЛистыПоставщиковСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиПрайсЛистыПоставщиков";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиИсторияИзмененияЦенКомпании", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ИсторияИзмененияЦенКомпанииСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиИсторияИзмененияЦенКомпании";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиИсторияИзмененияЦенПоставщиков", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ИсторияИзмененияЦенПоставщиковСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиИсторияИзмененияЦенПоставщиков";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
		КонецЕсли;

	КонецЕсли;

	#КонецОбласти

	#Область ПечатьЭтикетокИЦенников

	Если ГлаваВидна("ПечатьЭтикетокИЦенников", СтруктураВидимости) Тогда 

		ВидНоменклатурыШаблоны = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидНоменклатуры, "ШаблонЦенника, ШаблонЭтикетки");

		ОбластьОписаниеЗаголовок = Макет.ПолучитьОбласть("ПечатьЭтикетокИЦенниковЗаголовок");
		ТабличныйДокументЛево.Вывести(ОбластьОписаниеЗаголовок);

		Область = Макет.ПолучитьОбласть("ИспользоватьИндивидуальныйШаблонЭтикеткиСтрока");
		Если Объект.ИспользоватьИндивидуальныйШаблонЭтикетки Тогда
			Область.Параметры.ИспользоватьИндивидуальныйШаблонЭтикетки = НСтр("ru = 'Индивидуальный шаблон этикетки:';
			|en = 'Custom label template:'");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ИспользоватьИндивидуальныйШаблонЭтикетки";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
			ОбластьЭтикетки = Макет.ПолучитьОбласть("ШаблонЭтикеткиСтрока");
			ОбластьЭтикетки.Параметры.ШаблонЭтикетки = Объект.ШаблонЭтикетки;
			Если Не ДляПечати Тогда
				ОбластьЭтикетки.Параметры.Расшифровка = "ШаблонЭтикетки";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьЭтикетки);
		Иначе
			Область.Параметры.ИспользоватьИндивидуальныйШаблонЭтикетки = НСтр("ru = 'Используется общий для вида шаблон этикетки';
			|en = 'Label template common for the kind is used'");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ИспользоватьИндивидуальныйШаблонЭтикетки";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
			ОбластьЭтикетки = Макет.ПолучитьОбласть("ШаблонЭтикеткиСтрока");
			Если ЗначениеЗаполнено(ВидНоменклатурыШаблоны.ШаблонЭтикетки) Тогда
				ОбластьЭтикетки.Параметры.ШаблонЭтикетки = ВидНоменклатурыШаблоны.ШаблонЭтикетки;
			Иначе
				ОбластьЭтикетки.Параметры.ШаблонЭтикетки =  НСтр("ru = '<не указан>';
				|en = '<not specified>'");
			КонецЕсли;
			Если Не ДляПечати Тогда
				ОбластьЭтикетки.Параметры.Расшифровка = "ШаблонЭтикетки";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьЭтикетки);
		КонецЕсли;

		Область = Макет.ПолучитьОбласть("ИспользоватьИндивидуальныйШаблонЦенникаСтрока");
		Если Объект.ИспользоватьИндивидуальныйШаблонЦенника Тогда
			Область.Параметры.ИспользоватьИндивидуальныйШаблонЦенника = НСтр("ru = 'Индивидуальный шаблон ценника:';
			|en = 'Custom price tag template:'");
			Область.Параметры.Расшифровка = "ИспользоватьИндивидуальныйШаблонЦенника";
			ТабличныйДокументЛево.Вывести(Область);
			ОбластьЦенника = Макет.ПолучитьОбласть("ШаблонЦенникаСтрока");
			ОбластьЦенника.Параметры.ШаблонЦенника = Объект.ШаблонЦенника;
			Если Не ДляПечати Тогда
				ОбластьЦенника.Параметры.Расшифровка = "ШаблонЦенника";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьЦенника);
		Иначе
			Область.Параметры.ИспользоватьИндивидуальныйШаблонЦенника = НСтр("ru = 'Используется общий для вида шаблон ценника';
			|en = 'Price tag template common for the kind is used'");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ИспользоватьИндивидуальныйШаблонЦенника";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(Область);
			ОбластьЦенника = Макет.ПолучитьОбласть("ШаблонЦенникаСтрока");
			Если ЗначениеЗаполнено(ВидНоменклатурыШаблоны.ШаблонЦенника) Тогда
				ОбластьЦенника.Параметры.ШаблонЦенника = ВидНоменклатурыШаблоны.ШаблонЦенника;
			Иначе
				ОбластьЦенника.Параметры.ШаблонЦенника =  НСтр("ru = '<не указан>';
				|en = '<not specified>'");
			КонецЕсли;
			Если Не ДляПечати Тогда
				ОбластьЦенника.Параметры.Расшифровка = "ШаблонЦенника";
			КонецЕсли;
			ТабличныйДокументЛево.Вывести(ОбластьЦенника);
		КонецЕсли;

	КонецЕсли;	

	#КонецОбласти

	ТабличныйДокументКолонки.Присоединить(ТабличныйДокументЛево);

	#КонецОбласти

	#Область ТабличныйДокументПраво

	ТабличныйДокументПраво = Новый ТабличныйДокумент;


	#Область ОсновныеПараметрыУчета

	Если ГлаваВидна("ОсновныеПараметрыУчета", СтруктураВидимости) Тогда 

		ОбластьЗаголовок = Макет.ПолучитьОбласть("ОсновныеПараметрыУчетаЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьЗаголовок);

		Если РазделВиден("Родитель", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Родитель";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "РодительСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "РодительРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.Родитель;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГруппаДоступа", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ГруппаДоступа";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ГруппаДоступаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ГруппаДоступаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.ГруппаДоступа;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ВидНоменклатуры", СтруктураВидимости) Или РазделВиден("ВидНоменклатурыПереключатель", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ВидНоменклатуры";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ВидНоменклатурыСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ВидНоменклатурыРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.ВидНоменклатуры;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ТипНоменклатуры", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ТипНоменклатуры";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ТипНоменклатурыСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ТипНоменклатурыРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.ТипНоменклатуры;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиСоставНабора", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиСоставНабораСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиСоставНабора", Заголовок) Тогда
				Область.Параметры.ГиперссылкаПерейтиСоставНабора = Строка(Заголовок);
				Если РазделВиден("ГиперссылкаПерейтиСоставНабораВнимание", СтруктураВидимости) Тогда
					Область.Область("ГиперссылкаПерейтиСоставНабораВнимание").Картинка = БиблиотекаКартинок.Внимание16;
				КонецЕсли;
			КонецЕсли;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиСоставНабора";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ИспользованиеХарактеристик", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ИспользованиеХарактеристик";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ИспользованиеХарактеристикСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ИспользованиеХарактеристикРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.ИспользованиеХарактеристик;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиХарактеристикиНоменклатуры", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиХарактеристикиНоменклатурыСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиХарактеристикиНоменклатуры", Заголовок) Тогда
				Область.Параметры.ГиперссылкаПерейтиХарактеристикиНоменклатуры = Строка(Заголовок);
			КонецЕсли;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиХарактеристикиНоменклатуры";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;


		Если РазделВиден("НастройкаИспользованияСерий", СтруктураВидимости) Тогда
			НастройкаИспользованияСерий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидНоменклатуры, "НастройкаИспользованияСерий");
			Если Не ЗначениеЗаполнено(НастройкаИспользованияСерий) Тогда
				НастройкаИспользованияСерийСтрока = НСтр("ru = 'Не используются';
				|en = 'Not used'");
			Иначе
				НастройкаИспользованияСерийСтрока = Строка(НастройкаИспользованияСерий);
			КонецЕсли;
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "НастройкаИспользованияСерий";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "НастройкаИспользованияСерийСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "НастройкаИспользованияСерийРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = НастройкаИспользованияСерийСтрока;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ВариантОформленияПродажи", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ВариантОформленияПродажи";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ВариантОформленияПродажиСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ВариантОформленияПродажиРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита =  Объект.ВариантОформленияПродажи;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("СтавкаНДС", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "СтавкаНДС";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "СтавкаНДССтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "СтавкаНДСРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.СтавкаНДС;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиСтавкиНДСНоменклатуры", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиСтавкиНДСНоменклатурыСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиСтавкиНДСНоменклатуры", Заголовок) Тогда
				Область.Параметры.ГиперссылкаПерейтиСтавкиНДСНоменклатуры = Строка(Заголовок);
			КонецЕсли;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиСтавкиНДСНоменклатуры";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

		Если Справочники.Номенклатура.РазделВиден("КодТНВЭД", СтруктураВидимости) Тогда

			СтрокаТНВЭД = "";

			Если ЗначениеЗаполнено(Объект.КодТНВЭД) Тогда
				Шаблон			= НСтр("ru = '%Код% (%Наименование%)';
				|en = '%Код% (%Наименование%)'");
				Наименование	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.КодТНВЭД, "Наименование");

				СтрокаТНВЭД = СтрЗаменить(Шаблон,		"%Код%",			Объект.КодТНВЭД);
				СтрокаТНВЭД = СтрЗаменить(СтрокаТНВЭД,	"%Наименование%",	Наименование);
			КонецЕсли;

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "КодТНВЭД";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "КодТНВЭДСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "КодТНВЭДРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаТНВЭД;
			Справочники.Номенклатура.ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати,ПараметрыВыводаРаздела);

		КонецЕсли;

		Если РазделВиден("Качество", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Качество";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "КачествоСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "КачествоРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.Качество;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиТоварыДругогоКачества", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиТоварыДругогоКачестваСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиТоварыДругогоКачества", Заголовок) Тогда
				Область.Параметры.ГиперссылкаПерейтиТоварыДругогоКачества = Строка(Заголовок);
			КонецЕсли;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиТоварыДругогоКачества";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;
	КонецЕсли;

	#КонецОбласти

	#Область ЕдиницыИзмеренияИОбластьХранения

	Если ГлаваВидна("ЕдиницыИзмеренияИОбластьХранения", СтруктураВидимости) Тогда 

		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЕдиницыИзмеренияИОбластьХраненияЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьЗаголовок);

		Если РазделВиден("ИспользоватьУпаковки", СтруктураВидимости) Тогда 
			Если Объект.ИспользоватьУпаковки Тогда
				Если Объект.НаборУпаковок = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры Тогда
					Набор = НСтр("ru = 'Индивидуальный набор';
					|en = 'Custom set of packaging units'");
				Иначе
					Набор = Объект.НаборУпаковок;
				КонецЕсли;

				ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
				ПараметрыВыводаРаздела.ИмяРаздела = "ИспользоватьУпаковки";
				ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ИспользоватьУпаковкиСтрока";
				ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ИспользоватьУпаковкиРеквизит";
				ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Набор;
				ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
			Иначе
				ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
				ПараметрыВыводаРаздела.ИмяРаздела = "ИспользоватьУпаковки";
				ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ИспользоватьУпаковкиСтрока";
				ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ИспользоватьУпаковкиРеквизит";
				ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = НСтр("ru = 'не используются';
				|en = 'not used'");
				ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
			КонецЕсли;
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиУпаковкиНоменклатуры", СтруктураВидимости) Тогда 
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиУпаковкиНоменклатурыСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиУпаковкиНоменклатуры", Заголовок) Тогда  
				Область.Параметры.ГиперссылкаПерейтиУпаковкиНоменклатуры = Строка(Заголовок);
				Если РазделВиден("ГиперссылкаПерейтиУпаковкиНоменклатурыВнимание", СтруктураВидимости) Тогда 
					Область.Область("ГиперссылкаПерейтиУпаковкиНоменклатурыВнимание").Картинка = БиблиотекаКартинок.Внимание16;
				КонецЕсли;
			КонецЕсли;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиУпаковкиНоменклатуры";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиУпаковкиНабора", СтруктураВидимости) Тогда 
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиУпаковкиНабораСтрока");
			Если СтруктураЗаголовков.Свойство("ГиперссылкаПерейтиУпаковкиНабора", Заголовок) Тогда  
				Область.Параметры.ГиперссылкаПерейтиУпаковкиНабора = Строка(Заголовок);
				Если РазделВиден("ГиперссылкаПерейтиУпаковкиНабораВнимание", СтруктураВидимости) Тогда 
					Область.Область("ГиперссылкаПерейтиУпаковкиНабораВнимание").Картинка = БиблиотекаКартинок.Внимание16;
				КонецЕсли;
			КонецЕсли;
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиУпаковкиНабора";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиПрогнозыРасходаУпаковок", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиПрогнозыРасходаУпаковокСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиПрогнозыРасходаУпаковок";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("ЕдиницаИзмерения", СтруктураВидимости) Тогда

			СтрокаЗаполнения = НСтр("ru = '%ЕдиницаИзмерения%%Тара%';
			|en = '%ЕдиницаИзмерения%%Тара%'");
			Если ЗначениеЗаполнено(Объект.ЕдиницаИзмерения) Тогда
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ЕдиницаИзмерения);
			Иначе
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", НСтр("ru = '<не указана>';
				|en = '<not specified>'"));
			КонецЕсли;

			Если Объект.ПоставляетсяВМногооборотнойТаре Тогда 
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Тара%", НСтр("ru = ', поставляется в таре';
				|en = ', supplied in package'"));
			Иначе
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Тара%", "");
			КонецЕсли;

			СтруктураЗаголовков.Свойство("ЕдиницаИзмерения", Заголовок);

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ЕдиницаИзмерения";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ЕдиницаИзмеренияСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ЕдиницаИзмеренияРеквизит";
			ПараметрыВыводаРаздела.ТекстЗаголовкаРеквизита = Заголовок;
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);

		КонецЕсли;

		Если РазделВиден("НоменклатураМногооборотнаяТара", СтруктураВидимости) Тогда

			СтрокаЗаполнения = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
			Объект.НоменклатураМногооборотнаяТара,
			Объект.ХарактеристикаМногооборотнаяТара);				

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "НоменклатураМногооборотнаяТара";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "НоменклатураМногооборотнаяТараСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "НоменклатураМногооборотнаяТараРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);

		КонецЕсли;

		Если РазделВиден("ЕдиницаДляОтчетов", СтруктураВидимости) Тогда

			СтрокаЗаполнения = НСтр("ru = '<не указана>';
			|en = '<not specified>'");

			Если ЗначениеЗаполнено(Объект.ЕдиницаДляОтчетов) Тогда
				Если Объект.ЕдиницаДляОтчетов <> Объект.ЕдиницаИзмерения Тогда
					СтрокаЗаполнения = НСтр("ru = '%ЕдиницаДляОтчетов%, содержит %Количество% %ЕдиницаИзмерения%';
					|en = '%ЕдиницаДляОтчетов% contains %Количество% %ЕдиницаИзмерения%'");
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество%", Объект.КоэффициентЕдиницыДляОтчетов);
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ЕдиницаИзмерения);
				Иначе
					СтрокаЗаполнения = НСтр("ru = '%ЕдиницаДляОтчетов%';
					|en = '%ЕдиницаДляОтчетов%'");
				КонецЕсли;

				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаДляОтчетов%", Объект.ЕдиницаДляОтчетов);
			КонецЕсли;

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ЕдиницаДляОтчетов";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ЕдиницаДляОтчетовСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ЕдиницаДляОтчетовРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);

		КонецЕсли;

		Если РазделВиден("Вес", СтруктураВидимости) Тогда

			Если Объект.ВесИспользовать Тогда
				СтрокаЗаполнения = НСтр("ru = '%Количество1% %ЕдиницаИзмерения% весит %Количество2% %Единица%, %МожноУказыватьВДокументах%';
				|en = '%Количество1% %ЕдиницаИзмерения% weighs %Количество2% %Единица%, %МожноУказыватьВДокументах%'");
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество1%", Объект.ВесЗнаменатель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество2%", Объект.ВесЧислитель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ЕдиницаИзмерения);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Единица%", Объект.ВесЕдиницаИзмерения);				
				Если Объект.ВесМожноУказыватьВДокументах Тогда
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'можно указывать количество в %ЕдиницаИзмерения% в документах';
					|en = 'you can specify quantity in %ЕдиницаИзмерения% in the documents'"));
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ВесЕдиницаИзмерения);
				Иначе
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'указан справочно';
					|en = 'specified for reference'"));
				КонецЕсли;
			Иначе
				СтрокаЗаполнения = НСтр("ru = '<не измеряется>';
				|en = '<not measured>'");
			КонецЕсли;

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Вес";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ВесСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ВесРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);

		КонецЕсли;


		Если РазделВиден("Объем", СтруктураВидимости) Тогда

			Если Объект.ОбъемИспользовать Тогда
				СтрокаЗаполнения = НСтр("ru = '%Количество1% %ЕдиницаИзмерения% занимает объем %Количество2% %Единица%, %МожноУказыватьВДокументах%';
				|en = '%Количество1% %ЕдиницаИзмерения% of volume %Количество2% %Единица%, %МожноУказыватьВДокументах%'");
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество1%", Объект.ОбъемЗнаменатель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество2%", Объект.ОбъемЧислитель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ЕдиницаИзмерения);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Единица%", Объект.ОбъемЕдиницаИзмерения);				
				Если Объект.ОбъемМожноУказыватьВДокументах Тогда
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'можно указывать количество в %ЕдиницаИзмерения% в документах';
					|en = 'you can specify quantity in %ЕдиницаИзмерения% in the documents'"));
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ОбъемЕдиницаИзмерения);
				Иначе
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'указан справочно';
					|en = 'specified for reference'"));
				КонецЕсли;
			Иначе
				СтрокаЗаполнения = НСтр("ru = '<не измеряется>';
				|en = '<not measured>'");
			КонецЕсли;

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Объем";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ОбъемСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ОбъемРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);

		КонецЕсли;


		Если РазделВиден("Длина", СтруктураВидимости) Тогда

			Если Объект.ДлинаИспользовать Тогда
				СтрокаЗаполнения = НСтр("ru = '%Количество1% %ЕдиницаИзмерения% имеет длину %Количество2% %Единица%, %МожноУказыватьВДокументах%';
				|en = '%Количество1% %ЕдиницаИзмерения% of length %Количество2% %Единица%, %МожноУказыватьВДокументах%'");
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество1%", Объект.ДлинаЗнаменатель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество2%", Объект.ДлинаЧислитель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ЕдиницаИзмерения);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Единица%", Объект.ДлинаЕдиницаИзмерения);				
				Если Объект.ДлинаМожноУказыватьВДокументах Тогда
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'можно указывать количество в %ЕдиницаИзмерения% в документах';
					|en = 'you can specify quantity in %ЕдиницаИзмерения% in the documents'"));
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ДлинаЕдиницаИзмерения);
				Иначе
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'указана справочно';
					|en = 'specified for reference'"));
				КонецЕсли;
			Иначе
				СтрокаЗаполнения = НСтр("ru = '<не измеряется>';
				|en = '<not measured>'");
			КонецЕсли;

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Длина";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ДлинаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ДлинаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);

		КонецЕсли;

		Если РазделВиден("Площадь", СтруктураВидимости) Тогда

			Если Объект.ПлощадьИспользовать Тогда
				СтрокаЗаполнения = НСтр("ru = '%Количество1% %ЕдиницаИзмерения% имеет площадь %Количество2% %Единица%, %МожноУказыватьВДокументах%';
				|en = '%Количество1% %ЕдиницаИзмерения% of size %Количество2% %Единица%, %МожноУказыватьВДокументах%'");
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество1%", Объект.ПлощадьЗнаменатель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Количество2%", Объект.ПлощадьЧислитель);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ЕдиницаИзмерения);
				СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%Единица%", Объект.ПлощадьЕдиницаИзмерения);				
				Если Объект.ПлощадьМожноУказыватьВДокументах Тогда
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'можно указывать количество в %ЕдиницаИзмерения% в документах';
					|en = 'you can specify quantity in %ЕдиницаИзмерения% in the documents'"));
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмерения%", Объект.ПлощадьЕдиницаИзмерения);
				Иначе
					СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%МожноУказыватьВДокументах%", НСтр("ru = 'указана справочно';
					|en = 'specified for reference'"));
				КонецЕсли;
			Иначе
				СтрокаЗаполнения = НСтр("ru = '<не измеряется>';
				|en = '<not measured>'");
			КонецЕсли;

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "Площадь";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ПлощадьСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ПлощадьРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("СкладскаяГруппа", СтруктураВидимости) Тогда 
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "СкладскаяГруппа";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "СкладскаяГруппаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "СкладскаяГруппаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.СкладскаяГруппа;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиРазмещениеНоменклатуры", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиРазмещениеНоменклатурыСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиРазмещениеНоменклатуры";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

		Если РазделВиден("СрокГодности", СтруктураВидимости) Тогда
			СтрокаЗаполнения = НСтр("ru = '%СрокГодности% %ЕдиницаИзмеренияСрокаГодности%';
			|en = '%СрокГодности% %ЕдиницаИзмеренияСрокаГодности%'");
			СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%СрокГодности%", Объект.СрокГодности);
			СтрокаЗаполнения = СтрЗаменить(СтрокаЗаполнения, "%ЕдиницаИзмеренияСрокаГодности%", Объект.ЕдиницаИзмеренияСрокаГодности);

			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "СрокГодности";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "СрокГодностиСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "СрокГодностиРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = СтрокаЗаполнения;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

	КонецЕсли;

	#КонецОбласти

	#Область ФинансовыйУчет

	Если ГлаваВидна("ФинансовыйУчет", СтруктураВидимости) Тогда 

		ОбластьЗаголовок = Макет.ПолучитьОбласть("ФинансовыйУчетЗаголовок");
		ТабличныйДокументПраво.Вывести(ОбластьЗаголовок);

		Если РазделВиден("ГруппаАналитическогоУчета", СтруктураВидимости) Тогда 
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ГруппаАналитическогоУчета";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ГруппаАналитическогоУчетаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ГруппаАналитическогоУчетаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.ГруппаАналитическогоУчета;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);	 
		КонецЕсли;

		Если РазделВиден("ГруппаФинансовогоУчета", СтруктураВидимости) Тогда
			ПараметрыВыводаРаздела = ПараметрыВыводаРазделаСУчетомРазмераЗначений();
			ПараметрыВыводаРаздела.ИмяРаздела = "ГруппаФинансовогоУчета";
			ПараметрыВыводаРаздела.ИмяОбластиСтрока = "ГруппаФинансовогоУчетаСтрока";
			ПараметрыВыводаРаздела.ИмяПараметраРеквизит = "ГруппаФинансовогоУчетаРеквизит";
			ПараметрыВыводаРаздела.ТекстЗначенияРеквизита = Объект.ГруппаФинансовогоУчета;
			ВывестиРазделСУчетомРазмераЗначений(ТабличныйДокументПраво, Макет, ДляПечати, ПараметрыВыводаРаздела);
		КонецЕсли;

		Если РазделВиден("ГиперссылкаПерейтиРаспределениеПродажПоНаправлениямДеятельности", СтруктураВидимости) Тогда
			Область = Макет.ПолучитьОбласть("ГиперссылкаПерейтиРаспределениеПродажПоНаправлениямДеятельностиСтрока");
			Если Не ДляПечати Тогда
				Область.Параметры.Расшифровка = "ГиперссылкаПерейтиРаспределениеПродажПоНаправлениямДеятельности";
			КонецЕсли;
			ТабличныйДокументПраво.Вывести(Область);
		КонецЕсли;

	КонецЕсли;

	#КонецОбласти

	НоменклатураЛокализация.ВывестиГлавы(ТабличныйДокументПраво, Объект, НастройкиВидимостиИЗаголовков, ДляПечати);

	ТабличныйДокументКолонки.Присоединить(ТабличныйДокументПраво);

	#КонецОбласти

	ТабличныйДокументКарточка.Вывести(ТабличныйДокументКолонки);

	Возврат ТабличныйДокументКарточка;

КонецФункции

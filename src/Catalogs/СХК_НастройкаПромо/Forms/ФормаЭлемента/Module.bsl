
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Наименование = Пользователи.ТекущийПользователь();
		Объект.Автор = Пользователи.ТекущийПользователь(); 
		Если Объект.СписокПользователей.Количество() = 0 Тогда 
			Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое;
			ЗаполнитьСписокПользователей();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПользователей() 
	
	Объект.СписокПользователей.Очистить();
	П5 = "";   
	
	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое Тогда
		П1 = Справочники.Пользователи.НайтиПоНаименованию("Борунов Даниил Леонидович");
	ИначеЕсли Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое Тогда
		П1 = Справочники.Пользователи.НайтиПоНаименованию("Кулакова Яна");
	Иначе
		П1 = Справочники.Пользователи.НайтиПоНаименованию("Борунов Даниил Леонидович");
		П5 = Справочники.Пользователи.НайтиПоНаименованию("Кулакова Яна");
	КонецЕсли  ;
	
	
	П2 = Справочники.Пользователи.НайтиПоНаименованию("Пьянов Руслан Михайлович");
	П3 = Справочники.Пользователи.НайтиПоНаименованию("Подчиненова Нелли Александровна");
	П4 = Справочники.Пользователи.НайтиПоНаименованию("Буланова Юлия Евгеньевна");
	
	Попытка
		Т = Объект.СписокПользователей.Добавить();
		Т.СогласующееЛицо = П1  ;
		Т.АдресЭл = П1.КонтактнаяИнформация[0].АдресЭП;
	Исключение 
		
	КонецПопытки;
	
	Попытка
		Т = Объект.СписокПользователей.Добавить();
		Т.СогласующееЛицо = П2 ;
		Т.АдресЭл = П2.КонтактнаяИнформация[0].АдресЭП;
	Исключение 
		
	КонецПопытки;
	
	Попытка
		Т = Объект.СписокПользователей.Добавить();
		Т.СогласующееЛицо = П3 ; 
		Т.АдресЭл = П3.КонтактнаяИнформация[0].АдресЭП;
	Исключение  
		
	КонецПопытки;
	
	Попытка
		Т = Объект.СписокПользователей.Добавить();
		Т.СогласующееЛицо = П4; 
		Т.АдресЭл = П4.КонтактнаяИнформация[0].АдресЭП;	
	Исключение  
		
	КонецПопытки;
	
	Если П5 <> "" Тогда
		Попытка
			Т = Объект.СписокПользователей.Добавить();
			Т.СогласующееЛицо = П5; 
			Т.АдресЭл = П5.КонтактнаяИнформация[0].АдресЭП;	
		Исключение  
			
		КонецПопытки; 
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПочту(П) 
	Попытка
		Возврат Справочники.Пользователи.НайтиПоНаименованию(П).КонтактнаяИнформация[0].АдресЭП ;
	Исключение
		Возврат "";
	КонецПопытки;
	

КонецФункции

&НаКлиенте
Процедура СписокПользователейПриИзменении(Элемент)  
	Если СтрДлина(Элемент.ТекущиеДанные.СогласующееЛицо) > 1 Тогда 
		Элемент.ТекущиеДанные.АдресЭл = ПолучитьПочту(Элемент.ТекущиеДанные.СогласующееЛицо);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователейПередУдалением(Элемент, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТипПромоПриИзменении(Элемент)
	ЗаполнитьСписокПользователей();
КонецПроцедуры



//&НаКлиенте
//Процедура Подбор(Команда)
// 
//	ПараметрыФормы = Новый Структура;
//	ПараметрыФормы.Вставить("РежимВыбора",Истина);
//	ПараметрыФормы.Вставить("МножественныйВыбор",Истина); ///Если хотим несколько значений
//    
//	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"ПодборРеализации");

//	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора",ПараметрыФормы,
//	        ЭтаФорма, , , , ОбработкаВыбора);

//КонецПроцедуры

//&НаКлиенте
//Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт

//   //Дополнительные условия если необходимо
//   //Если ДопПараметры = "ПодборРеализации" тогда

//    Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
//        Возврат;
//    КонецЕсли;
//     
//    МассивДокументов = Значение ///Если Множественный Выбор - то вернется массив 
//    

//    //КонецЕсли;
//КонецПроцедуры
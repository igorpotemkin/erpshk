// Процедура обновляет структуру данных кросс-таблицы плана
//
// Параметры:
//  Форма  				- ФормаКлиентскогоПриложения - форма в которой необходимо создать таблицу периодов
//  Параметры  			- Структура - параметры формирования кросс-таблицы:
//  * ИмяРеквизитаКроссТаблицы - Строка - 
//  * ЭлементФормыКроссТаблицы - Строка - 
//  * ТаблицаПериодов - см. ТаблицаПериоды
//  * ВыводитьПредыдущийПериод - Булево - 
//  * Периодичность - ПеречислениеСсылка.Периодичность - 
//  * Поля - Массив из см. СтруктураПоля -
//
Процедура СХК_ОбновитьСтруктуруВыводаКроссТаблицы(Форма, Параметры) Экспорт
	
	ИмяРеквизитаКроссТаблицы = Параметры.ИмяРеквизитаКроссТаблицы;
	ЭлементФормыКроссТаблицы = Параметры.ЭлементФормыКроссТаблицы;
	ТаблицаПериодов = Параметры.ТаблицаПериодов;
	Поля = Параметры.Поля;
	
	Если Параметры.Свойство("ВыводитьПредыдущийПериод") Тогда
		ВыводитьПредыдущийПериод = Параметры.ВыводитьПредыдущийПериод;
	Иначе
		ВыводитьПредыдущийПериод = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("СоздаватьГруппуПериода") Тогда
		СоздаватьГруппуПериода = Параметры.СоздаватьГруппуПериода;
	Иначе
		СоздаватьГруппуПериода = Ложь;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив();
	УдаляемыеРеквизиты = Новый Массив();
	РеквизитыТаблицыПлана = Форма.ПолучитьРеквизиты(ИмяРеквизитаКроссТаблицы);
	РеквизитыВерхнегоУровня = Форма.ПолучитьРеквизиты();
	
	Для Каждого Реквизит Из РеквизитыТаблицыПлана Цикл
		Если СтрНайти(Реквизит.Имя, "_") <> 0 Тогда
			УдаляемыеРеквизиты.Добавить(ИмяРеквизитаКроссТаблицы+"." + Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	СоответствиеРеквизитовТаблицыПлана = Новый Соответствие;
	Для Каждого Реквизит Из РеквизитыТаблицыПлана Цикл
		СоответствиеРеквизитовТаблицыПлана.Вставить(Реквизит.Имя, Истина);
	КонецЦикла;
	
	СоответствиеРеквизитовВерхнегоУровня = Новый Соответствие;
	Для Каждого Реквизит Из РеквизитыВерхнегоУровня Цикл
		СоответствиеРеквизитовВерхнегоУровня.Вставить(Реквизит.Имя, Истина);
	КонецЦикла;
	
	Для каждого СтруктураПоля Из Поля Цикл
		
		Если СтруктураПоля.Свойство("СоздаватьРеквизит") Тогда
			СоздаватьРеквизит = СтруктураПоля.СоздаватьРеквизит;
		Иначе
			СоздаватьРеквизит = Истина;
		КонецЕсли;
		
		ПрефиксРеквизитаКолонки = СтруктураПоля.ПрефиксРеквизитаКолонки;
		Если СтруктураПоля.Свойство("УдалятьРеквизитыТаблицы") Тогда
			УдалятьРеквизитыТаблицы = СтруктураПоля.УдалятьРеквизитыТаблицы;
		Иначе
			УдалятьРеквизитыТаблицы = Ложь;
		КонецЕсли;
		
		// Реквизиты не подлежащие удалению
		Если СоздаватьРеквизит Тогда
			
			Для каждого СтрокаПериода Из ТаблицаПериодов Цикл
				
				ИндексУдаляемогоЭлемента = УдаляемыеРеквизиты.Найти(ИмяРеквизитаКроссТаблицы+"." + ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки);
				Если ИндексУдаляемогоЭлемента <> Неопределено Тогда
					УдаляемыеРеквизиты.Удалить(ИндексУдаляемогоЭлемента);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если НЕ СоздаватьРеквизит Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтруктураПоля.Свойство("ТипЭлемента") Тогда
			ТипЭлемента = СтруктураПоля.ТипЭлемента;
		Иначе
			ТипЭлемента = "Число";
		КонецЕсли;
		Если СтруктураПоля.Свойство("СоздаватьИтоговыеРеквизиты") Тогда
			СоздаватьИтоговыеРеквизиты = СтруктураПоля.СоздаватьИтоговыеРеквизиты;
		Иначе
			СоздаватьИтоговыеРеквизиты = Ложь;
		КонецЕсли;
		Если СтруктураПоля.Свойство("РасширенныйФорматЧислаДаты") Тогда
			РасширенныйФорматЧислаДаты = СтруктураПоля.РасширенныйФорматЧислаДаты;
		Иначе
			РасширенныйФорматЧислаДаты = Ложь;
		КонецЕсли;
				
		Если СоздаватьИтоговыеРеквизиты И ТипЭлемента <> "Число" И ТипЗнч(ТипЭлемента) <> Тип("ОписаниеТипов") Тогда
			СоздаватьИтоговыеРеквизиты = Ложь;
		КонецЕсли;
		
		Если ТипЗнч(ТипЭлемента) = Тип("ОписаниеТипов") Тогда
			ОписаниеТипов = ТипЭлемента;
		ИначеЕсли ТипЭлемента = "Булево" Тогда
			ОписаниеТипов = Новый ОписаниеТипов("Булево");
		ИначеЕсли ТипЭлемента = "Дата" Тогда
			
			Если РасширенныйФорматЧислаДаты Тогда
				ОписаниеТипов = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя);
			Иначе
				ОписаниеТипов = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата);
			КонецЕсли;
		Иначе
			
			Если РасширенныйФорматЧислаДаты Тогда
				ОписаниеТипов = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 5);
			Иначе
				ОписаниеТипов = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 3); 
			КонецЕсли; 
			
		КонецЕсли;
		
		// Создание реквизитов таблицы
		Для каждого СтрокаПериода Из ТаблицаПериодов Цикл
		
			ИмяРеквизита = ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки;
			Если СоответствиеРеквизитовТаблицыПлана[ИмяРеквизита] = Истина Тогда
				Реквизит.Заголовок = СтрокаПериода.Заголовок;
				
				Продолжить;
			КонецЕсли; 
			
			Реквизит = Новый РеквизитФормы(ИмяРеквизита, ОписаниеТипов, ИмяРеквизитаКроссТаблицы,
				СтрокаПериода.Заголовок);
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			
		КонецЦикла;
		
		// Создаем итоговые реквизиты 
		Если СоздаватьИтоговыеРеквизиты Тогда
			Для каждого СтрокаПериода Из ТаблицаПериодов Цикл
				Если НЕ СтрокаПериода.Активная Тогда
					Продолжить;
				КонецЕсли; 
				
				ИмяРеквизита = СтрЗаменить(ИмяРеквизитаКроссТаблицы + ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки,".","_");
				Если СоответствиеРеквизитовВерхнегоУровня[ИмяРеквизита] = Истина Тогда
					Продолжить;
				КонецЕсли; 
				
				ПрефиксРеквизита = НСтр("ru = 'Итого';
										|en = 'Total'");
				
				Реквизит = Новый РеквизитФормы(ИмяРеквизита, ОписаниеТипов,
					, ПрефиксРеквизита + " " + СтрокаПериода.Заголовок);
				ДобавляемыеРеквизиты.Добавить(Реквизит);
				
			КонецЦикла;       
		КонецЕсли;
		
	КонецЦикла;

	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты);
	
	Если Не ЗначениеЗаполнено(ЭлементФормыКроссТаблицы) Тогда
		Возврат;
	КонецЕсли;
	
	// Удаление элементов формы
	УдаляемыеЭлементы = Новый Массив();
	КроссТаблица = Форма.Элементы[ЭлементФормыКроссТаблицы]; // ТаблицаФормы - 
	Для Каждого ТекЭлемент Из КроссТаблица.ПодчиненныеЭлементы Цикл
		Если СтрНайти(ТекЭлемент.Имя, ЭлементФормыКроссТаблицы + "ГруппаРеквизитов") Тогда
			УдаляемыеЭлементы.Добавить(ТекЭлемент);
			Продолжить;
		КонецЕсли;
		ЭлементНайден = Ложь;
		Для каждого СтрокаПериода Из ТаблицаПериодов Цикл
			Если  СтрНайти(ТекЭлемент.Имя, ЭлементФормыКроссТаблицы + "Группа"+СтрокаПериода.ИмяКолонки) Тогда
				УдаляемыеЭлементы.Добавить(ТекЭлемент);
				ЭлементНайден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементНайден Тогда
			Продолжить;
		КонецЕсли; 
		Для каждого СтруктураПоля Из Поля Цикл
			ПрефиксРеквизитаКолонки = СтруктураПоля.ПрефиксРеквизитаКолонки;
			Если СтрНайти(ТекЭлемент.Имя, ПрефиксРеквизитаКолонки) > 0  Тогда
				УдаляемыеЭлементы.Добавить(ТекЭлемент);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Форма.Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;
	
	ВладелецПоля = Форма.Элементы[ЭлементФормыКроссТаблицы];
	
	Для каждого СтрокаПериода Из ТаблицаПериодов Цикл
		Если НЕ СтрокаПериода.Активная Тогда
			Продолжить;
		КонецЕсли; 
		
		ЭлементДляПодвала = Неопределено;
		
		Если СоздаватьГруппуПериода Тогда
			НайденныеСтроки = ТаблицаПериодов.НайтиСтроки(Новый Структура("Активная", Истина));
			Если НайденныеСтроки.Количество() > 1 Тогда
				ЭлементФормы = Форма.Элементы.Добавить(ЭлементФормыКроссТаблицы + "Группа"+СтрокаПериода.ИмяКолонки, Тип("ГруппаФормы"), 
					Форма.Элементы[ЭлементФормыКроссТаблицы]);
				ЭлементФормы.Группировка      = ГруппировкаКолонок.Горизонтальная;
				ЭлементФормы.ОтображатьВШапке = Истина;
				ЭлементФормы.Заголовок        = СтрокаПериода.Заголовок;
				
				ВладелецПоля = ЭлементФормы;
				//              
					ЭлементФормыНеделя = Форма.Элементы.Добавить(ЭлементФормыКроссТаблицы + "Неделя"+СтрокаПериода.ИмяКолонки, Тип("ГруппаФормы"), 
					Форма.Элементы[ВладелецПоля.Имя]);
					ЭлементФормыНеделя.Группировка      = ГруппировкаКолонок.Горизонтальная;
					ЭлементФормыНеделя.ОтображатьВШапке = Истина;
					ЭлементФормыНеделя.Заголовок        = СтрокаПериода.Заголовок + " по неделям";
					
					ВладелецПоляНеделя = ЭлементФормыНеделя; 
		
				//
			Иначе
				ВладелецПоля = Форма.Элементы[ЭлементФормыКроссТаблицы];
			КонецЕсли;
		КонецЕсли;
		
		Для каждого СтруктураПоля Из Поля Цикл
			ПрефиксРеквизитаКолонки = СтруктураПоля.ПрефиксРеквизитаКолонки;
			Если СтруктураПоля.Свойство("СоздаватьЭлемент") Тогда
				СоздаватьЭлемент = СтруктураПоля.СоздаватьЭлемент;
			Иначе
				СоздаватьЭлемент = Истина;
			КонецЕсли;
			Если СтруктураПоля.Свойство("СоздаватьИтоговыеРеквизиты") Тогда
				СоздаватьИтоговыеРеквизиты = СтруктураПоля.СоздаватьИтоговыеРеквизиты;
			Иначе
				СоздаватьИтоговыеРеквизиты = Ложь;
			КонецЕсли;
			Если СтруктураПоля.Свойство("ПоказыватьИтоговыеРеквизитыВПредыдущемЭлементе") Тогда
				ПоказыватьИтоговыеРеквизитыВПредыдущемЭлементе = СтруктураПоля.ПоказыватьИтоговыеРеквизитыВПредыдущемЭлементе;
			Иначе
				ПоказыватьИтоговыеРеквизитыВПредыдущемЭлементе = Ложь;
			КонецЕсли;
			Если СтруктураПоля.Свойство("ПоказыватьИтоговыеРеквизитыВГруппе") Тогда
				ПоказыватьИтоговыеРеквизитыВГруппе = СтруктураПоля.ПоказыватьИтоговыеРеквизитыВГруппе;
			Иначе
				ПоказыватьИтоговыеРеквизитыВГруппе = Ложь;
			КонецЕсли;
			Если СтруктураПоля.Свойство("ШиринаЭлемента") Тогда
				ШиринаЭлемента = СтруктураПоля.ШиринаЭлемента;
			Иначе
				ШиринаЭлемента = 6;
			КонецЕсли;
			Если СтруктураПоля.Свойство("СтруктураДействий") Тогда
				СтруктураДействий = СтруктураПоля.СтруктураДействий;
			Иначе
				СтруктураДействий = Новый Структура();
			КонецЕсли;
			Если СтруктураПоля.Свойство("ТипЭлементаФормы") Тогда
				ТипЭлементаФормы = СтруктураПоля.ТипЭлементаФормы;
			Иначе
				ТипЭлементаФормы = Тип("ПолеФормы");
			КонецЕсли;
			Если СтруктураПоля.Свойство("ВидПоля") Тогда
				ВидПоля = СтруктураПоля.ВидПоля;
			Иначе
				ВидПоля = ВидПоляФормы.ПолеВвода;
			КонецЕсли;
			Если СтруктураПоля.Свойство("ПрефиксГруппы") Тогда
				РодительЭлемента = Форма.Элементы[ЭлементФормыКроссТаблицы + СтруктураПоля.ПрефиксГруппы + СтрокаПериода.ИмяКолонки];
			Иначе
				РодительЭлемента = ВладелецПоля;
			КонецЕсли;
			
			Если СоздаватьЭлемент Тогда
				// Перепривязываем данные
				// Создание элементов формы 
				Если ПрефиксРеквизитаКолонки = "КоличествоНеделя1_" ИЛИ 
					ПрефиксРеквизитаКолонки = "КоличествоНеделя2_" ИЛИ
					ПрефиксРеквизитаКолонки = "КоличествоНеделя3_" ИЛИ
					ПрефиксРеквизитаКолонки = "КоличествоНеделя4_" Тогда
					Элемент = Форма.Элементы.Добавить(ЭлементФормыКроссТаблицы + ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки, 
						ТипЭлементаФормы, ВладелецПоляНеделя);
					Иначе
						Элемент = Форма.Элементы.Добавить(ЭлементФормыКроссТаблицы + ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки,ТипЭлементаФормы, РодительЭлемента); 
							
				КонецЕсли;
				Элемент.Вид = ВидПоля;
				Если ТипЭлементаФормы = Тип("ПолеФормы") ИЛИ ТипЭлементаФормы = Тип("ТаблицаФормы") Тогда
					Элемент.ПутьКДанным = ИмяРеквизитаКроссТаблицы+"."+ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки;
				КонецЕсли;
				
				Если Элемент.Вид <> ВидПоляФормы.ПолеФлажка Тогда
					Элемент.Ширина = ШиринаЭлемента;
				КонецЕсли; 
				Если СтруктураПоля.Свойство("Заголовок") Тогда
					Если ЗначениеЗаполнено(СтруктураПоля.Заголовок) Тогда
						Элемент.Заголовок = СтруктураПоля.Заголовок;
					Иначе
						Элемент.Заголовок = СтрокаПериода.Заголовок;
					КонецЕсли;
				ИначеЕсли СтруктураПоля.ПрефиксРеквизитаКолонки = "Количество_" Тогда
					Элемент.Заголовок = СтрокаПериода.Заголовок;
				Иначе
					Элемент.Заголовок = СтрЗаменить(СтруктураПоля.ПрефиксРеквизитаКолонки, "_", " ") + СтрокаПериода.Заголовок;
				КонецЕсли;
				Если СтруктураПоля.Свойство("СвойстваЭлемента") И ТипЗнч(СтруктураПоля.СвойстваЭлемента) = Тип("Структура") Тогда
					ЗаполнитьЗначенияСвойств(Элемент, СтруктураПоля.СвойстваЭлемента);
				КонецЕсли; 
				Для каждого Действие Из СтруктураДействий Цикл
					Элемент.УстановитьДействие(Действие.Ключ, Действие.Значение);
				КонецЦикла;
				
				ЭлементДляПодвала = Элемент; 
			КонецЕсли;
			
			Если СоздаватьИтоговыеРеквизиты 
				И (СоздаватьЭлемент 
					ИЛИ ПоказыватьИтоговыеРеквизитыВПредыдущемЭлементе 
					ИЛИ ПоказыватьИтоговыеРеквизитыВГруппе) Тогда
				Если (СоздаватьЭлемент ИЛИ ПоказыватьИтоговыеРеквизитыВПредыдущемЭлементе) И ЭлементДляПодвала <> Неопределено Тогда
					ЭлементДляПодвала.ПутьКДаннымПодвала = СтрЗаменить(ИмяРеквизитаКроссТаблицы + ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки, ".","_");
				КонецЕсли;
				
				Если ПоказыватьИтоговыеРеквизитыВГруппе 
					// И СоздаватьГруппуПериода 
					И ВладелецПоля <> Неопределено 
					И ТипЗнч(ВладелецПоля) = Тип("ГруппаФормы") 
					И ВладелецПоля.ОтображатьВШапке Тогда
					Если НЕ ПустаяСтрока(ВладелецПоля.Заголовок) Тогда
						ВладелецПоля.Заголовок = ВладелецПоля.Заголовок + ": ";
					КонецЕсли; 
					ВладелецПоля.ПутьКДаннымШапки = СтрЗаменить(ИмяРеквизитаКроссТаблицы + ПрефиксРеквизитаКолонки + СтрокаПериода.ИмяКолонки, ".","_");
					ВладелецПоля.ФорматШапки = "ЧДЦ=2; ЧН=0,00";
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла; 
		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПолеКроссТаблицыКоличествоНеделя(ПараметрыВывода, СоздаватьЭлемент = Истина, 
	ЕстьПрефиксГруппыКомментария = Ложь, ЕстьЗаголовок = Истина, СтруктураДействий = Неопределено,НомерНедели) Экспорт 

	Если НЕ ПараметрыВывода.Свойство("Поля") Тогда
		ПараметрыВывода.Вставить("Поля", Новый Массив());
	КонецЕсли;
	
	СтруктураПоля = Новый Структура;
	СтруктураПоля.Вставить("ПрефиксРеквизитаКолонки", "КоличествоНеделя"+НомерНедели+"_");
	СтруктураПоля.Вставить("УдалятьРеквизитыТаблицы", Истина);
	Если ЕстьПрефиксГруппыКомментария Тогда
		СтруктураПоля.Вставить("ПрефиксГруппы", "ГруппаКомментарий_");
	КонецЕсли; 
	СтруктураПоля.Вставить("СоздаватьЭлемент", СоздаватьЭлемент);
	СтруктураПоля.Вставить("ТипЭлемента", "Число");
	Если ЕстьЗаголовок Тогда
		СтруктураПоля.Вставить("Заголовок", Строка("Неделя № "+НомерНедели));
	КонецЕсли;
	СтруктураПоля.Вставить("СоздаватьИтоговыеРеквизиты", Ложь);
	СтруктураПоля.Вставить("ШиринаЭлемента", 6);
	СтруктураПоля.Вставить("СвойстваЭлемента", Новый Структура());
	СтруктураПоля.СвойстваЭлемента.Вставить("ВыделятьОтрицательные", Истина);
	
	Если СтруктураДействий <> Неопределено Тогда
		СтруктураПоля.Вставить("СтруктураДействий", СтруктураДействий);
	КонецЕсли; 
	
	ПараметрыВывода.Поля.Добавить(СтруктураПоля);

КонецПроцедуры 



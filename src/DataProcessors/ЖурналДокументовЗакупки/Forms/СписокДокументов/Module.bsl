&НаСервере
Процедура Расш1_КомандаУстановитьОригинаНеполученПослеНаСервере(ВыделенныеСтроки)
    Для Каждого Строка Из ВыделенныеСтроки Цикл
        ЕСли ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")или ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ПоступлениеУслугПоАренде")или ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов") Тогда
            НаборЗаписей = РегистрыСведений.СтатусыДокументов.СоздатьНаборЗаписей();
            НаборЗаписей.Отбор.Документ.Установить(Строка.Ссылка);
            НаборЗаписей.Прочитать();
            НаборЗаписей.Очистить();
            Запись = НаборЗаписей.Добавить();
            ЗаполнитьЗначенияСвойств(Запись, Строка);
            Запись.Документ = Строка.Ссылка;
            Запись.Статус = Перечисления.СтатусыДокументовПоступления.ОригиналНеПолучен;
            НаборЗаписей.Записать(1);
        КонецЕСли;
 
    КонецЦикла;
КонецПроцедуры
 
&НаКлиенте
Процедура Расш1_КомандаУстановитьОригинаНеполученПосле(Команда)
 
    ВыделенныеСтроки = Элементы.СписокДокументыЗакупки.ВыделенныеСтроки;
    Расш1_КомандаУстановитьОригинаНеполученПослеНаСервере(ВыделенныеСтроки);
    Элементы.СписокДокументыЗакупки.Обновить();
 
КонецПроцедуры
 
&НаСервере
Процедура Расш1_КомандаУстановитСтатусПолученПослеНаСервере(ВыделенныеСтроки)
Для Каждого Строка Из ВыделенныеСтроки Цикл
    ЕСли ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")или ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ПоступлениеУслугПоАренде")или ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов") Тогда
        НаборЗаписей = РегистрыСведений.СтатусыДокументов.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.Документ.Установить(Строка.Ссылка);
        НаборЗаписей.Прочитать();
        НаборЗаписей.Очистить();
        Запись = НаборЗаписей.Добавить();
        ЗаполнитьЗначенияСвойств(Запись, Строка);
        Запись.Документ = Строка.Ссылка;
        Запись.Статус = Перечисления.СтатусыДокументовПоступления.ОригиналПолучен;
        НаборЗаписей.Записать(1);
    КонецЕсли;
 
КонецЦикла;
КонецПроцедуры
 
&НаКлиенте
Процедура Расш1_КомандаУстановитСтатусПолученПосле(Команда)
    ВыделенныеСтроки = Элементы.СписокДокументыЗакупки.ВыделенныеСтроки;
    Расш1_КомандаУстановитСтатусПолученПослеНаСервере(ВыделенныеСтроки);
    Элементы.СписокДокументыЗакупки.Обновить();
    
КонецПроцедуры

&НаСервере
Процедура Расш1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//zaitsev@syspod.ru 77897
			ТаблицаФормы = Элементы.СписокДокументыЗакупки;
			КолонкаВставки = ТаблицаФормы.ПодчиненныеЭлементы.Найти("ГруппаОперацияТип");	 
			НовыйЭлемент = Элементы.Вставить("ЕстьФайлыСкрепка", Тип("ПолеФормы"), ТаблицаФормы, КолонкаВставки);	
			СписокДокументыЗакупки.ТекстЗапроса=СтрЗаменить(СписокДокументыЗакупки.ТекстЗапроса, "РеестрДокументов.НомерДокументаИБ КАК Номер,", "РеестрДокументов.НомерДокументаИБ КАК Номер,"+Символы.ПС+"НаличиеПрисоединенныхФайлов.ЕстьФайлы КАК ЕстьФайлыСкрепка,");
			СписокДокументыЗакупки.ТекстЗапроса=СтрЗаменить(СписокДокументыЗакупки.ТекстЗапроса,"РегистрСведений.РеестрДокументов КАК РеестрДокументов","РегистрСведений.РеестрДокументов КАК РеестрДокументов"+Символы.ПС+"{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеПрисоединенныхФайлов ПО РеестрДокументов.Ссылка = НаличиеПрисоединенныхФайлов.ОбъектСФайлами}");
			НовыйЭлемент.ПутьКДанным = "СписокДокументыЗакупки.ЕстьФайлыСкрепка"; 
			//Сообщить(СписокДокументыЗакупки.ТекстЗапроса);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки;
			НовыйЭлемент.КартинкаЗначений=БиблиотекаКартинок.Скрепка;  
			НовыйЭлемент.КартинкаШапки=БиблиотекаКартинок.Скрепка; 
			НовыйЭлемент.ПоложениеЗаголовка=ПоложениеЗаголовкаЭлементаФормы.Нет;
       //zaitsev@syspod.ru 77897

КонецПроцедуры
//zaitsev@syspod.ru 77897
&НаКлиенте
Процедура Расш1_СписокДокументыЗакупкиВыборПосле(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		Если Поле.Имя = "ЕстьФайлыСкрепка" Тогда
		СтандартнаяОбработка = Ложь;
		СтрокаСписка = Элементы.СписокДокументыЗакупки.ТекущиеДанные;
		ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
			Новый Структура("ВладелецФайла", СтрокаСписка.Ссылка),
			ЭтаФорма);
	КонецЕсли;
	
	Если Поле = Элементы.СостояниеЭДО Тогда
		// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
		ОбменСКонтрагентамиКлиент.СостояниеЭДОНажатие_ФормаСписка(ВыбраннаяСтрока, СтандартнаяОбработка);
		// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	КонецЕсли;
КонецПроцедуры
//zaitsev@syspod.ru 77897

//&Вместо("ТекстЗапросаСписокДокументыЗакупки")
//Функция ТекстЗапросаСписокДокументыЗакупкиВместо()
//	
//	ТекстЗапроса =
//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	РеестрДокументов.Ссылка,
//	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
//	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
//	|	РеестрДокументов.Статус,
//	|	РеестрДокументов.Проведен,
//	|	РеестрДокументов.ПометкаУдаления,
//	|	РеестрДокументов.ХозяйственнаяОперация,
//	|	РеестрДокументов.Партнер,
//	|	РеестрДокументов.Контрагент,
//	|	РеестрДокументов.Договор,
//	|	РеестрДокументов.Организация,
//	|	РеестрДокументов.Подразделение,
//	|	РеестрДокументов.МестоХранения КАК Склад,
//	|	РеестрДокументов.Валюта,
//	|	РеестрДокументов.Сумма КАК СуммаДокумента,
//	|	РеестрДокументов.Ответственный КАК Менеджер,
//	|	РеестрДокументов.Комментарий,
//	|	РеестрДокументов.НомерПервичногоДокумента КАК НомерВходящегоДокумента,
//	|	РеестрДокументов.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
//	|	РеестрДокументов.Дополнительно,
//	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами	
//	|	СостоянияЭД.СостояниеЭДО,
//	|	СостоянияЭД.ПредставлениеСостояния КАК ПредставлениеСостояния,
//	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	|	ВЫБОР
//	|		КОГДА ДокументыСОшибкамиПроверкиКонтрагентов.Документ ЕСТЬ NULL 
//	|			ТОГДА ЛОЖЬ
//	|		ИНАЧЕ ИСТИНА
//	|	КОНЕЦ КАК ЕстьОшибкиПроверкиКонтрагентов,
//	|	ВЫБОР
//	|		КОГДА РеестрДокументов.Проведен
//	|			ТОГДА 0
//	|		КОГДА РеестрДокументов.ПометкаУдаления
//	|			ТОГДА 1
//	|		ИНАЧЕ 2
//	|	КОНЕЦ КАК НестандартнаяКартинка,
//	|	РеестрДокументов.ДополнительнаяЗапись,
//	|	РеестрДокументов.ТипСсылки,
//	|	ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) КАК ТипЗначения,
//	|	&СтатусПроверки КАК СтатусПроверки,
//	|	&ИндикаторПроверки КАК ИндикаторПроверки,
//	|	Выбор Когда ЕСТЬNULL(СтатусыДокументов.Статус, ЛОЖЬ) = Ложь Тогда Ложь Иначе 
//	|	Выбор Когда СтатусыДокументов.Статус = Значение(Перечисление.СтатусыДокументовПоступления.ОригиналНеПолучен) Тогда Ложь Иначе Истина Конец Конец  КАК СтатусОригинала
//	|ИЗ
//	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
//	|		{
//	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами	
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПоОбъектамУчетаЭДО КАК СостоянияЭД
//	|		ПО (СостоянияЭД.СсылкаНаОбъект = РеестрДокументов.Ссылка)
//	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыСОшибкамиПроверкиКонтрагентов КАК ДокументыСОшибкамиПроверкиКонтрагентов
//	|		ПО РеестрДокументов.Ссылка = ДокументыСОшибкамиПроверкиКонтрагентов.Документ
//	|			И (&ИспользованиеПроверкиВозможно)}
//	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
//	|	ПО РеестрДокументов.Ссылка = СтатусыДокументов.Документ
//	|		И РеестрДокументов.Организация = СтатусыДокументов.Организация
//	|{ГДЕ
//	|	РеестрДокументов.Ссылка.* КАК Ссылка,
//	|	РеестрДокументов.МестоХранения.* КАК Склад,
//	|	РеестрДокументов.Организация.* КАК Организация,
//	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
//	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
//	|	РеестрДокументов.Статус КАК Статус,
//	|	РеестрДокументов.ТипСсылки КАК ТипСсылки,
//	|	РеестрДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
//	|	РеестрДокументов.Партнер.* КАК Партнер,
//	|	РеестрДокументов.Контрагент.* КАК Контрагент,
//	|	РеестрДокументов.Договор.* КАК Договор,
//	|	РеестрДокументов.Подразделение.* КАК Подразделение,
//	|	РеестрДокументов.Ответственный.* КАК Менеджер,
//	|	РеестрДокументов.Дополнительно КАК Дополнительно,
//	|	РеестрДокументов.Комментарий КАК Комментарий,
//	|	РеестрДокументов.Проведен КАК Проведен,
//	|	РеестрДокументов.ПометкаУдаления КАК ПометкаУдаления,
//	|	((РеестрДокументов.ДатаДокументаИБ >= &НачалоПериода
//	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
//	|			И (РеестрДокументов.ДатаДокументаИБ <= &КонецПериода
//	|				ИЛИ &КонецПериода = ДАТАВРЕМЯ(1, 1, 1))),
//	|	Выбор Когда ЕСТЬNULL(СтатусыДокументов.Статус, ЛОЖЬ) = Ложь Тогда Ложь Иначе 
//	|	Выбор Когда СтатусыДокументов.Статус = Значение(Перечисление.СтатусыДокументовПоступления.ОригиналНеПолучен) Тогда Ложь Иначе Истина Конец Конец  КАК СтатусОригинала}";

//	
//	Возврат ТекстЗапроса;
//	
//КонецФункции
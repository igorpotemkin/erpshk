&НаСервере
Функция ПоискСХКСписание(Д)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СписаниеЯчейки.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СХК_СписаниеЯчейки КАК СХК_СписаниеЯчейки
	               |ГДЕ
	               |	СХК_СписаниеЯчейки.ДокОснования = &ДокОснования
	               |	И СХК_СписаниеЯчейки.ПометкаУдаления = &ПометкаУдаления
	               |	И СХК_СписаниеЯчейки.Собран = &Собран
	               |	И СХК_СписаниеЯчейки.Проведен = &Проведен";
	Запрос.УстановитьПараметр("ДокОснования",Д); 
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);   
	Запрос.УстановитьПараметр("Проведен",Истина);   
	Запрос.УстановитьПараметр("Собран",Ложь);
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);
	Возврат ТабЗнач;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	
	
	Если СтруктураПараметров.Ссылка <> "" Тогда
		//Сообщить(СтруктураПараметров.Ссылка);	
		СсылкаДок = СтруктураПараметров.Ссылка;
		ТЧТовары.Очистить();
		Списание = ПоискСХКСписание(СсылкаДок);
		Если Списание.Количество() = 0 Тогда
			
			Док = Документы.СХК_СписаниеЯчейки.СоздатьДокумент();
			Док.Дата = ТекущаяДата();
			Док.Склад = СсылкаДок.Склад; 
			Док.ДокОснования = СсылкаДок;
			Док.Собран = Ложь;
           	ТТовары = СтруктураПараметров.Ссылка.ОтгружаемыеТовары.Выгрузить();
			ТТовары.Свернуть("Номенклатура,Серия","Количество");
			
			
			Для Каждого стр из ТТовары Цикл
				Т = Док.ТЧТовары.Добавить();
				Т.Номенклатура = стр.Номенклатура;
				Т.Серия = стр.Серия;;
				Т.Количество = стр.Количество;
			КонецЦикла; 
			
			Попытка
				Док.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить("Не удалось создать документ отгрузки")	
			КонецПопытки;
			
			Д = Док;
			ЭтаФорма.СХКСписание = Д.Ссылка;
            ТТовары = Д.ТЧТовары.Выгрузить();
			ТТовары.Свернуть("Номенклатура,Серия","Количество");
			Для Каждого строка из ТТовары Цикл
				Т = ТЧТовары.Добавить();
				Т.Номенклатура = строка.Номенклатура;
				Т.Серия = строка.Серия;
				Т.Количество = строка.Количество;
			КонецЦикла; 
			
		ИначеЕсли Списание.Количество() >=1 Тогда
			Д = Списание[0].Ссылка; 
			ЭтаФорма.СХКСписание = Д;
            ТТовары = Д.ТЧТовары.Выгрузить();
			ТТовары.Свернуть("Номенклатура,Серия,НЯчейка","Количество,ИтогоКоличество");
			Для Каждого строка из ТТовары Цикл
				Т = ТЧТовары.Добавить();
				Т.Номенклатура = строка.Номенклатура;
				Т.Серия = строка.Серия;
				Т.Ячейка = строка.НЯчейка;
				Т.Количество = строка.Количество;
				Т.КоличествоСобрано = строка.ИтогоКоличество;
			КонецЦикла; 


			
	КонецЕсли; 
	ТЧТовары.Сортировать("Ячейка Возр");
	КонецЕсли;
	Если ТЧТовары.Количество() = 0 Тогда
		ЭтаФорма.Элементы.ЗакрытьОрдер.Доступность = Истина; 
		Сообщить("По данному ордеру все собрано !!!");
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПоискЯчеек(Сер,Ном,Кол)
	ЗапросСерии = Новый Запрос;
	ЗапросСерии.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	                    |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
	                    |ИЗ
	                    |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	                    |ГДЕ
	                    |	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	                    |	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
	                    |	"  ;
	
	ЗапросСерии.УстановитьПараметр("Серия",Сер.Наименование);
	ЗапросСерии.УстановитьПараметр("Номенклатура",Ном);
	ЗапросСерии.УстановитьПараметр("ВНаличииОстаток",Кол); 
	
	Рез = ЗапросСерии.Выполнить().Выбрать();
	
	Если Рез.Количество()>=1 Тогда
		Пока Рез.Следующий() Цикл
			Ячейка = Рез.Ячейка;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ячейка;

КонецФункции


&НаСервере
Функция ПоискШК(Ш)
Запрос = Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
	               |	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура,
	               |	Расш1_РегистрШтрихЭтикетка.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	               |ГДЕ
	               |	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";

	Запрос.УстановитьПараметр("Штрихкод", Ш);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество() >=1 Тогда
		Пока Рез.Следующий() Цикл
			Для Каждого стр из ТЧТовары Цикл
				Если стр.Номенклатура = Рез.Номенклатура Тогда
					Ном = Новый Структура;
					Ном.Вставить("Номенклатура",стр.Номенклатура);
					Ном.Вставить("Количество",стр.Количество);
					Ном.Вставить("Упаковка",стр.Упаковка); 
					Ном.Вставить("Штрихкод",Рез.Штрихкод); 
					Ном.Вставить("Серия",стр.Серия);
					Ном.Вставить("Шт",стр.Шт);
					Номенклатура = стр.Номенклатура;
					Прервать;
				Иначе
					Ном = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла
	Иначе
		Ном = Ложь;	
	КонецЕсли;
	
Возврат Ном;
	
КонецФункции

&НаСервере
Функция ПоискQR(Ш,сим)
	Запрос = Новый Запрос;
	//|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК ШтрихкодыНоменклатуры
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	               |	ТоварыНаСкладахОстатки.Серия КАК Серия,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	               |ГДЕ
	               |	(ТоварыНаСкладахОстатки.Склад = &Склад ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладГП) И
	               |	ТоварыНаСкладахОстатки.Серия.Наименование ПОДОБНО &Серия";   
				   //|	ТоварыНаСкладахОстатки.Серия.Наименование =  &Серия";

	СтрокаСерия = Лев(Ш,сим);
	СтрокаСерия = СтрокаСерия+Строка("%"+Прав(Ш,11));
	Запрос.УстановитьПараметр("Серия", СтрокаСерия); 
	Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоНаименованию("ЦС Цех Снеки"));
	Запрос.УстановитьПараметр("СкладГП", Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции"));
	Рез = Запрос.Выполнить().Выбрать(); 
	Мас = Новый Массив;
	

	Если Рез.Количество()>0 Тогда
		Пока Рез.Следующий() Цикл
			СЗ = Новый Структура;
			СЗ.Вставить("Номенклатура",Рез.Номенклатура);
			СЗ.Вставить("Серия",Рез.Серия); 
			Мас.Добавить(СЗ);
		КонецЦикла;		//Ном = Рез.Номенклатура; 
	Иначе
		Мас = Ложь;	
	КонецЕсли;
	
	Возврат Мас;
	
КонецФункции 

&НаСервере
Функция ПолучитьШК(Ном,ВариантУпаковки)
	Шк = "";
	Запрос = Новый Запрос;
	Если ВариантУпаковки <> "" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	Расш1_РегистрШтрихЭтикетка.Штрихкод КАК Штрихкод
		               |ИЗ
		               |	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
		               |ГДЕ
		               |	Расш1_РегистрШтрихЭтикетка.Номенклатура = &Номенклатура
		               |	И Расш1_РегистрШтрихЭтикетка.Упаковка = &Упаковка";
		Запрос.УстановитьПараметр("Упаковка",ВариантУпаковки);
	Иначе             
		Запрос.Текст = "ВЫБРАТЬ
		               |	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
		               |ИЗ
		               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		               |ГДЕ
		               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
		               |	И ШтрихкодыНоменклатуры.Упаковка = &Упаковка"; 
		Запрос.УстановитьПараметр("Упаковка","");
			КонецЕсли;
		Запрос.УстановитьПараметр("Номенклатура",Ном);
		 
		
		Рез = Запрос.Выполнить().Выбрать();
		Пока Рез.Следующий() Цикл
			Шк = Рез.Штрихкод;
			Прервать;
		КонецЦикла;

	
	Возврат Шк;
КонецФункции


&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка) 
	//Если ПроверкаНаЧисло(Текст) = Истина Тогда
	//	Т = ПоискШК(Текст);
	//Иначе
	//	Для сч = 3 по 7 Цикл
	//		Т = ПоискQR(Текст,сч);
	//		Если Т <> Ложь Тогда
	//			Прервать;
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;  	
	//Если Т <> Ложь Тогда
	//	ОчиститьКолШтрих();
	//	ЭтаФорма.Элементы.Декорациятовар.Заголовок =  Т.Номенклатура;
	//	ЭтаФорма.Элементы.ДекорацияКолДок.Заголовок =  Т.Количество;
	//	ЭтаФорма.КолДок = Т.Количество;  
	//	ЭтаФорма.Упаковка = Т.Упаковка;  
	//	ЭтаФорма.Шт = Т.Шт; 
	//	ЭтаФорма.ШтрихКод = Т.ШтрихКод;  
	//	ЭтаФорма.Серия = Т.Серия; 

	//	ЭтаФорма.Количество = "";
	//	ЭтаФорма.КоличествоРуч = "";
	//	ЭтаФорма.Клик = 0;
	//	ЭтаФорма.Элементы.ГруппаТовар.Видимость = Истина;
	//	ЭтаФорма.Элементы.ГруппаСписок.Видимость = Ложь;
	//	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Количество;
	////ПараметрыФормыЗаказа = Новый Структура;
	////ПараметрыФормыЗаказа = ПоискШК(Текст);
	////Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	//АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Т,Новый УникальныйИдентификатор);
	////Создаем структуру с параметрами, которые передадим во вторую форму
	//_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	//ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	//ОткрытьФорму("ВнешняяОбработка.АРМСклад.Форма.ФормаТовар", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
	//Иначе
	//	//Сообщить("нет такого");
	//	//ДиалогСВопросом();
	//	ЭтаФорма.РезПоиска = СокрЛП(Текст);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьКолШтрих()
	ЭтаФорма.Клик = 0;
		ЭтаФорма.КолДок = 0;
		ЭтаФорма.Количество = "";
		ЭтаФорма.КоличествоРуч = "";
		ЭтаФорма.Серия = "";
		ЭтаФорма.ШтрихКод = "";
	
КонецПроцедуры





&НаКлиенте
Процедура ДиалогСВопросом()
 
    Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение",
      ЭтотОбъект);	
 
	//ПоказатьВопрос(Оповещение,
	//    "Нет данного товара",
	//    РежимДиалогаВопрос.ОК,
	//    0, // таймаут в секундах
	//    КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
	//    "Нет данного товара" // (необ.) заголовок
	//); 
	ПоказатьПредупреждение(
        Оповещение,
        "", // предупреждение
        3, // (необ.) таймаут в секундах
        "Нет данного товара" // (необ.) заголовок
    );
 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупреждение(Параметры) Экспорт	
КонецПроцедуры
 

&НаКлиенте
Процедура КоличествоИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
		Если Текст = ШтрихКод или Текст = Серия Тогда
			КликСервер(Текст);
		Иначе
			Сообщить("Не верный товар");
		КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура КликСервер(К)
	Клик = Клик + 1;
	ЭтаФорма.Количество = Клик;
	КоличествоПриИзмененииНаСервере();
 
КонецПроцедуры

&НаСервере
Функция КоличествоПриИзмененииНаСервере()
	Ош = Истина;
	К = Число(Шт)*(Число(Клик)) - КолДок;
	ЭтаФорма.Элементы.ДекорацияКолДок.Заголовок = К;
	Если К = 0 Тогда
		Для Каждого стр из ТЧТовары Цикл
			Если стр.Номенклатура = Номенклатура Тогда
				ТЧТовары.Удалить(стр);
				Ош = Ложь;
			КонецЕсли;
		КонецЦикла;
			ЭтаФорма.Элементы.ГруппаТовар.Видимость = Ложь;
			ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
			
		//Иначе
		//	ЭтаФорма.Элементы.ДекорацияКолДок.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
	ПроведениеДокумента();
	
КонецФункции


&НаСервере
Функция ПроведениеДокумента()
	Если ТЧТовары.Количество() = 0 Тогда
		Док = СсылкаДок.ПолучитьОбъект();
		//Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Док.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен;
		Попытка
			
			Док.Записать(РежимЗаписиДокумента.Запись); 
			Док.Записать(РежимЗаписиДокумента.Проведение);
			Док.Проведен = Истина;
			Возврат Истина;
		Исключение
			Возврат Ложь;
		КонецПопытки;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура КоличествоПриИзменении()
	КоличествоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	ЭтаФорма.Элементы.Количество.Видимость = Ложь;
	ЭтаФорма.Элементы.РучнойВвод.Видимость = Ложь;
	
	ЭтаФорма.Элементы.КоличествоРуч.Видимость = Истина;
	ЭтаФорма.Элементы.Сканер.Видимость = Истина;

КонецПроцедуры

&НаКлиенте
Процедура Сканер(Команда)
	ЭтаФорма.Элементы.Количество.Видимость = Истина;
	ЭтаФорма.Элементы.РучнойВвод.Видимость = Истина;
	
	ЭтаФорма.Элементы.КоличествоРуч.Видимость = Ложь;
	ЭтаФорма.Элементы.Сканер.Видимость = Ложь;
КонецПроцедуры

//&НаКлиенте
//Процедура КоличествоРучПриИзменении(Элемент)
//	//КоличествоРучПриИзменениинаСервере();
//КонецПроцедуры

&НаСервере
Функция КоличествоРучПриИзменениинаСервере(Текст)
	//Количество = Текст;
	//Ош = Истина,Ложь;
	Ош = Истина;
	К = Число(КолДок) - Число(Текст);
	
	Если К = 0 Тогда
		Для Каждого стр из ТЧТовары Цикл
			Если стр.Номенклатура = Номенклатура Тогда
				ТЧТовары.Удалить(стр);
				Ош = Ложь;
			КонецЕсли;
		КонецЦикла;
			//ЭтаФорма.Элементы.ГруппаТовар.Видимость = Ложь;
			//ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
			
		Иначе
			ЭтаФорма.Элементы.ДекорацияКолДок.Заголовок = К;
		//	ЭтаФорма.Элементы.ДекорацияКолДок.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
	//ПроведениеДокумента();

	Возврат Ош;
	
КонецФункции

&НаКлиенте
Процедура КоличествоРучОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Если КоличествоРучПриИзменениинаСервере(Текст) = Ложь Тогда
		ЭтаФорма.Элементы.ГруппаТовар.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
		ЭтаФорма.Элементы.Количество.Видимость = Истина;
		ЭтаФорма.Элементы.РучнойВвод.Видимость = Истина;
		
		ЭтаФорма.Элементы.КоличествоРуч.Видимость = Ложь;
		ЭтаФорма.Элементы.Сканер.Видимость = Ложь;
	КонецЕсли;
	Если ПроведениеДокумента() = Истина Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьКоличество(Команда)
		ЭтаФорма.Элементы.ГруппаТовар.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
		ЭтаФорма.Элементы.Количество.Видимость = Истина;
		ЭтаФорма.Элементы.РучнойВвод.Видимость = Истина;
		
		ЭтаФорма.Элементы.КоличествоРуч.Видимость = Ложь;
		ЭтаФорма.Элементы.Сканер.Видимость = Ложь; 
		

КонецПроцедуры

&НаСервере
Процедура ОчиститьФорму()
Клик = 0;	
КолДок = 0;	
Количество = 0;	
КоличествоРуч = 0;	
КонецПроцедуры




&НаСервере
Процедура КоличествоОчисткаНаСервере()
	ЭтаФорма.Элементы.ДекорацияКолДок.Заголовок = Количество;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОчистка(Элемент, СтандартнаяОбработка)
	КоличествоОчисткаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.СтрокаПоиска;
КонецПроцедуры

&НаКлиенте
Процедура ТЧТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Сообщить(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ТЧТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//Сообщить(ВыбраннаяСтрока);  
	//ТЧТовары[ВыбраннаяСтрока].Номенклатура
	//ТЧТовары[ВыбраннаяСтрока].Серия
	//ТЧТовары[ВыбраннаяСтрока].Количество
	//ТЧТовары[ВыбраннаяСтрока].ВариантУпаковки  
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыОстатки = Новый Структура;
	ПараметрыФормыОстатки.Вставить("Номенклатура",Элемент.ТекущиеДанные.Номенклатура);
	ПараметрыФормыОстатки.Вставить("Серия",Элемент.ТекущиеДанные.Серия);
	ПараметрыФормыОстатки.Вставить("Количество",Элемент.ТекущиеДанные.Количество);
	ПараметрыФормыОстатки.Вставить("ИтогоКоличество",Элемент.ТекущиеДанные.КоличествоСобрано);
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыОстатки,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.ОрдерВыбор", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыНовыйЗаказ(Значение, ДопПараметры) Экспорт 
	//ОбработатьЗакрытиеФормыНовыйЗаказНаСервере(Значение.Серия,Значение.ИтогоКоличество);	
	ОбработатьЗакрытиеФормыНовыйЗаказНаСервере(Значение.Номенклатура,Значение.Серия,Значение.ТЗ);	
	
КонецПроцедуры 

&НаСервере
Процедура ОбработатьЗакрытиеФормыНовыйЗаказНаСервере(Номенклатура,Сер,ТЗ)
	ИтогК = 0;
	//Если ТЗ.Количество() >=1 Тогда
	
	Отбор = Новый Структура;
	Отбор.Вставить("Серия",Сер);
	Для Каждого стр из ЭтаФорма.ТЧТовары Цикл
		Если стр.Серия = Сер Тогда
			стр.КоличествоСобрано = тз.Итог("КоличествоС") ;
			Если стр.КоличествоСобрано = стр.Количество Тогда
				ЭтаФорма.ТЧТовары.Удалить(стр); 
			КонецЕсли
		КонецЕсли;
	КонецЦикла;  
	
	//тз.Свернуть("ЯчейкаС","КоличествоС");
	//ТаблицаУслуги = Новый ТаблицаЗначений;
	//ТаблицаУслуги = ДанныеФормыВЗначение(тз,"ТаблицаЗначений");
	//ТаблицаУслуги.Свернуть("ЯчейкаС","КоличествоС");
    //Попытка
	Д = ЭтаФорма.СХКСписание.ПолучитьОбъект();
	Отбор = Новый Структура;
	Отбор.Вставить("Серия",Сер);
	Строки = Д.ТЧТовары.НайтиСтроки(Отбор);
	Д.ТЧТовары.Удалить(Строки[0].НомерСтроки-1);
	
	Для Каждого строка из ТЗ Цикл
		Т = Д.ТЧТовары.Добавить();
		Т.Номенклатура = Номенклатура;
		Т.Серия = Сер;
		Т.НЯчейка = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию(строка.ЯчейкаС);
		Т.Количество = строка.КоличествоС;
		Т.ИтогоКоличество = строка.КоличествоС; 
	КонецЦикла;  
	Д.ТЧТовары.Свернуть("Номенклатура,Серия,НЯчейка","Количество");
	Д.Записать(РежимЗаписиДокумента.Проведение);
	
	//Док = ЭтаФорма.СХКСписание.ПолучитьОбъект();
	//Если ТЗ.Количество() = 1 Тогда
	//	Отбор = Новый Структура;
	//	Отбор.Вставить("Ячейка",ТЗ[0].ЯчейкаС);
	//	
	//КонецЕсли;
	
	Если ЭтаФорма.ТЧТовары.Количество() = 0 ТОгда
		ЭтаФорма.Элементы.ЗакрытьОрдер.Доступность = Истина;
	КонецЕсли; 
//Исключение 
//	Сообщить("Что то пошло не так!");
//	КонецПопытки;
	
КонецПроцедуры 


&НаКлиенте
Процедура ЗакрытьОрдер(Команда)
	ЗакрытьОрдерНаСервере();  
	ЭтаФорма.Закрыть();
КонецПроцедуры 

&НаСервере
Процедура ЗакрытьОрдерНаСервере()
	Док = ЭтаФорма.СХКСписание;
	Документ = Док.ПолучитьОбъект();
	Документ.Собран = Истина;
	Документ.Записать(РежимЗаписиДокумента.Проведение); 
	
	ДокРасх = СсылкаДок.ПолучитьОбъект();
	ДокРасх.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен; 
	Для Каждого стр из ДокРасх.ОтгружаемыеТовары Цикл
		стр.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
	КонецЦикла;
	
	ДокРасх.Записать(РежимЗаписиДокумента.Проведение); 
	
   
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ОтменитьСборкуНаСервере()
	Д = СХКСписание.ПолучитьОбъект(); 
	
	Если Д.Собран = Ложь Тогда
		Д.Проведен = Ложь;
		Д.ПометкаУдаления = Истина;
		Д.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСборку(Команда)
	ОтменитьСборкуНаСервере();                
	ЭтаФорма.Закрыть();
КонецПроцедуры

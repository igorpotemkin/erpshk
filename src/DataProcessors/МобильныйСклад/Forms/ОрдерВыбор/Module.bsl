
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	Если СтруктураПараметров.Номенклатура <> "" Тогда  
		ЭтаФорма.Номенклатура = СтруктураПараметров.Номенклатура;		
		ЭтаФорма.Серия = СтруктураПараметров.Серия; 
		ЭтаФорма.ИтогоКоличество = СтруктураПараметров.ИтогоКоличество;
		ЭтаФорма.КоличествоПоДок  =СтруктураПараметров.Количество; 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
		|	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
		|ИЗ
		|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
		|ГДЕ
		|	СХК_ТоварыНаСкладеОстатки.Серия = &Серия  
		|	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура"; 
		Запрос.УстановитьПараметр("Серия",СтруктураПараметров.Серия.Наименование);
		Запрос.УстановитьПараметр("Номенклатура",СтруктураПараметров.Номенклатура);
		Р = Запрос.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТЗнач = Р.Выгрузить(СпособОбхода); 
		Если ТЗнач.Количество() = 1 Тогда 
			ЭтаФорма.Элементы.Доступно.Видимость = ЛОжь;
			ЭтаФорма.ДоступноеКоличество = ТЗнач.Итог("ВНаличииОстаток"); 
			ЭтаФорма.Элементы.ЯчейкаАдрес.Доступность = Ложь;
			Ячейка = ТЗнач[0].Ячейка;
				ТТ = Доступно.Добавить();
				ТТ.Ячейка = ТЗнач[0].Ячейка;
				ТТ.Количество = ТЗнач[0].ВНаличииОстаток;

		ИначеЕсли ТЗнач.Количество() >= 1 Тогда
			Для Каждого стр из ТЗнач Цикл
				ТТ = Доступно.Добавить();
				ТТ.Ячейка = стр.Ячейка;
				ТТ.Количество = стр.ВНаличииОстаток;
			КонецЦикла;

			ЭтаФорма.ДоступноеКоличество = ТЗнач.Итог("ВНаличииОстаток");
			Список = Новый СписокЗначений; 
			Список.Очистить();
			Список.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Ячейка"));		
			ЭтаФорма.Элементы.ЯчейкаАдрес.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения());
		КонецЕсли; 
		
		ЗапросУп = Новый Запрос;
		ЗапросУп.Текст = "ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		|	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
		ЗапросУп.УстановитьПараметр("ПометкаУдаления",Ложь);
		ЗапросУп.УстановитьПараметр("Владелец",СтруктураПараметров.Номенклатура);
		РезультатЗапросаУп = ЗапросУп.Выполнить();
		
		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		
		Список = Новый СписокЗначений; 
		Список.Очистить();
		Список.ЗагрузитьЗначения(РезультатЗапросаУп.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения());
		
	КонецЕсли;
	ЭтаФорма.Элементы.Количество.Доступность = Ложь;
	ЭтаФорма.Элементы.Скан.Доступность = Ложь;
	ЭтаФорма.Элементы.Штрих.Доступность = Ложь;
	

КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	КоличествоПриИзмененииНаСервере()
КонецПроцедуры

&НаСервере
Процедура КоличествоПриИзмененииНаСервере() 
	ЭтаФорма.ИтогоКоличество =  ЭтаФорма.Количество;

	ИКол = ЭтаФорма.Количество;
	
	Если ИКол > ЭтаФорма.КоличествоПоДок  ТОгда
		Сообщить("Нельзя отгружать больше");
		ЭтаФорма.Элементы.Собран.Доступность = Ложь;
	Иначе
		ЭтаФорма.ИтогоКоличество = ИКол;
		ЭтаФорма.Элементы.Собран.Доступность = Истина;
		Т = ТЧКоличествоЯчейка.Добавить();
		Т.КоличествоС = ЭтаФорма.Количество;
		//Т.ЯчейкаС = ЭтаФорма.Ячейка;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЯчейкаАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ЯчейкаАдресОбработкаВыбораНаСервере(ВыбранноеЗначение);		
КонецПроцедуры  

&НаСервере
Процедура ЯчейкаАдресОбработкаВыбораНаСервере(Зн) 
	Яч = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию(Зн) ; 
	ЭтаФорма.Ячейка = Яч;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
	|ИЗ
	|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	|ГДЕ
	|	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	|	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка";
	Запрос.УстановитьПараметр("Серия",ЭтаФорма.Серия );
	Запрос.УстановитьПараметр("Ячейка",Яч); 
	Рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		ЭтаФорма.ДоступноеКоличество = Рез.ВНаличииОстаток;		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура СобранПриИзменении(Элемент)  

	ЭтаФорма.Закрыть();	
КонецПроцедуры 

&НаСервере 
Функция СобранПриИзмененииНаСервере()
		
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СтуктураВозврат = Новый Структура;
	СтуктураВозврат.Вставить("Номенклатура",Номенклатура);
	СтуктураВозврат.Вставить("Серия",Серия);
	СтуктураВозврат.Вставить("ИтогоКоличество",ИтогоКоличество); 
	СтуктураВозврат.Вставить("ТЗ",ТЧКоличествоЯчейка);
	ОповеститьОВыборе(СтуктураВозврат); 
КонецПроцедуры

//&НаКлиенте
//Процедура ШтрихИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
////	Элементы.ГруппаНоменклатура.Видимость = Истина; 
////	Элементы.Добавить.Видимость = Истина;  

//	Если ПроверкаНаЧисло(Текст) = Истина Тогда
//		ПоискШКТест(Текст);
//	Иначе
//		Для сч = 3 по 7 Цикл
//			Т = ПоискQR(Текст,сч);
//			Если Т <> Ложь Тогда
//				Прервать;
//			КонецЕсли;
//		КонецЦикла;
//		Если Т <> Ложь ТОгда

//			СоздатьГруппыРезультата(Т);
//		Иначе
//			Сообщить("Остаток 0");
//		КонецЕсли;
//		
//	КонецЕсли;  

//КонецПроцедуры

&НаСервере
Процедура ПоискШКТест(Ш)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш); 

	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  
	
	Если ТабЗнач.Количество()>0 Тогда 
		//Запрос1 = Новый Запрос;
		//Запрос1.Текст = "ВЫБРАТЬ
		//|	ЗаказНаПроизводство2_2Продукция.Номенклатура КАК Номенклатура,
		//|	ЗаказНаПроизводство2_2Продукция.Расш1_Серия КАК Расш1_Серия
		//|ИЗ
		//|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
		//|ГДЕ
		//|	ЗаказНаПроизводство2_2Продукция.Ссылка.Дата >= &Дата
		//|	И ЗаказНаПроизводство2_2Продукция.Номенклатура =  &Номенклатура";  
		//
		//Запрос1.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата())-360*86400);
		//Запрос1.УстановитьПараметр("Номенклатура", ТабЗнач[0].Номенклатура);
		//
		//Номенклатура = "";
		//Серия = "";
		//Количество = 0;  
		//Номенклатура = ТабЗнач[0].Номенклатура; 
		//
		//РезультатЗапроса = Запрос1.Выполнить();
		//
		//ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		//

		//СписокСерий = Новый СписокЗначений; 
		//СписокСерий.Очистить();
		//СписокСерий.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Расш1_Серия"));
		//Если СписокСерий.Количество() = 1 Тогда
		//	ЭтаФорма.Серия = СписокСерий[0].Значение;	
		//Иначе
		//	ЭтаФорма.Элементы.ВыбСерия.СписокВыбора.ЗагрузитьЗначения(СписокСерий.ВыгрузитьЗначения()); 
		//КонецЕсли;
		//
		//
		//ЗапросУп = Новый Запрос;
		//ЗапросУп.Текст = "ВЫБРАТЬ
		//|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
		//|ИЗ
		//|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		//|ГДЕ
		//|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		//|	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
		//ЗапросУп.УстановитьПараметр("ПометкаУдаления",Ложь);
		//ЗапросУп.УстановитьПараметр("Владелец",ТабЗнач[0].Номенклатура);
		//РезультатЗапросаУп = ЗапросУп.Выполнить();
		//
		//ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		//
		//Список = Новый СписокЗначений; 
		//Список.Очистить();
		//Список.ЗагрузитьЗначения(РезультатЗапросаУп.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		//ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения());
		//ЭтаФорма.Элементы.Штрих.Доступность = Ложь;  
		//ЭтаФорма.Элементы.СЗУпаковки.Доступность = Истина;

		//ЭтаФорма.Элементы.Скан.Доступность = Истина;
	Иначе
		//Оповещение = Новый ОписаниеОповещения("НачалоСтартаСписокПолучателей",ЭтотОбъект);
		//ПоказатьВопрос(Оповещение,
		//    "Заполните список",
		//    РежимДиалогаВопрос.ОК,
		//    0, // таймаут в секундах
		//    , // (необ.) кнопка по умолчанию
		//    "Заполнить список получателей" // (необ.) заголовок
		//);
		Сообщить("Не верная номенклатура");	
		//ЭтаФорма.Элементы.Количество.Доступность = Ложь;
		//ЭтаФорма.Элементы.Скан.Доступность = Ложь;

	КонецЕсли;
	
	
КонецПроцедуры   

&НаКлиенте
Процедура НачалоСтартаСписокПолучателей(Результат, Параметры) Экспорт
    ЭтаФорма.Элементы.Количество.Доступность = Ложь;

КонецПроцедуры


&НаСервере
Функция ПоискQR(Ш,сим)
	Мас = Новый Массив;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказНаПроизводство2_2Продукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводство2_2Продукция.Расш1_Серия КАК Расш1_Серия
	|ИЗ
	|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
	|ГДЕ
	|	ЗаказНаПроизводство2_2Продукция.Ссылка.Дата >= &Дата
	|	И ЗаказНаПроизводство2_2Продукция.Расш1_Серия.Наименование = &Серия";   
	
	Запрос.УстановитьПараметр("Серия", Ш);
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата())-360*86400); 	
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Запрос1 = Новый Запрос;
	Запрос1.Текст = "ВЫБРАТЬ
	|	ЗаказНаПроизводство2_2Продукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводство2_2Продукция.Расш1_Серия КАК Расш1_Серия
	|ИЗ
	|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
	|ГДЕ
	|	ЗаказНаПроизводство2_2Продукция.Ссылка.Дата >= &Дата
	|	И ЗаказНаПроизводство2_2Продукция.Расш1_Серия.Наименование ПОДОБНО &Серия";   
	//|	ТоварыНаСкладахОстатки.Серия.Наименование =  &Серия";
	
	СтрокаСерия = Лев(Ш,сим);
	СтрокаСерия = СтрокаСерия+Строка("%"+Прав(Ш,11));
	Запрос1.УстановитьПараметр("Серия", СтрокаСерия);
	Запрос1.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата())-360*86400); 	
	Рез1 = Запрос1.Выполнить().Выбрать(); 
	
	
	Если Рез.Количество()>0 Тогда
		Пока Рез.Следующий() Цикл
			СЗ = Новый Структура;
			СЗ.Вставить("Номенклатура",Рез.Номенклатура);
			СЗ.Вставить("Серия",Рез.Расш1_Серия); 
			Мас.Добавить(СЗ);
		КонецЦикла;		//Ном = Рез.Номенклатура; 
	ИначеЕсли Рез1.Количество()>0 Тогда
		Пока Рез.Следующий() Цикл
			СЗ = Новый Структура;
			СЗ.Вставить("Номенклатура",Рез.Номенклатура);
			СЗ.Вставить("Серия",Рез.Расш1_Серия); 
			Мас.Добавить(СЗ);
		КонецЦикла;
	Иначе
		
		Мас = Ложь;	
	КонецЕсли;
	
	Возврат Мас;
	
КонецФункции 

&НаСервере
Процедура СоздатьГруппыРезультата(м)  
	
	Номенклатура = "";
	Серия = "";
	Количество = 0;  
	Номенклатура = м[0].Номенклатура; 
	Если м[0].Серия <> "" Тогда
		Серия = м[0].Серия; 
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		|	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Владелец",Номенклатура);
		РезультатЗапроса = Запрос.Выполнить();
		
		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		
		Список = Новый СписокЗначений; 
		Список.Очистить();
		Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 
        ЭтаФорма.Элементы.Скан.Доступность = Ложь; 
		ЭтаФорма.Элементы.Штрих.Доступность = Истина;
        //СписокСерий = Новый СписокЗначений; 
		//СписокСерий.Очистить();
		//Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		//ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 
	
	Иначе
		ЭтаФорма.ТекущийЭлемент = Элементы.Серия;
	КонецЕсли;
		
	
КонецПроцедуры


&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции 






&НаСервере
Функция ПроверитьЯчейку(Ш)
	
	Ош = Ложь;
	Я = Справочники.СХК_СкладЯчейки.НайтиПоРеквизиту("ШтрихКод",СокрЛП(Ш));
	Если Я.Пустая() = Ложь Тогда 
		//
		ЗапросТ = Новый Запрос;
		ЗапросТ.Текст = "ВЫБРАТЬ
		|	СХК_СкладЯчейки.Ряд КАК Ряд,
		|	СХК_СкладЯчейки.Ячейка КАК Ячейка
		|ИЗ
		|	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
		|ГДЕ
		|	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
		ЗапросТ.УстановитьПараметр("ШтрихКод",Ш); 
		РезультатТ = ЗапросТ.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТабЗначТ = РезультатТ.Выгрузить(СпособОбхода);   
		
		ЗапросЯчеек = Новый Запрос;
		ЗапросЯчеек.Текст = "ВЫБРАТЬ
		|	СХК_СкладЯчейки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
		|ГДЕ
		|	СХК_СкладЯчейки.Ряд = &Ряд
		|	И СХК_СкладЯчейки.Ячейка = &Ячейка";
		
		ЗапросЯчеек.УстановитьПараметр("Ряд",ТабЗначТ[0].Ряд);
		ЗапросЯчеек.УстановитьПараметр("Ячейка",ТабЗначТ[0].Ячейка); 
		РезультатЗапросаТ = ЗапросЯчеек.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТабЗначТТ = РезультатЗапросаТ.Выгрузить(СпособОбхода); 
		//СЗ = Новый СписокЗначений;
		//СЗ.ЗагрузитьЗначения(ТабЗначТТ.ВыгрузитьКолонку("Ссылка"));
		//		ЗапросОст = Новый Запрос;
		//		ЗапросОст.Текст = "ВЫБРАТЬ
		//		                  |	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
		//		                  |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
		//		                  |ИЗ
		//		                  |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
		//		                  |ГДЕ
		//		                  |	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
		//		                  |	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
		//		                  |	И СХК_ТоварыНаСкладеОстатки.Ячейка.Наименование В(&Ячейка)"; 
		//		ЗапросОст.УстановитьПараметр("Серия",Серия.Наименование);
		//		ЗапросОст.УстановитьПараметр("Номенклатура",Номенклатура);
		//		ЗапросОст.УстановитьПараметр("Ячейка",СЗ); 
		//		РезТТ = ЗапросОст.Выполнить().Выбрать();
		
		///
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
		|	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
		|ИЗ
		|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
		|ГДЕ
		|	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
		|	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
		|	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка"; 
		Запрос.УстановитьПараметр("Серия",Серия.Наименование);
		Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
		Запрос.УстановитьПараметр("Ячейка",Я);  
		Рез = Запрос.Выполнить().Выбрать();
		Если Рез.Количество()>=1 Тогда 
			Пока Рез.Следующий() Цикл
				Ячейка = Рез.Ячейка;
				Прервать;
			КонецЦикла;
			ЭтаФорма.ТекущийЭлемент = Элементы.Штрих;
			Ош = Истина;
		ИначеЕсли ТабЗначТТ.Количество()>=1 Тогда 
			Для Каждого стрТ из ТабЗначТТ Цикл
				К = ПоискОстПоРяду(стрТ,Серия.Наименование,Номенклатура);
				Если К <> Ложь Тогда
					Ячейка = К;
					Прервать; 
				КонецЕсли;
			КонецЦикла;
			ЭтаФорма.ТекущийЭлемент = Элементы.Штрих;
			Ош = Истина;
			
		КонецЕсли;
	КонецЕсли;
	Возврат Ош;
КонецФункции             

&НаСервере
Функция ПоискОстПоРяду(РядК,Серия,Ном)
	ош = Ложь;	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
	|ИЗ
	|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	|ГДЕ
	|	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	|	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
	|	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка"; 
	Запрос.УстановитьПараметр("Серия",Серия);
	Запрос.УстановитьПараметр("Номенклатура",Ном);
	Запрос.УстановитьПараметр("Ячейка",РядК.Ссылка );  
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество()>=1 Тогда 
		Пока Рез.Следующий() Цикл
			ош = Рез.Ячейка;
			Прервать;
		КонецЦикла; 
	КонецЕсли;
	Возврат ош;
КонецФункции


&НаКлиенте
Процедура СканИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка) 
	Если ПроверитьЯчейку(Текст) = Истина Тогда
		ЭтаФорма.Элементы.Штрих.Доступность = Истина; 
	Иначе
		Сообщить("Не верная ячейка");
		ЭтаФорма.Элементы.Штрих.Доступность = Ложь;
	КонецЕсли;  
	
	
КонецПроцедуры  


&НаСервере
Функция ПроверитьQR(Ш,сим)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказНаПроизводство2_2Продукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводство2_2Продукция.Расш1_Серия КАК Расш1_Серия
	|ИЗ
	|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
	|ГДЕ
	|	ЗаказНаПроизводство2_2Продукция.Ссылка.Дата >= &Дата
	|	И ЗаказНаПроизводство2_2Продукция.Расш1_Серия.Наименование = &Серия";   
	
	Запрос.УстановитьПараметр("Серия", Ш);
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата())-360*86400); 	
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Запрос1 = Новый Запрос;
	Запрос1.Текст = "ВЫБРАТЬ
	|	ЗаказНаПроизводство2_2Продукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводство2_2Продукция.Расш1_Серия КАК Расш1_Серия
	|ИЗ
	|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
	|ГДЕ
	|	ЗаказНаПроизводство2_2Продукция.Ссылка.Дата >= &Дата
	|	И ЗаказНаПроизводство2_2Продукция.Расш1_Серия.Наименование ПОДОБНО &Серия";   
	//|	ТоварыНаСкладахОстатки.Серия.Наименование =  &Серия";
	
	СтрокаСерия = Лев(Ш,сим);
	СтрокаСерия = СтрокаСерия+Строка("%"+Прав(Ш,11));
	Запрос1.УстановитьПараметр("Серия", СтрокаСерия);
	Запрос1.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата())-30*86400); 	
	Рез1 = Запрос1.Выполнить().Выбрать(); 
	
	
	Если Рез.Количество()>0 Тогда
    	Ош = Ложь; 
	ИначеЕсли Рез1.Количество()>0 Тогда
		Ош = Ложь;
	Иначе
		Ош = Истина;
	КонецЕсли;
	
	Возврат Ош;
	
КонецФункции 

&НаСервере
Функция ПроверитьШК(Ш)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш); 

	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  
	
	Если ТабЗнач.Количество()>0 Тогда 
		Ош = Ложь;
	Иначе
		Ош = Истина;
	КонецЕсли;
	
	Возврат Ош;
	
КонецФункции 

&НаКлиенте
Процедура СЗУпаковкиОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	СЗУпаковкиПриИзмененииНаСервере(ВыбранноеЗначение);
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Скан;
КонецПроцедуры  

&НаСервере
Процедура СЗУпаковкиПриИзмененииНаСервере(Эл)  
	ЭтаФорма.Упаковка = Эл;
	//ЭтаФорма.Количество = 0;  
	ЭтаФорма.Элементы.Количество.Доступность = Истина;
	ЭтаФорма.Элементы.Скан.Доступность = Истина;  
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ВыбСерияПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВыбСерияОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	Серия =  ВыбранноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура ШтрихИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		Т = ПоискШКН(Текст);
	ИначеЕсли СокрЛП(Текст) = СерияНаименование() Тогда
   		Т = Истина;
	Иначе
		Т = Ложь;
	КонецЕсли;  
	
	Если Т = Истина Тогда 
		СканИзменениеТекстаРедактированияНаСервере();
		Если ЭтаФорма.Собран = Истина Тогда
			ЭтаФорма.Закрыть();
		КонецЕсли;
		
	Иначе
		Сообщить("Не верная номенклатура");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СерияНаименование()
	Возврат ЭтаФорма.Серия.Наименование;
КонецФункции

&НаСервере
Функция ПоискШКН(Ш)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш); 

	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  
	
	Если ТабЗнач.Количество()>0 Тогда
		Ош = Истина;
	Иначе
		Ош = "Не верная номенклатура";	
	КонецЕсли;
	
	Возврат Ош; 
	
КонецФункции   

&НаСервере
Процедура СканИзменениеТекстаРедактированияНаСервере()

    ЭтаФорма.Количество = ЭтаФорма.Количество + ЭтаФорма.Упаковка.Числитель;
   	ИКол = ЭтаФорма.Количество;
	
	Если ИКол > ЭтаФорма.КоличествоПоДок  ТОгда
		Сообщить("Нельзя отгружать больше");
		ЭтаФорма.Элементы.Собран.Доступность = Ложь;
	Иначе
		ЭтаФорма.ИтогоКоличество = ИКол;
		ЭтаФорма.Элементы.Собран.Доступность = Истина;
		Т = ТЧКоличествоЯчейка.Добавить();
		Т.КоличествоС = ЭтаФорма.Упаковка.Числитель;
		Т.ЯчейкаС = Ячейка;
	КонецЕсли; 
	
	Если ЭтаФорма.КоличествоПоДок = ЭтаФорма.ИтогоКоличество Тогда
		Собран = Истина;
	КонецЕсли;
	

КонецПроцедуры



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВариантУпаковки.Параметры.УстановитьЗначениеПараметра("СсылкаНоменклатура", "");
КонецПроцедуры

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
//КонецПроцедуры

//&НаСервере
//Процедура ПоискНоменклатурыИзменениеТекстаРедактированияНаСервере()
//	// Вставить содержимое обработчика.
//КонецПроцедуры

//&НаКлиенте
//Процедура ПоискНоменклатурыИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка) 
//	Т = ПоискШК(Текст); 
//	Для Каждого стр из Т Цикл
//		Сообщить(стр);	
//	КонецЦикла;
//	
////	Если ПроверкаНаЧисло(Текст) = Истина Тогда
////		Т = ПоискШК(Текст);
////	Иначе
////		Т = ПоискQR(Текст);		
////	КонецЕсли;
////	
////	//Если Т <> Ложь Тогда 
////	//	Элементы.ТЧТовары.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура", Т);
////	//	//Элементы.ДополнениеПоиск = Т;
////	//	//ПоискТОваров(Т);
////	//Иначе
////	//	ДиалогСВопросом();
////	//КонецЕсли;
//КонецПроцедуры 


//&НаСервере
//Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
//	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
//		Возврат Истина
//	Иначе
//		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
//			Если НашаСтрокаДляРазбора = "" Тогда
//				Возврат Ложь;
//			КонецЕсли;
//		КонецЕсли;
//		
//		Попытка
//			ПМ = Число(НашаСтрокаДляРазбора);
//		Исключение
//			Возврат Ложь;
//		КонецПопытки;
//		Возврат Истина;
//	КонецЕсли;
//КонецФункции 

//&НаКлиенте
//Процедура ДиалогСВопросом()
// 
//    Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение",
//      ЭтотОбъект);	
// 
//	//ПоказатьВопрос(Оповещение,
//	//    "Нет данного товара",
//	//    РежимДиалогаВопрос.ОК,
//	//    0, // таймаут в секундах
//	//    КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
//	//    "Нет данного товара" // (необ.) заголовок
//	//); 
//	ПоказатьПредупреждение(
//        Оповещение,
//        "", // предупреждение
//        3, // (необ.) таймаут в секундах
//        "Нет данного товара" // (необ.) заголовок
//    );
// 
//КонецПроцедуры

//&НаСервере
//Функция ПоискШК(Ш)
//Запрос = Новый Запрос;

//Запрос.Текст = "ВЫБРАТЬ
//               |	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
//               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
//               |	ТоварыНаСкладахОстатки.Серия КАК Серия
//               |ИЗ
//               |	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК ШтрихкодыНоменклатуры
//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
//               |		ПО ШтрихкодыНоменклатуры.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
//               |ГДЕ
//               |	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
//               |	И ТоварыНаСкладахОстатки.Склад = &Склад";

//	Запрос.УстановитьПараметр("Штрихкод", Ш); 
//	Запрос.УстановитьПараметр("Склад", Склад);
//	Рез = Запрос.Выполнить().Выбрать();
//	Если Рез.Следующий() Тогда
//			СЗ = Новый Структура;
//			СЗ.Вставить("Номенклатура",Рез.Номенклатура);
//			СЗ.Вставить("Остаток",Рез.ВНаличииОстаток);
//			//Ном = Рез.Номенклатура; 
//	Иначе
//		СЗ = Ложь;	
//	КонецЕсли;
//	
//Возврат СЗ;
//	
//КонецФункции

//&НаСервере
//Функция ПоискQR(ШК) 
//Запрос = Новый Запрос;

//Запрос.Текст = "ВЫБРАТЬ
//               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
//			   |ИЗ
//               |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
//               |ГДЕ
//               |	ТоварыНаСкладахОстатки.Серия = &Серия
//               |	И ТоварыНаСкладахОстатки.Склад = &Склад"; 
//С = Справочники.СерииНоменклатуры.НайтиПоНаименованию(СокрЛП(ШК));
//Запрос.УстановитьПараметр("Серия", С.Ссылка);     
//Запрос.УстановитьПараметр("Склад", Склад.Ссылка);
// 	Рез = Запрос.Выполнить().Выбрать();
//	Если Рез.Количество() >=1 Тогда
//		Пока Рез.Следующий() Цикл 
//			Ном = Рез.Номенклатура;
//		КонецЦикла
//	Иначе
//		Ном = Ложь;	
//	КонецЕсли;

//   Возврат Ном;
//КонецФункции

&НаСервере
Процедура ПересчетНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Расш1_ПДЗ.СписокКонтрагент.(
	               |		Ссылка КАК Ссылка
	               |	) КАК СписокКонтрагент,
	               |	Расш1_ПДЗ.СписокМенеджер.(
	               |		Ссылка КАК Ссылка
	               |	) КАК СписокМенеджер
	               |ИЗ
	               |	Справочник.Расш1_ПДЗ КАК Расш1_ПДЗ
	               |ГДЕ
	               |	Расш1_ПДЗ.Наименование = &Наименование"; 
	Запрос.УстановитьПараметр("Наименование", Справочники.Расш1_ПДЗ.НайтиПоНаименованию("ПДЗ"));

КонецПроцедуры

&НаКлиенте
Процедура Пересчет(Команда)
	ПараметрыФормыОстатки = Новый Структура;
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыОстатки,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.ФормаПересчет", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаКлиенте
Процедура Остатки(Команда)
	ПараметрыФормыОстатки = Новый Структура;
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыОстатки,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.ФормаОстатки", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
	//ОткрытьФорму("ВнешняяОбработка.МобильныйСклад.Форма.ФормаОстатки", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры


 &НаКлиенте
Процедура ОбработатьЗакрытиеФормыНовыйЗаказ(Значение, ДопПараметры) Экспорт

	
КонецПроцедуры

&НаКлиенте
Процедура Отгрузка(Команда)
	ПараметрыФормыОстатки = Новый Структура;
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыОстатки,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.ФормаОтгрузки", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
	//ОткрытьФорму("ВнешняяОбработка.МобильныйСклад.Форма.ФормаОстатки", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры

&НаКлиенте
Процедура Поступление(Команда)
		ПараметрыФормыОстатки = Новый Структура;
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыОстатки,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.ФормаПоступления", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры




&НаКлиенте
Процедура Перемещение(Команда)
	ПараметрыФормыОстатки = Новый Структура;
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыОстатки,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.ФормаПеремещение", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры



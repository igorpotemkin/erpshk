
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
КонецПроцедуры

&НаСервере
Процедура СтрокаПоискаИзменениеТекстаРедактированияНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		Т = ПоискШК(Текст);
	Иначе
		Т = ПоискQR(Текст);		
	КонецЕсли;

	
	//Т = ПоискШК(Текст); 
	Если Т <> Ложь ТОгда 
		СоздатьГруппыРезультата(Т);
	Иначе
		Сообщить("Остаток 0");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьГруппыРезультата(м)
	//		
	ДобавляемыеРеквизиты = Новый Массив;
	НовыйРеквизитПалет = Новый РеквизитФормы("Палет",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
	НовыйРеквизитПалет = Новый РеквизитФормы("Ряд",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
	НовыйРеквизитПалет = Новый РеквизитФормы("Коробов",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
	НовыйРеквизитПалет = Новый РеквизитФормы("КолШт",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
	НовыйРеквизитПалет = Новый РеквизитФормы("ОстатокР",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
	НовыйРеквизитПалет = Новый РеквизитФормы("Итого",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
	
	//
	
	
	Если ЭтаФорма.Элементы.Найти("ГруппаРез") <> Неопределено Тогда
		Для Каждого стр из ЭтаФорма.Элементы.ГруппаРез.ПодчиненныеЭлементы Цикл  
			Для Каждого стрЭл из ЭтаФорма.Элементы[стр.Имя].ПодчиненныеЭлементы Цикл
				ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы[стрЭл.Имя]);	
			КонецЦикла;
			ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы[стр.Имя]);
		КонецЦикла;
		ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы.ГруппаРез); 
	Иначе
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты); 
		
	КонецЕсли;
	
	
	ГруппаШапка = ЭтаФорма.Элементы.Добавить("ГруппаРез", Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаИнформация);
	ГруппаШапка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаШапка.Заголовок ="" ;
	ГруппаШапка.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаШапка.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаШапка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаШапка.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаШапка.Видимость = Истина;
	
	Для сч  = 0 по м.Количество()-1 Цикл
		ГруппаОст = ЭтаФорма.Элементы.Добавить("ГруппаШапка"+сч, Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаРез);
		ГруппаОст.Вид = ВидГруппыФормы.ОбычнаяГруппа; 
		ГруппаОст.Заголовок =м[сч].Номенклатура ;
		ГруппаОст.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
		ГруппаОст.ОтображатьЗаголовок = ИСТИНА; 
		ГруппаОст.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаОст.РастягиватьПоГоризонтали = ИСТИНА;
		ГруппаОст.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		
		ЭлСерия =ЭтаФорма.Элементы.Добавить("Серия"+сч, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлСерия.Вид = ВидДекорацииФормы.Надпись;
		ЭлСерия.Заголовок = м[сч].Серия; 
		ЭлСерия.Шрифт = Новый Шрифт("Verdana", 16,Истина);  
		//
		ЭлОстаток =ЭтаФорма.Элементы.Добавить("Остаток"+сч, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлОстаток.Вид = ВидДекорацииФормы.Надпись;
		ЭлОстаток.Заголовок = Строка(м[сч].Остаток) + " шт."; 
		ЭлОстаток.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		// 
		ЭлРасчет =ЭтаФорма.Элементы.Добавить("Расчет"+сч, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлРасчет.Вид = ВидДекорацииФормы.Надпись;
		ЭлРасчет.Заголовок = Строка(м[сч].Остаток); 
		ЭлРасчет.Видимость = Ложь; 
		//
		ЭлПалет = ЭтаФорма.Элементы.Добавить("Палет"+сч, Тип("ПолеФормы"),ГруппаОст);
		ЭлПалет.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлПалет.Заголовок = "Палет";
		ЭлПалет.ПутьКДанным = "Палет"; 
		ЭлПалет.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлПалет.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		ЭлПалет.УстановитьДействие("ПриИзменении","ПалетПриИзмененииКлиент"); 
		//ЭтаФорма.Элементы["Палет"+сч].ТекстРедактирования = "0.000";
		УстановитьРеквизиты("Палет");
		//ЭтаФорма.Элементы["Палет"+сч] = "";
		//
		ЭлРяд = ЭтаФорма.Элементы.Добавить("Ряд"+сч, Тип("ПолеФормы"),ГруппаОст);
		ЭлРяд.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлРяд.Заголовок = "Ряд";
		ЭлРяд.ПутьКДанным = "Ряд"; 
		ЭлРяд.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлРяд.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина); 
		ЭлРяд.УстановитьДействие("ПриИзменении","РядПриИзмененииКлиент");
		УстановитьРеквизиты("Ряд");
		//
		ЭлКоробов = ЭтаФорма.Элементы.Добавить("Коробов"+сч, Тип("ПолеФормы"),ГруппаОст);
		ЭлКоробов.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлКоробов.Заголовок = "Коробов";
		ЭлКоробов.ПутьКДанным = "Коробов"; 
		ЭлКоробов.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлКоробов.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		ЭлКоробов.УстановитьДействие("ПриИзменении","КоробовПриИзмененииКлиент");
		УстановитьРеквизиты("Коробов");
		
		//
		ЭлКолШт = ЭтаФорма.Элементы.Добавить("КолШт"+сч, Тип("ПолеФормы"),ГруппаОст);
		ЭлКолШт.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлКолШт.Заголовок = "КолШт";
		ЭлКолШт.ПутьКДанным = "КолШт"; 
		ЭлКолШт.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлКолШт.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		ЭлКолШт.УстановитьДействие("ПриИзменении","КолШтПриИзмененииКлиент");
		УстановитьРеквизиты("КолШт");
		//
		ЭлОстатокР = ЭтаФорма.Элементы.Добавить("ОстатокР"+сч, Тип("ПолеФормы"),ГруппаОст);
		ЭлОстатокР.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлОстатокР.Заголовок = "Остаток";
		ЭлОстатокР.ПутьКДанным = "ОстатокР"; 
		ЭлОстатокР.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлОстатокР.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина); 
		ЭлОстатокР.УстановитьДействие("ПриИзменении","ОстатокПриИзмененииКлиент");
		УстановитьРеквизиты("ОстатокР");
		//
		//ЭлИтого = ЭтаФорма.Элементы.Добавить("Итого"+сч, Тип("ПолеФормы"),ГруппаОст);
		//ЭлИтого.Вид = ВидПоляФормы.ПолеВвода; 
		//ЭлИтого.Заголовок = "Итого";
		//ЭлИтого.ПутьКДанным = "Итого"; 
		//ЭлИтого.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		//ЭлИтого.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		//
		ЭлИтого =ЭтаФорма.Элементы.Добавить("Итого"+сч, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлИтого.Вид = ВидДекорацииФормы.Надпись;
		ЭлИтого.Заголовок = 0; 
		ЭлИтого.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлИтого.ЦветТекста = WebЦвета.Зеленый;
		//
		ЭлСерия =ЭтаФорма.Элементы.Добавить("Отклонение"+сч, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлСерия.Вид = ВидДекорацииФормы.Надпись;
		ЭлСерия.Заголовок = 0; 
		ЭлСерия.Шрифт = Новый Шрифт("Verdana", 16,Истина);  
		//
		
	КонецЦикла
	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизиты(имяРек)
	ЭтотОбъект[имяРек] = 0;	
КонецПроцедуры


&НаКлиенте
Процедура ОстатокПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);		
КонецПроцедуры

&НаКлиенте
Процедура КолШтПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);		
КонецПроцедуры

&НаКлиенте
Процедура КоробовПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);		
КонецПроцедуры

&НаКлиенте
Процедура РядПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПалетПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);
КонецПроцедуры


//&НаСервере
//Процедура РасчетФактИтог(ИмяЭлемента,ЗначениеЭл) 
//	Сообщить(ЗначениеЭл);
//	//НомерГр = Прав(ИмяГруппы,1);
//	//ИмяЭл = "Палет" + Строка(НомерГр);
//	//Сообщить(ЭтаФорма.Элементы[ИмяЭл]);

//КонецПроцедуры
&НаКлиенте
Процедура РасчетФактИтог(ИмяЭлемента,ЗначениеЭл) 
	НомерГр = Прав(ИмяЭлемента,1);
	Палет = ЭтаФорма.Элементы["Палет" + Строка(НомерГр)].ТекстРедактирования;
	Ряд = ЭтаФорма.Элементы["Ряд" + Строка(НомерГр)].ТекстРедактирования;
	Коробов = ЭтаФорма.Элементы["Коробов" + Строка(НомерГр)].ТекстРедактирования;
	КолШт = ЭтаФорма.Элементы["КолШт" + Строка(НомерГр)].ТекстРедактирования;
	Остаток = ЭтаФорма.Элементы["ОстатокР" + Строка(НомерГр)].ТекстРедактирования;
	
	Если Палет = "0.000" Тогда
		Палет = 1 ;
	Иначе
		Палет = Число(Палет);
	КонецЕсли;
	
	Если Ряд = "0.000" Тогда
		Ряд = 1 ;
	Иначе
		Ряд = Число(Ряд);
	КонецЕсли;
	
	Если Коробов = "0.000" Тогда
		Коробов = 1 ;
	Иначе
		Коробов = Число(Коробов);
	КонецЕсли;
	
	Если КолШт = "0.000" Тогда
		КолШт = 1 ;
	Иначе
		КолШт = Число(КолШт);
	КонецЕсли; 
	
	Если Остаток = "0.000" Тогда
		Остаток = 1 ;
	Иначе
		Остаток = Число(Остаток);
	КонецЕсли;
	
	ИтогРасчет = ?(Палет > 0, Палет,1) * ?(Ряд > 0, Ряд, 1) * ?(Коробов > 0, Коробов, 1) * ?(КолШт > 0, КолШт, 1)  + Остаток;
	Расчет =  ЭтаФорма.Элементы["Расчет" + Строка(НомерГр)].Заголовок;
	ИтогПоСчету = Число(Расчет) - Число(ИтогРасчет);
	ЭтаФорма.Элементы["Итого" + Строка(НомерГр)].Заголовок = ИтогРасчет;
	ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].Заголовок = ИтогПоСчету;
	
	Если ИтогПоСчету = 0 Тогда 
		ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].Заголовок = "Все верно!";
		ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].ЦветТекста = WebЦвета.Зеленый; 
	Иначе
		ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].ЦветТекста = WebЦвета.Красный;	
	КонецЕсли;		
КонецПроцедуры


&НаСервере
Функция Расчет()  
	возврат 5;	
КонецФункции


&НаСервере
Функция ИтогРасчет(Номер,Итог) 
	Попытка
		ЭтаФорма.Элементы["Итого" + Строка(Номер)].Очистить();
	Исключение 
		
	КонецПопытки;
	
	Попытка
		ЭтаФорма.Элементы["Итого" + Строка(Номер)] = Неопределено
	Исключение 
		
	КонецПопытки;
	ЭтаФорма.Элементы["Итого" + Строка(Номер)].ТекстРедактирования = "";
	//	ИтогПоиск = Итог;
	//	ЭтаФорма.Элементы["Итого" + Строка(Номер)].ВыделенныйТекст = ИтогПоиск;
	//ЭлФ ="Итого" + Строка(Номер); 
	//ЭлФ = Итог;
КонецФункции

&НаСервере
Функция ПоискШК(Ш)
	Запрос = Новый Запрос;
	//|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК ШтрихкодыНоменклатуры
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	ТоварыНаСкладахОстатки.Серия КАК Серия
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК ШтрихкодыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	|		ПО ШтрихкодыНоменклатуры.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
	|	И ТоварыНаСкладахОстатки.Склад = &Склад";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш); 
	Запрос.УстановитьПараметр("Склад", Склад);
	Рез = Запрос.Выполнить().Выбрать(); 
	Мас = Новый Массив; 

	Если Рез.Количество()>0 Тогда
		Пока Рез.Следующий() Цикл
		СЗ = Новый Структура;
		СЗ.Вставить("Номенклатура",Рез.Номенклатура);
		СЗ.Вставить("Остаток",Рез.ВНаличииОстаток);
		СЗ.Вставить("Серия",Рез.Серия); 
		Мас.Добавить(СЗ);
		КонецЦикла;		//Ном = Рез.Номенклатура; 
	Иначе
		Мас = Ложь;	
	КонецЕсли;
	
	Возврат Мас;
	
КонецФункции  

&НаСервере
Функция ПоискQR(Ш)
	Запрос = Новый Запрос;
	//|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК ШтрихкодыНоменклатуры
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	               |	ТоварыНаСкладахОстатки.Серия КАК Серия,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	               |ГДЕ
	               |	ТоварыНаСкладахОстатки.Склад = &Склад
	               |	И ТоварыНаСкладахОстатки.Серия.Наименование ПОДОБНО &Серия";
	СтрокаСерия = Лев(Ш,4);
	СтрокаСерия = СтрокаСерия+Строка("%"+Прав(Ш,11));
	Запрос.УстановитьПараметр("Серия", СтрокаСерия); 
	Запрос.УстановитьПараметр("Склад", Склад);
	Рез = Запрос.Выполнить().Выбрать(); 
	Мас = Новый Массив;
	

	Если Рез.Количество()>0 Тогда
		Пока Рез.Следующий() Цикл
			СЗ = Новый Структура;
		СЗ.Вставить("Номенклатура",Рез.Номенклатура);
		СЗ.Вставить("Остаток",Рез.ВНаличииОстаток);
		СЗ.Вставить("Серия",Рез.Серия); 
		Мас.Добавить(СЗ);
		КонецЦикла;		//Ном = Рез.Номенклатура; 
	Иначе
		Мас = Ложь;	
	КонецЕсли;
	
	Возврат Мас;
	
КонецФункции

&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции



//&НаКлиенте
//Процедура СКамеры(Команда)
//	     ДанныеФото = ПолучитьДанныеФотоСнимка();

//         Если ДанныеФото <> Неопределено Тогда
//            ТекущееФото = ДанныеФото.ПолучитьДвоичныеДанные();
//           Фото = ПоместитьВоВременноеХранилище(ТекущееФото,     Новый УникальныйИдентификатор);
//         КонецЕсли;

//КонецПроцедуры  

//&НаКлиенте
//Процедура КомандаСоздатьФото(Команда)


//КонецПроцедуры

//&НаКлиенте
//Функция ПолучитьДанныеФотоСнимка()

//         Данные = Неопределено;

//        #Если МобильноеПриложениеКлиент Тогда 
// 
//             Если СредстваМультимедиа.ПоддерживаетсяФотоснимок() Тогда

//                   ТипКамерыДанные = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ТипКамеры");
//                   Если ТипКамерыДанные = ПредопределенноеЗначение("Перечисление.ТипКамеры.Задняя")   Тогда
//                        ТипКамеры = ТипКамерыУстройства.Задняя;
//                   ИначеЕсли ТипКамерыДанные =  ПредопределенноеЗначение("Перечисление.ТипКамеры.Передняя") Тогда
//                        ТипКамеры = ТипКамерыУстройства.Передняя;
//                   Иначе
//                        ТипКамеры = ТипКамерыУстройства.Авто;
//                   КонецЕсли;

//                  РазрешениеВысота = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("РазрешениеВысота");
//                  РазрешениеШирина = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("РазрешениеШирина");

//                 //для устройств IOS этот параметр игнорируется
//                 пКачество = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("КачествоФото");
//                 Если пКачество = 0 Тогда
//                      пКачество = 1;
//                 КонецЕсли;

//                 Если РазрешениеВысота <> 0 И РазрешениеШирина <> 0 Тогда
//                       РазрешениеКамеры = Новый РазрешениеКамерыУстройства;
//                       РазрешениеКамеры.Высота = РазрешениеВысота;
//                       РазрешениеКамеры.Ширина = РазрешениеШирина;
//                       Данные = СредстваМультимедиа.СделатьФотоснимок(ТипКамеры, РазрешениеКамеры, пКачество); 

//                 Иначе
//                       Данные = СредстваМультимедиа.СделатьФотоснимок(ТипКамеры, , пКачество); 
//                 КонецЕсли; 

//                Возврат Данные; 
//                Иначе 
//                    Сообщить("Данное устройство не поддерживает фотоснимок!") 
//                КонецЕсли; 
// 
//                #КонецЕсли

//               Возврат Данные;

//КонецФункции 

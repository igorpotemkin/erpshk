&НаСервере
Функция ПоискОрдерПриИзмененииНаСервере(Номер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходныйОрдерНаТовары.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	               |ГДЕ
	               |	РасходныйОрдерНаТовары.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И РасходныйОрдерНаТовары.Номер = &Номер";
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата())-10*86400);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Номер", Номер);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()=1 Тогда
		Пока Рез.Следующий() Цикл
			Ссылка = Рез.Ссылка;
			Прервать;
		КонецЦикла;
	Иначе
		Ссылка = Ложь;
	КонецЕсли;
	
	Возврат Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ПоискИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Рез = ПоискОрдерПриИзмененииНаСервере(Текст);
	Если Рез <> Ложь Тогда
	ПараметрыФормыЗаказа = Новый Структура;
	ПараметрыФормыЗаказа.Вставить("Ссылка",Рез);
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыЗаказа,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.Ордер", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
	Иначе
		Сообщить("Не нашел");
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьЗакрытиеФормыНовыйЗаказ(Значение, ДопПараметры) Экспорт

	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Дата = НачалоДня(ТекущаяДата())-9*86400; 
	Дата = ТекущаяДата();

	Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");  
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьТЧОрдерНаТовары()
	ТЧОрдерНаТовары.Очистить();
	
	ЗапросСобранных= Новый Запрос;
	ЗапросСобранных.Текст = "ВЫБРАТЬ
	                        |	СХК_СписаниеЯчейки.ДокОснования.Ссылка КАК ДокОснованияСсылка
	                        |ИЗ
	                        |	Документ.СХК_СписаниеЯчейки КАК СХК_СписаниеЯчейки
	                        |ГДЕ
	                        |	СХК_СписаниеЯчейки.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	                        |	И СХК_СписаниеЯчейки.Собран = &Собран
	                        |	И СХК_СписаниеЯчейки.Проведен = &Проведен
	                        |	И СХК_СписаниеЯчейки.ПометкаУдаления = &ПометкаУдаления" ; 
	
	ЗапросСобранных.УстановитьПараметр("ДатаНачала",НачалоДня(Дата));
	ЗапросСобранных.УстановитьПараметр("ДатаОкончания",КонецДня(Дата));
	ЗапросСобранных.УстановитьПараметр("Собран",Истина);
	ЗапросСобранных.УстановитьПараметр("Проведен",Истина);
	ЗапросСобранных.УстановитьПараметр("ПометкаУдаления",Ложь);

	РезультатС = ЗапросСобранных.Выполнить();
	СпособОбходаС = ОбходРезультатаЗапроса.Прямой;
	ТабЗначС = РезультатС.Выгрузить(СпособОбходаС);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	               |	РасходныйОрдерНаТовары.Номер КАК Номер,
	               |	РасходныйОрдерНаТовары.Дата КАК Дата,
	               |	РасходныйОрдерНаТовары.Получатель КАК Получатель
	               |ИЗ
	               |	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	               |ГДЕ
	               |	РасходныйОрдерНаТовары.Склад = &Склад
	               |	И РасходныйОрдерНаТовары.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И НЕ РасходныйОрдерНаТовары.Ссылка В (&Ссылка)
	               |	И РасходныйОрдерНаТовары.Проведен = &Проведен
	               |	И РасходныйОрдерНаТовары.ПометкаУдаления = &ПометкаУдаления
	               |	И РасходныйОрдерНаТовары.Статус <> &Статус";
	Запрос.УстановитьПараметр("Склад",Склад.Ссылка);
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(Дата));
	Запрос.УстановитьПараметр("Ссылка",ТабЗначС);
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыРасходныхОрдеров.Отгружен);
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);	
	
	Для Каждого стр из Табзнач Цикл
		//Отбор = Новый Структура;
		//Отбор.Вставить("Ссылка",стр.Ссылка);
		//Строки = ТабЗначС.НайтиСтроки(Отбор);
		//Если Строки.Количество() = 0 Тогда
			Т = ТЧОрдерНаТовары.Добавить();
			Т.ДатаДок = стр.Дата;
			Т.Получатель = стр.Получатель;
			Т.НомерДок = стр.Номер;
			Т.СсылкаДок = стр.Ссылка;		
		//КонецЕсли;
	КонецЦикла;

	//Рез = Запрос.Выполнить().Выбрать();
	//
	//Если Рез.Количество() >=1 Тогда
	//	Пока Рез.Следующий() Цикл
	//		Т = ТЧОрдерНаТовары.Добавить();
	//		Т.ДатаДок = Рез.Дата;
	//		Т.НомерДок = Рез.Номер;
	//		Т.СсылкаДок = Рез.Ссылка;
	//	КонецЦикла;
	//Иначе
	//	Сообщить("Нет документов");
	//КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьТЧОрдерНаТовары();

КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ЗаполнитьТЧОрдерНаТовары();
КонецПроцедуры


&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ЗаполнитьТЧОрдерНаТовары();
КонецПроцедуры


&НаКлиенте
Процедура ТЧОрдерНаТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Рез = ПоискОрдерПриИзмененииНаСервере(Элемент.ТекущиеДанные.НомерДок);
	
	ПараметрыФормыЗаказа = Новый Структура;
	ПараметрыФормыЗаказа.Вставить("Ссылка",Рез);
	//Теперь помещаем эти данные в хранилище и получаем адрес этого хранилища
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыЗаказа,Новый УникальныйИдентификатор);
	//Создаем структуру с параметрами, которые передадим во вторую форму
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.МобильныйСклад.Форма.Ордер", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры


//НовыйПересчет
//создание документа + заполнение

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции"); 
	ТекДата = ТекущаяДата();
	
	ЗаполнитьТЧ();
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьТЧ()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Расш1_ПересчетСклад.Ссылка КАК Ссылка,
	               |	Расш1_ПересчетСклад.Номер КАК Номер
	               |ИЗ
	               |	Документ.Расш1_ПересчетСклад КАК Расш1_ПересчетСклад
	               |ГДЕ
	               |	Расш1_ПересчетСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И Расш1_ПересчетСклад.Склад = &Склад";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекДата));	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекДата));	
	Запрос.УстановитьПараметр("Склад", Склад);	
	Рез = Запрос.Выполнить().Выбрать();
	ТЧДок.Очистить();
	Пока Рез.Следующий() Цикл
		Т = ТЧДок.Добавить();
		Т.ДокНомер = Рез.Номер;
		Т.ДокСсылка = Рез.Ссылка;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция НовыйПересчетНаСервере()
	ДокП = Документы.Расш1_ПересчетСклад.СоздатьДокумент();
 	ДокП.Дата = ТекущаяДата();
	ДокП.Склад = Склад;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Серия КАК Серия,
	|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК КоличествоУчет
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	|ГДЕ
	|	ТоварыНаСкладахОстатки.Склад = &Склад";
	Запрос.УстановитьПараметр("Склад", Склад); 
	ДокП.Товары.Очистить(); 
	Рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		Т = ДокП.Товары.Добавить();
		Т.Номенклатура = Рез.Номенклатура; 
		спрСерия = СтрЗаменить(Рез.Серия, " ", "");
		Т.Серия = спрСерия;
		Т.КоличествоУчет = Рез.КоличествоУчет; 
		Т.КоличествоФакт = 0 - Рез.КоличествоУчет;
	КонецЦикла;
	
	Попытка
		ДокП.Записать(РежимЗаписиДокумента.Проведение);
		ДокПересчет = ДокП.Ссылка;
		ДокументПроведен = Истина;
	Исключение
		ДокументПроведен = Ложь;
		КонецПопытки;
		
	Возврат ДокументПроведен;	
	
КонецФункции

&НаСервере
Функция ТестПересчет()
	ДокП = Документы.Расш1_ПересчетСклад.НайтиПоНомеру("000000024");
	//ДокПересчет = ДокП.ПолучитьОбъект().Ссылка;  
	Возврат ДокП.ПолучитьОбъект().Ссылка;	
КонецФункции


&НаКлиенте
Процедура НовыйПересчет(Команда)
//	ДокПересчет = НовыйПересчетНаСервере(); 
	Если НовыйПересчетНаСервере() =  Истина Тогда
		ЭтаФорма.Элементы.ГруппаПересчет.Видимость = Истина;  
		ЭтаФорма.Элементы.ГруппаШапка.Видимость = Ложь;
	Иначе
		Сообщить("При создании документа произошла ошибка");
	КонецЕсли;
   
		//ДобавитьНовыйПоиск();
	//Если НовыйПересчетНаСервере() = Истина Тогда
	//	ДобавитьНовыйПоиск();
	//Иначе
	//	Сообщить("При создании документа произошла ошибка");
	//КонецЕсли;
КонецПроцедуры


//&НаКлиенте
//Процедура ДобавитьНовыйПоиск()
//	ДобавитьНовыйПоискСервер();	
//КонецПроцедуры

//&НаСервере
//Процедура ДобавитьНовыйПоискСервер()
//	Если ЭтаФорма.Элементы.ГруппаПересчет.ПодчиненныеЭлементы.Количество() >= 1 Тогда
//		Индекс = ЭтаФорма.Элементы.ГруппаПересчет.ПодчиненныеЭлементы.Количество() - 1;
//	Иначе
//		Индекс = 0;
//	КонецЕсли;
//	
//	
//	ГруппаТовар = ЭтаФорма.Элементы.Добавить("ГруппаТовар"+Индекс, Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаПересчет);
//	ГруппаТовар.Вид = ВидГруппыФормы.ОбычнаяГруппа;
//	ГруппаТовар.Заголовок ="" ;
//	ГруппаТовар.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
//	ГруппаТовар.ОтображатьЗаголовок = ИСТИНА; 
//	ГруппаТовар.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
//	ГруппаТовар.РастягиватьПоГоризонтали = ИСТИНА;
//	ГруппаТовар.Видимость = Истина;
//	
//		ЭлПоискШк = ЭтаФорма.Элементы.Добавить("ПоискШК"+Индекс, Тип("ПолеФормы"),ГруппаТовар);
//		ЭлПоискШк.Вид = ВидПоляФормы.ПолеВвода; 
//		ЭлПоискШк.Заголовок = "ШтрихКод";
//		ЭлПоискШк.ПутьКДанным = "ПоискШК"; 
//		ЭлПоискШк.Шрифт = Новый Шрифт("Verdana", 16,Истина);
//		ЭлПоискШк.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
//		ЭлПоискШк.УстановитьДействие("ИзменениеТекстаРедактирования","ПоискШКПриИзмененииКлиент"); 

//	
//КонецПроцедуры
	


&НаКлиенте
Процедура ПоискШКПриИзмененииКлиент(Элемент, Текст, СтандартнаяОбработка)  
	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		ПоискТовараВТаблицеПоИмени(Текст);
	Иначе
		ПоискQR(Текст);		
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ПоискQR(ШК)
	//НайденныеСтроки = Ложь;
            //спрСерия = Справочники.СерииНоменклатуры.НайтиПоНаименованию(СокрЛП(ШК)); 
						
			//Отбор = Новый Структура("Серия",СокрЛП(ШК));
			//НайденныеСтроки = ДокПересчет.Товары.НайтиСтроки(Отбор);
			//Если НайденныеСтроки.Количество() >=1 Тогда
			//	Для сч=0 по НайденныеСтроки.Количество() - 1 Цикл
			//		ДобавитьИнформацияОТоваре(НайденныеСтроки[сч]);
			//	КонецЦикла; 
			//	ЭтаФорма.Элементы.ПоискШК.Доступность = Ложь; 
			//КонецЕсли; 
			спрСерия = СтрЗаменить(СокрЛП(ШК), " ", "");

			Для Каждого стр из ДокПересчет.Товары Цикл
				Если стр.Серия = спрСерия Тогда
					ДобавитьИнформацияОТоваре(стр);
					ЭтаФорма.Элементы.ПоискШК.Доступность = Ложь; 
				КонецЕсли;
			КонецЦикла;
			

	//Возврат НайденныеСтроки;			
КонецПроцедуры


&НаСервере
Процедура ПоискТовараВТаблицеПоИмени(ШК)
	НайденныеСтроки = Ложь;
	Т = ПоискШК(ШК);
	Если Т <> Ложь Тогда
			Отбор = Новый Структура("Номенклатура",Т);
			НайденныеСтроки = ДокПересчет.Товары.НайтиСтроки(Отбор);  
			Для сч=0 по НайденныеСтроки.Количество() - 1 Цикл
				ДобавитьИнформацияОТоваре(НайденныеСтроки[сч]);
			КонецЦикла; 
			ЭтаФорма.Элементы.ПоискШК.Доступность = Ложь;
	КонецЕсли;
	//Возврат НайденныеСтроки;			
КонецПроцедуры

&НаСервере
Процедура ДобавитьИнформацияОТоваре(М) 
	//М.КоличествоУчет
	//М.КоличествоФакт
	//М.Номенклатура
	//М.НомерСтроки
	//М.Серия 
	
	
	
	ГруппаТовар = ЭтаФорма.Элементы.Добавить("ГруппаТовар"+М.НомерСтроки, Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаПересчет);
	ГруппаТовар.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаТовар.Заголовок ="" ;
	ГруппаТовар.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаТовар.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаТовар.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаТовар.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаТовар.Видимость = Истина;
	
	ГруппаОст = ЭтаФорма.Элементы.Добавить("ГруппаШапка"+М.НомерСтроки, Тип("ГруппаФормы"),ЭтаФорма.Элементы["ГруппаТовар"+М.НомерСтроки]);
	ГруппаОст.Вид = ВидГруппыФормы.ОбычнаяГруппа; 
	ГруппаОст.Заголовок =М.Номенклатура ;
	ГруппаОст.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаОст.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаОст.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаОст.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаОст.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
	
///
   		ЭлСерия =ЭтаФорма.Элементы.Добавить("Серия"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлСерия.Вид = ВидДекорацииФормы.Надпись;
		ЭлСерия.Заголовок = М.Серия; 
		ЭлСерия.Шрифт = Новый Шрифт("Verdana", 16,Истина);  
		//
		ЭлОстаток =ЭтаФорма.Элементы.Добавить("Остаток"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлОстаток.Вид = ВидДекорацииФормы.Надпись;
		ЭлОстаток.Заголовок = Строка(М.КоличествоУчет) + " шт."; 
		ЭлОстаток.Шрифт = Новый Шрифт("Verdana", 16,Истина);
        // 
		ЭлРасчет =ЭтаФорма.Элементы.Добавить("Расчет"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлРасчет.Вид = ВидДекорацииФормы.Надпись;
		ЭлРасчет.Заголовок = Строка(М.КоличествоФакт); 
		ЭлРасчет.Видимость = Ложь; 
		//
		ЭлПалет = ЭтаФорма.Элементы.Добавить("Палет"+М.НомерСтроки, Тип("ПолеФормы"),ГруппаОст);
		ЭлПалет.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлПалет.Заголовок = "Палет";
		ЭлПалет.ПутьКДанным = "Палет"; 
		ЭлПалет.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлПалет.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		ЭлПалет.УстановитьДействие("ПриИзменении","ПалетПриИзмененииКлиент"); 
		//ЭтаФорма.Элементы["Палет"+сч].ТекстРедактирования = "0.000";
		УстановитьРеквизиты("Палет");
		//ЭтаФорма.Элементы["Палет"+сч] = "";
		//
		ЭлРяд = ЭтаФорма.Элементы.Добавить("Ряд"+М.НомерСтроки, Тип("ПолеФормы"),ГруппаОст);
		ЭлРяд.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлРяд.Заголовок = "Ряд";
		ЭлРяд.ПутьКДанным = "Ряд"; 
		ЭлРяд.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлРяд.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина); 
		ЭлРяд.УстановитьДействие("ПриИзменении","РядПриИзмененииКлиент");
		УстановитьРеквизиты("Ряд");
		//
		ЭлКоробов = ЭтаФорма.Элементы.Добавить("Коробов"+М.НомерСтроки, Тип("ПолеФормы"),ГруппаОст);
		ЭлКоробов.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлКоробов.Заголовок = "Коробов";
		ЭлКоробов.ПутьКДанным = "Коробов"; 
		ЭлКоробов.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлКоробов.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		ЭлКоробов.УстановитьДействие("ПриИзменении","КоробовПриИзмененииКлиент");
		УстановитьРеквизиты("Коробов");
		
		//
		ЭлКолШт = ЭтаФорма.Элементы.Добавить("КолШт"+М.НомерСтроки, Тип("ПолеФормы"),ГруппаОст);
		ЭлКолШт.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлКолШт.Заголовок = "КолШт";
		ЭлКолШт.ПутьКДанным = "КолШт"; 
		ЭлКолШт.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлКолШт.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		ЭлКолШт.УстановитьДействие("ПриИзменении","КолШтПриИзмененииКлиент");
		УстановитьРеквизиты("КолШт");
		//
		ЭлОстатокР = ЭтаФорма.Элементы.Добавить("ОстатокР"+М.НомерСтроки, Тип("ПолеФормы"),ГруппаОст);
		ЭлОстатокР.Вид = ВидПоляФормы.ПолеВвода; 
		ЭлОстатокР.Заголовок = "Остаток";
		ЭлОстатокР.ПутьКДанным = "ОстатокР"; 
		ЭлОстатокР.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлОстатокР.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина); 
		ЭлОстатокР.УстановитьДействие("ПриИзменении","ОстатокПриИзмененииКлиент");
		УстановитьРеквизиты("ОстатокР");
		//
		//ЭлИтого = ЭтаФорма.Элементы.Добавить("Итого"+сч, Тип("ПолеФормы"),ГруппаОст);
		//ЭлИтого.Вид = ВидПоляФормы.ПолеВвода; 
		//ЭлИтого.Заголовок = "Итого";
		//ЭлИтого.ПутьКДанным = "Итого"; 
		//ЭлИтого.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		//ЭлИтого.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
		//
		ЭлИтого =ЭтаФорма.Элементы.Добавить("Итого"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлИтого.Вид = ВидДекорацииФормы.Надпись;
		ЭлИтого.Заголовок = 0; 
		ЭлИтого.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		ЭлИтого.ЦветТекста = WebЦвета.Зеленый;
		//
		ЭлОтклонение =ЭтаФорма.Элементы.Добавить("Отклонение"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлОтклонение.Вид = ВидДекорацииФормы.Надпись;
		ЭлОтклонение.Заголовок = М.КоличествоФакт; 
		ЭлОтклонение.Шрифт = Новый Шрифт("Verdana", 16,Истина);  

/// 
	ГруппаКнопки = ЭтаФорма.Элементы.Добавить("ГруппаКнопки"+М.НомерСтроки, Тип("ГруппаФормы"),ЭтаФорма.Элементы["ГруппаТовар"+М.НомерСтроки]);
	ГруппаКнопки.Вид = ВидГруппыФормы.ОбычнаяГруппа; 
	ГруппаКнопки.Заголовок ="" ;
	ГруппаКнопки.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаКнопки.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаКнопки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаКнопки.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаКнопки.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);

	КнопкаУдалить = ЭтаФорма.Элементы.Добавить("КнопкаУдалить"+М.НомерСтроки, Тип("КнопкаФормы"),ЭтаФорма.Элементы["ГруппаКнопки"+М.НомерСтроки]);
	КнопкаУдалить.Заголовок = "Удалить товар";
	КнопкаУдалить.ИмяКоманды = "УдалитьТовар";  

	КнопкаДобавитьТовар = ЭтаФорма.Элементы.Добавить("КнопкаДобавить"+М.НомерСтроки, Тип("КнопкаФормы"),ЭтаФорма.Элементы["ГруппаКнопки"+М.НомерСтроки]);
	КнопкаДобавитьТовар.Заголовок = "Добавить";
	КнопкаДобавитьТовар.ИмяКоманды = "ДобавитьТовар";
	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизиты(имяРек)
ЭтотОбъект[имяРек] = 0;	
КонецПроцедуры

&НаКлиенте
Процедура ОстатокПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);		
КонецПроцедуры

&НаКлиенте
Процедура КолШтПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);		
КонецПроцедуры

&НаКлиенте
Процедура КоробовПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);		
КонецПроцедуры

&НаКлиенте
Процедура РядПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПалетПриИзмененииКлиент(Элемент)
	РасчетФактИтог(Элемент.Имя,Элемент.ТекстРедактирования);
КонецПроцедуры


&НаСервере
Функция ПоискТовараВТаблицеПоСерии(Серия)
			
КонецФункции

&НаКлиенте
Процедура ДиалогСВопросом()
 
    Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение",
      ЭтотОбъект);	
 
	//ПоказатьВопрос(Оповещение,
	//    "Нет данного товара",
	//    РежимДиалогаВопрос.ОК,
	//    0, // таймаут в секундах
	//    КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
	//    "Нет данного товара" // (необ.) заголовок
	//);
	ПоказатьПредупреждение(
        Оповещение,
        "", // предупреждение
        3, // (необ.) таймаут в секундах
        "Нет данного товара в документе" // (необ.) заголовок
    ); 
КонецПроцедуры
&НаКлиенте
Процедура ПослеЗакрытияПредупреждение(Параметры) Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТовар(Команда)
	З = ЗаписатьТоварКоличество(НомерГруппы(ЭтаФорма.ТекущийЭлемент.Родитель.Имя));
	Если З = Ложь Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение",
		ЭтотОбъект);	
		ПоказатьПредупреждение(
		Оповещение,
		"", // предупреждение
		3, // (необ.) таймаут в секундах
		"При сохранении произошла ошибка" // (необ.) заголовок
		);
		
	КонецЕсли;
	
КонецПроцедуры 


&НаСервере
Функция ЗаписатьТоварКоличество(Номер)  
	Ош = Истина;
//
Если ЭтаФорма.Элементы.Найти("ГруппаТовар"+Номер) <> Неопределено Тогда  
		Док = ДокПересчет.ПолучитьОбъект();
		Факт = ЭтаФорма.Элементы["Итого"+Номер].Заголовок;
		ТекСтрока = Док.Товары[Число(Номер)-1];
		Если ТекСтрока.Количество <> "" Тогда
			ТекСтрока.Количество = ТекСтрока.Количество + Число(Факт); 
		Иначе
			ТекСтрока.Количество = Число(Факт);	
		КонецЕсли;
		
		Попытка
			Док.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			Ош = Ложь;	
		КонецПопытки;
	
		Для Каждого стр из ЭтаФорма.Элементы["ГруппаТовар"+Номер].ПодчиненныеЭлементы Цикл  
			ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы[стр.Имя]);
		КонецЦикла;
		ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы["ГруппаТовар"+Номер]); 
		ЭтаФорма.Элементы.ПоискШК.Доступность = Истина;  
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ПоискШК; 
	Иначе
		Ош = Ложь; 
		
	КонецЕсли;
//
	
	Возврат Ош;
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
ПриОткрытииНаСервере();
	
КонецПроцедуры
	
&НаСервере
Процедура ПриОткрытииНаСервере()
		ДобавляемыеРеквизиты = Новый Массив;
//Строка поиска		
		//НовыйРеквизитПоискШК = Новый РеквизитФормы("ПоискШК",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(20))); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПоискШК);
		//
		 
		НовыйРеквизитПалет = Новый РеквизитФормы("Палет",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
		НовыйРеквизитПалет = Новый РеквизитФормы("Ряд",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
		НовыйРеквизитПалет = Новый РеквизитФормы("Коробов",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
		НовыйРеквизитПалет = Новый РеквизитФормы("КолШт",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
		НовыйРеквизитПалет = Новый РеквизитФормы("ОстатокР",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
		НовыйРеквизитПалет = Новый РеквизитФормы("Итого",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3))); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитПалет); 
        ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьТовар(Команда)
	УдалитьФормуТовара(НомерГруппы(ЭтаФорма.ТекущийЭлемент.Родитель.Имя));
КонецПроцедуры 

&НаСервере
Процедура УдалитьФормуТовара(Номер) 
	Если ЭтаФорма.Элементы.Найти("ГруппаТовар"+Номер) <> Неопределено Тогда  
		Для Каждого стр из ЭтаФорма.Элементы["ГруппаТовар"+Номер].ПодчиненныеЭлементы Цикл  
			ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы[стр.Имя]);
		КонецЦикла;
		ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы["ГруппаТовар"+Номер]); 
		ЭтаФорма.Элементы.ПоискШК.Доступность = Истина;  
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ПоискШК; 
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПоискШК(Ш)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество() >=1 Тогда
		Пока Рез.Следующий() Цикл 
			Ном = Рез.Номенклатура;
			
		КонецЦикла
	Иначе
		Ном = Ложь;	
	КонецЕсли;
	
	Возврат Ном;
	
КонецФункции

//&НаСервере
//Функция ПоискQR(ШК) 
//	//Для Каждого стр из ДокПересчет.Товары Цикл
//	//	Если стр.Серия = СокрЛП(ШК) Тогда
//	//		Ном = стр.Номенклатура;
//	//		Прервать;
//	//	Иначе
//	//		Ном = Ложь;
//	//	КонецЕсли;
//	//КонецЦикла;
//	//Возврат Ном;
//КонецФункции 

&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура РасчетФактИтог(ИмяЭлемента,ЗначениеЭл) 
	//НомерГр = Прав(ИмяЭлемента,1);  
	НомерГр = НомерГруппы(ИмяЭлемента);
	Палет = ЭтаФорма.Элементы["Палет" + Строка(НомерГр)].ТекстРедактирования;
	Ряд = ЭтаФорма.Элементы["Ряд" + Строка(НомерГр)].ТекстРедактирования;
	Коробов = ЭтаФорма.Элементы["Коробов" + Строка(НомерГр)].ТекстРедактирования;
	КолШт = ЭтаФорма.Элементы["КолШт" + Строка(НомерГр)].ТекстРедактирования;
	Остаток = ЭтаФорма.Элементы["ОстатокР" + Строка(НомерГр)].ТекстРедактирования;
	
	Если Палет = "0.000" Тогда
		Палет = 1 ;
	Иначе
		Палет = Число(Палет);
	КонецЕсли;
	
	Если Ряд = "0.000" Тогда
		Ряд = 1 ;
	Иначе
		Ряд = Число(Ряд);
	КонецЕсли;
	
	Если Коробов = "0.000" Тогда
		Коробов = 1 ;
	Иначе
		Коробов = Число(Коробов);
	КонецЕсли;
	
	Если КолШт = "0.000" Тогда
		КолШт = 1 ;
	Иначе
		КолШт = Число(КолШт);
	КонецЕсли; 
	
	Если Остаток = "0.000" Тогда
		Остаток = 1 ;
	Иначе
		Остаток = Число(Остаток);
	КонецЕсли;
	
	ИтогРасчет = ?(Палет > 0, Палет,1) * ?(Ряд > 0, Ряд, 1) * ?(Коробов > 0, Коробов, 1) * ?(КолШт > 0, КолШт, 1)  + Остаток;
	Расчет =  ЭтаФорма.Элементы["Расчет" + Строка(НомерГр)].Заголовок;
	ИтогПоСчету = Число(Расчет) + Число(ИтогРасчет);
	ЭтаФорма.Элементы["Итого" + Строка(НомерГр)].Заголовок = ИтогРасчет;
	ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].Заголовок = ИтогПоСчету;
	
	Если ИтогПоСчету = 0 Тогда 
		ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].Заголовок = "Все верно!";
		ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].ЦветТекста = WebЦвета.Зеленый; 
	Иначе
		ЭтаФорма.Элементы["Отклонение" + Строка(НомерГр)].ЦветТекста = WebЦвета.Красный;	
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Функция НомерГруппы(Стр)
	ОбработаннаяСтрокаСтр = СокрЛП(Стр);
	РезультатРаботы = ОбработаннаяСтрокаСтр;
	Для н=1 по СтрДлина(ОбработаннаяСтрокаСтр) Цикл
		ТекСимвол = Сред(ОбработаннаяСтрокаСтр,н,1);
		Если Найти("0123456789",ТекСимвол) = 0 Тогда
			РезультатРаботы = СтрЗаменить(РезультатРаботы,ТекСимвол,""); 
		КонецЕсли; 
	КонецЦикла; 
	Возврат РезультатРаботы;
КонецФункции

&НаСервере
Функция Расчет()  
	возврат 5;	
КонецФункции


&НаСервере
Процедура ЗакончитьПересчетНаСервере() 
	ГруппаОстРасч = ЭтаФорма.Элементы.Добавить("ГруппаОстРасч", Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаПересчет);
	ГруппаОстРасч.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаОстРасч.Заголовок ="" ;
	ГруппаОстРасч.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаОстРасч.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаОстРасч.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаОстРасч.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаОстРасч.Видимость = Истина;
	
	ЭтаФорма.Элементы.ЗакончитьПересчет.Видимость = Ложь;
	ЭтаФорма.Элементы.ПродолжитьПересчет.Видимость = Истина;
	
	
	ТекДок = ДокПересчет.ПолучитьОбъект();
	Для Каждого стр из ТекДок.Товары Цикл
		
		Если ЭтаФорма.Элементы.Найти("ГруппаТовар"+(Число(стр.НомерСтроки)-1)) <> Неопределено Тогда  
			Для Каждого стрЭл из ЭтаФорма.Элементы["ГруппаТовар"+(Число(стр.НомерСтроки)-1)].ПодчиненныеЭлементы Цикл  
				ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы[стрЭл.Имя]);
			КонецЦикла;
			ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы["ГруппаТовар"+(Число(стр.НомерСтроки)-1)]); 
		КонецЕсли;
		
		Если Число(стр.КоличествоФакт) <> 0 Тогда
			ДобавитьИнформацияОТовареОстаток(стр);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//по остаткам пересчета
&НаСервере
Процедура ДобавитьИнформацияОТовареОстаток(М) 
	//М.КоличествоУчет
	//М.КоличествоФакт
	//М.Номенклатура
	//М.НомерСтроки
	//М.Серия 
	
	Если М.НомерСтроки = "35" ТОгда
	ГруппаТовар = ЭтаФорма.Элементы.Добавить("ГруппаТоварОст"+М.НомерСтроки, Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаОстРасч);
	ГруппаТовар.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаТовар.Заголовок ="" ;
	ГруппаТовар.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаТовар.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаТовар.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаТовар.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаТовар.Видимость = Истина;
	
	ГруппаОст = ЭтаФорма.Элементы.Добавить("ГруппаШапка"+М.НомерСтроки, Тип("ГруппаФормы"),ЭтаФорма.Элементы["ГруппаТовар"+М.НомерСтроки]);
	ГруппаОст.Вид = ВидГруппыФормы.ОбычнаяГруппа; 
	ГруппаОст.Заголовок =М.Номенклатура ;
	ГруппаОст.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаОст.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаОст.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаОст.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаОст.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
	
///
   		ЭлСерия =ЭтаФорма.Элементы.Добавить("Серия"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлСерия.Вид = ВидДекорацииФормы.Надпись;
		ЭлСерия.Заголовок = М.Серия; 
		ЭлСерия.Шрифт = Новый Шрифт("Verdana", 16,Истина);  
		//
		ЭлОстаток =ЭтаФорма.Элементы.Добавить("Остаток"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлОстаток.Вид = ВидДекорацииФормы.Надпись;
		ЭлОстаток.Заголовок = Строка(Число(М.КоличествоФакт)*(-1)) + " шт."; 
		ЭлОстаток.Шрифт = Новый Шрифт("Verdana", 16,Истина);
		
	КонецЕсли;
	
	
	
Попытка	
	
	ГруппаТовар = ЭтаФорма.Элементы.Добавить("ГруппаТоварОст"+М.НомерСтроки, Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаОстРасч);
	ГруппаТовар.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаТовар.Заголовок ="" ;
	ГруппаТовар.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаТовар.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаТовар.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаТовар.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаТовар.Видимость = Истина;
	
	ГруппаОст = ЭтаФорма.Элементы.Добавить("ГруппаШапка"+М.НомерСтроки, Тип("ГруппаФормы"),ЭтаФорма.Элементы["ГруппаТоварОст"+М.НомерСтроки]);
	ГруппаОст.Вид = ВидГруппыФормы.ОбычнаяГруппа; 
	ГруппаОст.Заголовок =М.Номенклатура ;
	ГруппаОст.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ГруппаОст.ОтображатьЗаголовок = ИСТИНА; 
	ГруппаОст.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаОст.РастягиватьПоГоризонтали = ИСТИНА;
	ГруппаОст.ШрифтЗаголовка = Новый Шрифт("Verdana", 16,Истина);
	
///
   		ЭлСерия =ЭтаФорма.Элементы.Добавить("Серия"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлСерия.Вид = ВидДекорацииФормы.Надпись;
		ЭлСерия.Заголовок = М.Серия; 
		ЭлСерия.Шрифт = Новый Шрифт("Verdana", 16,Истина);  
		//
		ЭлОстаток =ЭтаФорма.Элементы.Добавить("Остаток"+М.НомерСтроки, Тип("ДекорацияФормы"),ГруппаОст); 
		ЭлОстаток.Вид = ВидДекорацииФормы.Надпись;
		ЭлОстаток.Заголовок = Строка(Число(М.КоличествоФакт)*(-1)) + " шт."; 
		ЭлОстаток.Шрифт = Новый Шрифт("Verdana", 16,Истина);
	Исключение
		Сообщить(М.НомерСтроки);
	КонецПопытки ;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗакончитьПересчет(Команда)
	ЗакончитьПересчетНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПродолжитьПересчетНаСервере()
	ЭтаФорма.Элементы.ЗакончитьПересчет.Видимость = Истина;
	ЭтаФорма.Элементы.ПродолжитьПересчет.Видимость = Ложь;
	
		Если ЭтаФорма.Элементы.Найти("ГруппаОстРасч") <> Неопределено Тогда  
		Для Каждого стр из ЭтаФорма.Элементы["ГруппаОстРасч"].ПодчиненныеЭлементы Цикл  
			ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы[стр.Имя]);
		КонецЦикла;
		ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы["ГруппаОстРасч"]); 
		ЭтаФорма.Элементы.ПоискШК.Доступность = Истина;  
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ПоискШК; 
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ПродолжитьПересчет(Команда)
	ПродолжитьПересчетНаСервере();
КонецПроцедуры

//&НаСервере
//Процедура ТЧДокВыборСервер(Т)
//   ТекДок = Т;

//	ЗакончитьПересчетНаСервере();	
//КонецПроцедуры


&НаСервере
Функция ДокПересчетНаСервере(ДокП)
ДокПересчет = ДокП.Ссылка;

ДокументПроведен = Истина;
		
	Возврат ДокументПроведен;	

	
КонецФункции



&НаКлиенте
Процедура ТЧДокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//ТЧДокВыборСервер(ЭтаФорма.ТЧДок[ВыбраннаяСтрока].ДокСсылка);
	Если ДокПересчетНаСервере(ЭтаФорма.ТЧДок[ВыбраннаяСтрока].ДокСсылка) =  Истина Тогда
		ЭтаФорма.Элементы.ГруппаПересчет.Видимость = Истина;  
		ЭтаФорма.Элементы.ГруппаШапка.Видимость = Ложь;
	Иначе
		Сообщить("При создании документа произошла ошибка");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТекДатаПриИзменении(Элемент)
	ЗаполнитьТЧ();
КонецПроцедуры


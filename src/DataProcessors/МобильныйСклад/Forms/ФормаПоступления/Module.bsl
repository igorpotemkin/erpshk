
&НаСервере
Процедура ПоискШКТест(Ш)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш); 

	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  
	
	Если ТабЗнач.Количество()>=0 Тогда 
		
		Мас = Новый Массив;
		Для Каждого стр из ТабЗнач Цикл
			Мас.Добавить(стр.Номенклатура);
		КонецЦикла;
		//Поиск спаек
		
		ЗапросСпаек = Новый	 Запрос;
		ЗапросСпаек.Текст = "ВЫБРАТЬ
		                    |	СХК_Спайки.ОснНоменклатура КАК ОснНоменклатура,
		                    |	СХК_Спайки.ДопНомеклатура КАК ДопНомеклатура
		                    |ИЗ
		                    |	РегистрСведений.СХК_Спайки КАК СХК_Спайки
		                    |ГДЕ
		                    |	СХК_Спайки.ОснНоменклатура В(&ОснНоменклатура)"; 
		ЗапросСпаек.УстановитьПараметр("ОснНоменклатура", Мас);
		РезультатСпаек = ЗапросСпаек.Выполнить().Выбрать(); 
		Если РезультатСпаек.Количество()>=1 Тогда  
			СписокНом = Новый СписокЗначений;
			СписокНом.Очистить();
			Пока РезультатСпаек.Следующий() Цикл
				СписокНом.Добавить(РезультатСпаек.ОснНоменклатура,Строка(РезультатСпаек.ОснНоменклатура));	
				СписокНом.Добавить(РезультатСпаек.ДопНомеклатура,Строка(РезультатСпаек.ДопНомеклатура));
			КонецЦикла;   
			ЭтаФорма.Элементы.ВыбНоменклатура.Видимость = Истина;
			ЭтаФорма.Элементы.ВыбНоменклатура.СписокВыбора.ЗагрузитьЗначения(СписокНом.ВыгрузитьЗначения()); 
		Иначе
			ЭтаФорма.Элементы.ВыбНоменклатура.Видимость = Ложь;
		КонецЕсли;
		
			

		//
		Запрос1 = Новый Запрос;

		Запрос1.Текст = "ВЫБРАТЬ
		                |	ДвиженияСерийТоваров.Серия КАК Серия
		                |ИЗ
		                |	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
		                |ГДЕ
		                |	ДвиженияСерийТоваров.Период > &Период
		                |	И ДвиженияСерийТоваров.Номенклатура В (&Номенклатура)
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ДвиженияСерийТоваров.Серия";
		Запрос1.УстановитьПараметр("Период", НачалоДня(ТекущаяДата())-180*86400);
		//Запрос1.УстановитьПараметр("Номенклатура", ТабЗнач[0].Номенклатура);
		Запрос1.УстановитьПараметр("Номенклатура", Мас);
		
		Номенклатура = "";
		Серия = "";
		Количество = 0; 
		//Если Мас.Количество()>1 Тогда
		//	СписокНом = Новый СписокЗначений; 
		//	СписокНом.Очистить();
		//	СписокНом.ЗагрузитьЗначения(Мас);
		//	ЭтаФорма.Элементы.ВыбНоменклатура.СписокВыбора.ЗагрузитьЗначения(СписокНом.ВыгрузитьЗначения());
		//Иначе	
			Номенклатура = ТабЗнач[0].Номенклатура; 
		//КонецЕсли;
		
		
		РезультатЗапроса = Запрос1.Выполнить();
		
		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		

		СписокСерий = Новый СписокЗначений; 
		СписокСерий.Очистить();
		СписокСерий.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Серия"));
		Если СписокСерий.Количество() = 1 Тогда
			ЭтаФорма.Серия = СписокСерий[0].Значение;	
		Иначе
			ЭтаФорма.Элементы.ВыбСерия.СписокВыбора.ЗагрузитьЗначения(СписокСерий.ВыгрузитьЗначения()); 
		КонецЕсли;
		
		
		ЗапросУп = Новый Запрос;
		ЗапросУп.Текст = "ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		|	И УпаковкиЕдиницыИзмерения.Владелец В (&Владелец)"; 
		ЗапросУп.УстановитьПараметр("ПометкаУдаления",Ложь);
		//ЗапросУп.УстановитьПараметр("Владелец",ТабЗнач[0].Номенклатура);
		ЗапросУп.УстановитьПараметр("Владелец",Мас);
		РезультатЗапросаУп = ЗапросУп.Выполнить();
		
		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		
		Список = Новый СписокЗначений; 
		Список.Очистить();
		Список.ЗагрузитьЗначения(РезультатЗапросаУп.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 
		
		
	КонецЕсли;
	
	
КонецПроцедуры  


&НаКлиенте
Процедура ПоискШКQrИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Элементы.ГруппаНоменклатура.Видимость = Истина; 
	Элементы.Добавить.Видимость = Истина;  

	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		ПоискШКТест(Текст);
	Иначе
		Для сч = 3 по 7 Цикл
			Т = ПоискQR(Текст,сч);
			Если Т <> Ложь Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Т <> Ложь ТОгда

			СоздатьГруппыРезультата(Т);
		Иначе
			Сообщить("Остаток 0");
		КонецЕсли;
		
	КонецЕсли;  
	
		
КонецПроцедуры  

&НаСервере
Процедура СоздатьГруппыРезультата(м)  
	
	Номенклатура = "";
	Серия = "";
	Количество = 0;  
	Номенклатура = м[0].Номенклатура; 
	Если м[0].Серия <> "" Тогда
		Серия = м[0].Серия; 
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		|	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Владелец",Номенклатура);
		РезультатЗапроса = Запрос.Выполнить();
		
		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		
		Список = Новый СписокЗначений; 
		Список.Очистить();
		Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 

		//СписокСерий = Новый СписокЗначений; 
		//СписокСерий.Очистить();
		//Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		//ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 
	
	Иначе
		ЭтаФорма.ТекущийЭлемент = Элементы.Серия;
	КонецЕсли;
		
	
КонецПроцедуры

&НаСервере
Функция ПоискШК(Ш)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш);
	Рез = Запрос.Выполнить().Выбрать();
	Мас = Новый Массив;

	Если Рез.Количество() >=1 Тогда
		Пока Рез.Следующий() Цикл 
			//Ном = Рез.Номенклатура;
			СЗ = Новый Структура;
			СЗ.Вставить("Номенклатура",Рез.Номенклатура);
			СЗ.Вставить("Серия",""); 
			Мас.Добавить(СЗ);
			
		КонецЦикла
	Иначе
		Мас = Ложь;	
	КонецЕсли;
	
	Возврат Мас;
	
КонецФункции  

&НаСервере
Функция ПоискQR(Ш,сим)
	Мас = Новый Массив;
	
	
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	ЗаказНаПроизводство2_2Продукция.Номенклатура КАК Номенклатура,
	//|	ЗаказНаПроизводство2_2Продукция.Расш1_Серия КАК Расш1_Серия
	//|ИЗ
	//|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
	//|ГДЕ
	//|	ЗаказНаПроизводство2_2Продукция.Ссылка.Дата >= &Дата
	//|	И ЗаказНаПроизводство2_2Продукция.Расш1_Серия.Наименование = &Серия";   
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДвиженияСерийТоваров.Серия КАК Серия,
		               |	ДвиженияСерийТоваров.Номенклатура КАК Номенклатура
		               |ИЗ
		               |	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
		               |ГДЕ
		               |	ДвиженияСерийТоваров.Период > &Период
		               |	И ДвиженияСерийТоваров.Серия.Наименование = &Наименование
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ДвиженияСерийТоваров.Серия,
		               |	ДвиженияСерийТоваров.Номенклатура";
		Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата())-360*86400);
		Запрос.УстановитьПараметр("Наименование", Ш);
	
	
	Рез = Запрос.Выполнить().Выбрать();
	
	//Запрос1 = Новый Запрос;
	//Запрос1.Текст = "ВЫБРАТЬ
	//|	ЗаказНаПроизводство2_2Продукция.Номенклатура КАК Номенклатура,
	//|	ЗаказНаПроизводство2_2Продукция.Расш1_Серия КАК Расш1_Серия
	//|ИЗ
	//|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
	//|ГДЕ
	//|	ЗаказНаПроизводство2_2Продукция.Ссылка.Дата >= &Дата
	//|	И ЗаказНаПроизводство2_2Продукция.Расш1_Серия.Наименование ПОДОБНО &Серия";   
	////|	ТоварыНаСкладахОстатки.Серия.Наименование =  &Серия";
	//
	//СтрокаСерия = Лев(Ш,сим);
	//СтрокаСерия = СтрокаСерия+Строка("%"+Прав(Ш,11));
	//Запрос1.УстановитьПараметр("Серия", СтрокаСерия);
	//Запрос1.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата())-30*86400); 	
	//Рез1 = Запрос1.Выполнить().Выбрать(); 
	
	
	Если Рез.Количество()>0 Тогда
		Пока Рез.Следующий() Цикл
			СЗ = Новый Структура;
			СЗ.Вставить("Номенклатура",Рез.Номенклатура);
			СЗ.Вставить("Серия",Рез.Серия); 
			Мас.Добавить(СЗ);
		КонецЦикла;		//Ном = Рез.Номенклатура; 
	//ИначеЕсли Рез1.Количество()>0 Тогда
	//	Пока Рез.Следующий() Цикл
	//		СЗ = Новый Структура;
	//		СЗ.Вставить("Номенклатура",Рез.Номенклатура);
	//		СЗ.Вставить("Серия",Рез.Расш1_Серия); 
	//		Мас.Добавить(СЗ);
	//	КонецЦикла;
	Иначе
		
		Мас = Ложь;	
	КонецЕсли;
	
	Возврат Мас;
	
КонецФункции 

&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции 

&НаКлиенте
Процедура Отмена(Команда)
	Элементы.ГруппаНоменклатура.Видимость = Ложь;
	Элементы.ГруппаДокумент.Видимость = Истина;
    ЗаполнитьТаблицу();
КонецПроцедуры

&НаСервере
Функция ДобавитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Расш1_ПоступлениеСклад.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.Расш1_ПоступлениеСклад КАК Расш1_ПоступлениеСклад
	               |ГДЕ
	               |	Расш1_ПоступлениеСклад.ПометкаУдаления = &ПометкаУдаления
	               |	И Расш1_ПоступлениеСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И Расш1_ПоступлениеСклад.Проведен = &Проведен"; 
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
	Запрос.УстановитьПараметр("Проведен", Истина);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Серия = "" Тогда
		Ош = "Заполните серию";
	ИначеЕсли Количество = 0 Тогда
		Ош = "Заполните количество"; 
	ИначеЕсли Ячейка = "" Тогда
        Ош = "Уажите адрес хранения"; 

	Иначе
		
	
	
	
	Если Рез.Следующий() Тогда
		ТекДок = Рез.Ссылка.ПолучитьОбъект();
		НоваяСтрока = ТекДок.Товары.Добавить();
	    НоваяСтрока.Номенклатура = Номенклатура;
	    НоваяСтрока.Серия = Серия;
	    НоваяСтрока.Количество = Количество; 
		НоваяСтрока.Время = ТекущаяДата(); 
		НоваяСтрока.Ячейка = ЭтаФорма.Ячейка;
		ТекДок.Записать(РежимЗаписиДокумента.Проведение);
	Иначе
		ТекДок = Документы.Расш1_ПоступлениеСклад.СоздатьДокумент(); 
		ТекДок.Дата =ТекущаяДата(); 
		ТекДок.Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
		НоваяСтрока = ТекДок.Товары.Добавить();
	    НоваяСтрока.Номенклатура = Номенклатура;
	    НоваяСтрока.Серия = Серия;
	    НоваяСтрока.Количество = Количество; 
		НоваяСтрока.Время = ТекущаяДата(); 
		НоваяСтрока.Ячейка = ЭтаФорма.Ячейка;
		ТекДок.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	 Ош = Ложь;	
	КонецЕсли;
	Возврат Ош;

КонецФункции

&НаКлиенте
Процедура Добавить(Команда)
	Д = ДобавитьНаСервере();
	Если Д = Ложь Тогда 
		Элементы.ГруппаНоменклатура.Видимость = Ложь;
	    Элементы.ГруппаДокумент.Видимость = Истина;
	Иначе
		Сообщить(Д);
	КонецЕсли;
	ЗаполнитьТаблицу();
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТаблицу()
	ТЗ.Очистить();
	Для Каждого стр из ТекДокумент.Товары Цикл
		Т = ТЗ.Добавить();
		Т.НомерСтроки = стр.НомерСтроки;
		Т.Номенклатура = стр.Номенклатура;
		Т.Количество = стр.Количество; 
	КонецЦикла;
	ЭтаФорма.ТекущийЭлемент = Элементы.ПоискШКQr;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Расш1_ПоступлениеСклад.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.Расш1_ПоступлениеСклад КАК Расш1_ПоступлениеСклад
	               |ГДЕ
	               |	Расш1_ПоступлениеСклад.ПометкаУдаления = &ПометкаУдаления
	               |	И Расш1_ПоступлениеСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И Расш1_ПоступлениеСклад.Проведен = &Проведен"; 
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
	Запрос.УстановитьПараметр("Проведен", Истина);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
	
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество() = 0 Тогда
		ТекДок = Документы.Расш1_ПоступлениеСклад.СоздатьДокумент(); 
		ТекДок.Дата =ТекущаяДата(); 
		ТекДок.Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
		ТекДок.Записать(РежимЗаписиДокумента.Проведение);
		ТекДокумент = ТекДок.Ссылка;  
	Иначе  
		Пока Рез.Следующий() Цикл
			ТекДокумент = Рез.Ссылка;	
		КонецЦикла;
	КонецЕсли;  

	ЗаполнитьТаблицу();  
	//ЗаполнитьДоступныеАдреса();	
КонецПроцедуры

//&НаСервере
//Процедура ЗаполнитьДоступныеАдреса()
////
//		Запрос = Новый Запрос;  
//		Запрос.Текст = "ВЫБРАТЬ
//		               |	СХК_СкладЯчейки.Ссылка КАК Ссылка,
//		               |	СХК_СкладЯчейки.Наименование КАК Наименование,
//		               |	СХК_СкладЯчейки.Код КАК Код
//		               |ИЗ
//		               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки";
//		
//		Рез = Запрос.Выполнить().Выбрать();  
//		СЗ = Новый СписокЗначений;
//		Пока Рез.Следующий() Цикл
//			СЗ.Добавить(Рез.Ссылка,Рез.Ссылка);
//		КонецЦикла; 
//		
//	ЭтаФорма.Элементы.ЯчейкаРяд.СписокВыбора.ЗагрузитьЗначения(СЗ.ВыгрузитьЗначения());
////
//	

//КонецПроцедуры


&НаСервере
Процедура ТекДокументТоварыВыборНаСервере(ВыбраннаяСтрока)
	НомерСтроки =  ВыбраннаяСтрока-1;
	Строка = ТекДокумент.Товары[ВыбраннаяСтрока-1];
	Номенклатура = Строка.Номенклатура; 
	Количество = Строка.Количество; 
	Серия = Строка.Серия; 
	

КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере(НомерСтроки) 
	Док = ТекДокумент.ПолучитьОбъект();
	Док.Товары.Удалить(НомерСтроки);
	Док.Записать(РежимЗаписиДокумента.Проведение);
	ЗаполнитьТаблицу();
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)     
	Элементы.ГруппаНоменклатура.Видимость = Ложь;
	Элементы.ГруппаДокумент.Видимость = Истина;
	УдалитьНаСервере(НомерСтроки);
КонецПроцедуры


&НаКлиенте
Процедура ТЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Элементы.ГруппаНоменклатура.Видимость = Истина; 
	Элементы.ГруппаДокумент.Видимость = Ложь; 
	Элементы.Удалить.Видимость = Истина;  
	Элементы.Добавить.Видимость = Ложь;  
	
	ТекДокументТоварыВыборНаСервере(Элемент.ТекущиеДанные.НомерСтроки);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

КонецПроцедуры

//&НаСервере
//Процедура ЗаполнитьДоступныеАдреса()
//	//  
//	ЭтаФорма.Элементы.АдресЯчейка.СписокВыбора.Очистить(); 
//	
//	Запрос = Новый Запрос;  
//	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
//	               |	СХК_СкладЯчейки.Ссылка КАК Ссылка
//	               |ИЗ
//	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
//	               |ГДЕ
//	               |	СХК_СкладЯчейки.ПометкаУдаления = &ПометкаУдаления
//	               |
//	               |УПОРЯДОЧИТЬ ПО
//	               |	СХК_СкладЯчейки.Наименование";
//	
//	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
//	Результат = Запрос.Выполнить();
//	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
//	ТабЗнач = Результат.Выгрузить(СпособОбхода);   
//	
//	Запрос1 = Новый Запрос;
//	Запрос1.Текст = "ВЫБРАТЬ
//	               |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
//	               |ИЗ
//	               |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки"; 
//	Рез = Запрос1.Выполнить();
//	СпособОбхода1 = ОбходРезультатаЗапроса.Прямой;
//	ТЗнач = Рез.Выгрузить(СпособОбхода1); 
//	
//	Для Каждого стр из ТЗнач Цикл 
//		Отбор = Новый Структура;
//		Отбор.Вставить("Ссылка", стр.Ячейка);
//		НайденныеСтроки = ТабЗнач.НайтиСтроки(Отбор); 
//		Если НайденныеСтроки.Количество() >=1 Тогда
//			Для Каждого НСтрока из НайденныеСтроки Цикл
//				ТабЗнач.Удалить(НСтрока);
//			КонецЦикла;
//		КонецЕсли;
//	КонецЦикла;
//	
//		
// 	
//	//РезультатЗапроса = Запрос.Выполнить();  
//	//Список = Новый СписокЗначений; 
//	//Список.Очистить();
//	//Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
//	//Список.	
//	////ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
//	//ЭтаФорма.Элементы.АдресЯчейка.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения());
//	
//	//Результат = Запрос.Выполнить();
//	//СпособОбхода = ОбходРезультатаЗапроса.Прямой;
//	//ТабЗнач = Результат.Выгрузить(СпособОбхода);   
//	//ТабЗнач.Свернуть("Ссылка"); 
//	//ТабЗнач.Сортировать("Ссылка Возр");  
//	

//	ЭтаФорма.Элементы.АдресЯчейка.СписокВыбора.ЗагрузитьЗначения(ТабЗнач.ВыгрузитьКолонку("Ссылка"));

//	
//КонецПроцедуры

//&НаКлиенте
//Процедура АдресЯчейкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	//ЭтаФорма.АдресЯчейка = ВыбратьИзСписка(ЗаполнитьДоступныеАдреса(), Элементы.АдресЯчейка); 
//	//ЗаполнитьДоступныеАдреса();
//КонецПроцедуры

&НаКлиенте
Процедура АдресЯчейкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//ЭтаФорма.АдресЯчейка =ВыбранноеЗначение; 
	АдресЯчейкаОбработкаВыбораСервер(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура АдресЯчейкаОбработкаВыбораСервер(Наименование)
	спр = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию(Наименование);
	ЭтаФорма.Ячейка =  спр;
	Если спр.ВМестимость = "Палет" Тогда
		ЭтаФорма.Элементы.Ячейка.ЦветТекста = WebЦвета.Зеленый;
	ИначеЕсли спр.ВМестимость = "Сборный" Тогда
		ЭтаФорма.Элементы.Ячейка.ЦветТекста = WebЦвета.Желтый;
	КонецЕсли;
	
	ЭтаФорма.АдресЯчейка = ЭтаФорма.Ячейка;
КонецПроцедуры

&НаСервере
Процедура СЗУпаковкиПриИзмененииНаСервере(Эл)  
	ЭтаФорма.Упаковка = Эл;
	ЭтаФорма.КолУп = 0;
КонецПроцедуры

&НаКлиенте
Процедура СЗУпаковкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СЗУпаковкиПриИзмененииНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура КолУпПриИзмененииНаСервере()
	Попытка 
		ЭтаФорма.Количество = ЭтаФорма.КолУп * ЭтаФорма.Упаковка.Числитель;
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура КолУпПриИзменении(Элемент)
	КолУпПриИзмененииНаСервере();
КонецПроцедуры



&НаСервере
Процедура СканЯчейкиИзменениеТекстаРедактированияНаСервере(ШтрихКод)   
	ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СкладЯчейки.Ряд КАК Ряд,
	               |	СХК_СкладЯчейки.Ячейка КАК Ячейка
	               |ИЗ
	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	               |ГДЕ
	               |	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);   
	
	ЗапросЯчеек = Новый Запрос;
	ЗапросЯчеек.Текст = "ВЫБРАТЬ
	               |	СХК_СкладЯчейки.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	               |ГДЕ
	               |	СХК_СкладЯчейки.Ряд = &Ряд
	               |	И СХК_СкладЯчейки.Ячейка = &Ячейка";
	
	ЗапросЯчеек.УстановитьПараметр("Ряд",ТабЗнач[0].Ряд);
	ЗапросЯчеек.УстановитьПараметр("Ячейка",ТабЗнач[0].Ячейка); 
	РезультатЗапроса = ЗапросЯчеек.Выполнить();

	
		Список = Новый СписокЗначений; 
		Список.Очистить();
		Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		ЭтаФорма.Элементы.АдресЯчейка.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 
	
	
КонецПроцедуры


//&НаСервере
//Процедура СканЯчейкиИзменениеТекстаРедактированияНаСервере(ШтрихКод)
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
//				   |    СХК_ТоварыНаСкладеОстатки.Ячейка.Ссылка КАК ЯчейкаСсылка
//	               |ИЗ
//	               |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
//	               |ГДЕ
//	               |	СХК_ТоварыНаСкладеОстатки.Ячейка.ШтрихКод = &ШтрихКод";   
//	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
//		Результат = Запрос.Выполнить();
//	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
//	ТабЗнач = Результат.Выгрузить(СпособОбхода);   
//	Если ТабЗнач.Количество() = 0 Тогда
//		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.НайтиПоРеквизиту("ШтрихКод",ШтрихКод);
//	Иначе
//		Если ТабЗнач[0].ЯчейкаСсылка.ВМестимость = Перечисления.СХК_ВМестимость.Сборный Тогда 
//			ЭтаФорма.Ячейка = ТабЗнач[0].ЯчейкаСсылка
//			Иначе
//        	Сообщить("Ячейка занята");
//		КонецЕсли;
//	КонецЕсли;
//	
//	
//КонецПроцедуры

&НаКлиенте
Процедура СканЯчейкиИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СканЯчейкиИзменениеТекстаРедактированияНаСервере(Текст);
КонецПроцедуры

//&НаКлиенте
//Процедура СерияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	СерияОбработкаВыбораНаСервере(ВыбранноеЗначение);
//КонецПроцедуры

//&НаСервере
//Процедура СерияОбработкаВыбораНаСервере(ВСерия)
//	ЭтаФорма.Элементы.Серия.Значение  = ВСерия;	
//КонецПроцедуры

&НаСервере
Процедура СерияПриИзмененииНаСервере()
	//ЭтаФорма.Элементы.Серия.Значение = ""; 
	 //СтатусСогласовано = Элементы.СтатусЗаявки.СписокВыбора.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.СтатусыЗаявокНаРасценку.Согласована"));
	 //   СтатусСогласовано.Представление = "На согласовании";
	
	//Серия = 123;
КонецПроцедуры

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	//СерияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбСерияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ВыбСерияОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры


&НаСервере
Процедура ВыбСерияОбработкаВыбораНаСервере(Эл)  
	ЭтаФорма.Серия = Эл;
КонецПроцедуры

&НаКлиенте
Процедура ВыбНоменклатураПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВыбНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	ВыбНомОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры 

&НаСервере
Процедура ВыбНомОбработкаВыбораНаСервере(Эл)  
	ЭтаФорма.Номенклатура = Эл; 
	НоменклатураПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
		
				
			

		//
		Запрос1 = Новый Запрос;

		Запрос1.Текст = "ВЫБРАТЬ
		                |	ДвиженияСерийТоваров.Серия КАК Серия
		                |ИЗ
		                |	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
		                |ГДЕ
		                |	ДвиженияСерийТоваров.Период > &Период
		                |	И ДвиженияСерийТоваров.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ДвиженияСерийТоваров.Серия";
		Запрос1.УстановитьПараметр("Период", НачалоДня(ТекущаяДата())-180*86400);
		Запрос1.УстановитьПараметр("Номенклатура", ЭтаФорма.Номенклатура);
		
		Серия = "";
		Количество = 0; 
		
		
		РезультатЗапроса = Запрос1.Выполнить();
		
		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		

		СписокСерий = Новый СписокЗначений; 
		СписокСерий.Очистить();
		СписокСерий.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Серия"));
		Если СписокСерий.Количество() = 1 Тогда
			ЭтаФорма.Серия = СписокСерий[0].Значение;	
		Иначе
			ЭтаФорма.Элементы.ВыбСерия.СписокВыбора.ЗагрузитьЗначения(СписокСерий.ВыгрузитьЗначения()); 
		КонецЕсли;
		
		
		ЗапросУп = Новый Запрос;
		ЗапросУп.Текст = "ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		|	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
		ЗапросУп.УстановитьПараметр("ПометкаУдаления",Ложь);

		ЗапросУп.УстановитьПараметр("Владелец",ЭтаФорма.Номенклатура);
		РезультатЗапросаУп = ЗапросУп.Выполнить();
		
		ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		
		Список = Новый СписокЗначений; 
		Список.Очистить();
		Список.ЗагрузитьЗначения(РезультатЗапросаУп.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 

КонецПроцедуры
 





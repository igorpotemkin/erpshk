
&НаСервере
Процедура ПриОткрытииНаСервере()
	 
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ПоискШКQr;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	АктивироватьПоискРазмещения();
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьПоискПеремещения() Экспорт
	
	ЭтаФорма.Элементы.ПоискШКQr.РедактированиеТекста = Истина;
	ОчиститьШКСервер(); 
	Элементы.ПоискШКQr.ОбновитьТекстРедактирования();
	Элементы.ПоискШКQr.Видимость = Ложь;
	Элементы.ПоискШКQr.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.ПоискШКQr; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 

&НаСервере
Процедура ОчиститьШКСервер()
	ПоискШКQr = "";
	СканQRУп = "";
КонецПроцедуры


&НаКлиенте
Процедура АдресКудаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ЗаполнитьДоступныеАдреса();
КонецПроцедуры   

&НаСервере
Процедура ЗаполнитьДоступныеАдреса()
	//
	//ЭтаФорма.Элементы.АдресКуда.СписокВыбора.Очистить(); 
	//
	//Запрос = Новый Запрос;  
	//Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	СХК_СкладЯчейки.Ссылка КАК Ссылка
	//               |ИЗ
	//               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	//               |ГДЕ
	//               |	СХК_СкладЯчейки.ПометкаУдаления = &ПометкаУдаления";
	//
	//Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	//Результат = Запрос.Выполнить();
	//СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	//ТабЗнач = Результат.Выгрузить(СпособОбхода);   
	//
	//Запрос1 = Новый Запрос;
	//Запрос1.Текст = "ВЫБРАТЬ
	//               |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
	//               |ИЗ
	//               |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки"; 
	//Рез = Запрос1.Выполнить();
	//СпособОбхода1 = ОбходРезультатаЗапроса.Прямой;
	//ТЗнач = Рез.Выгрузить(СпособОбхода1); 
	//
	//Для Каждого стр из ТЗнач Цикл 
	//	Отбор = Новый Структура;
	//	Отбор.Вставить("Ссылка", стр.Ячейка);
	//	НайденныеСтроки = ТабЗнач.НайтиСтроки(Отбор); 
	//	Если НайденныеСтроки.Количество() >=1 Тогда
	//		Для Каждого НСтрока из НайденныеСтроки Цикл
	//			ТабЗнач.Удалить(НСтрока);
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЦикла;
	//ЭтаФорма.Элементы.АдресКуда.СписокВыбора.ЗагрузитьЗначения(ТабЗнач.ВыгрузитьКолонку("Ссылка"));
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПоискШКQrИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина;
		ЭтаФорма.Элементы.ТекстО.Заголовок = "Отсканируйте qr код";
	Иначе
		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина;
		Попытка
			Если СтрНайти(Текст, ";") = 0 Тогда 
				ПоискШКQrИзменениеНаСервере(Текст,"","","");
			Иначе
				СЗ = Разложить(Текст,";");
				Если СЗ.Количество() >2 Тогда
					ПоискШКQrИзменениеНаСервере(СЗ[1],СЗ[3],СЗ[0],СЗ[2]); 
					ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.АдресОткуда;
				Иначе
					ПоискШКQrИзменениеНаСервере(СЗ[0],СЗ[1],"",""); 
					ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.АдресОткуда;
					
				КонецЕсли;
			КонецЕсли;
		Исключение	
        	ЭтаФорма.Элементы.ТекстО.Заголовок = "Код не найден";
		КонецПопытки;
			
	КонецЕсли;  
		
КонецПроцедуры


&НаСервере
Процедура ПоискШК(Ш)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Ш);
	Рез = Запрос.Выполнить().Выбрать();
	Мас = Новый Массив;

	Если Рез.Количество() >=1 Тогда 
		Мас = Новый Массив;
		Пока Рез.Следующий() Цикл
			Мас.Добавить(Рез.Номенклатура);
			РНоменклатура = Рез.Номенклатура;
		КонецЦикла;
		//Поиск спаек
		
		ЗапросСпаек = Новый	 Запрос;
		ЗапросСпаек.Текст = "ВЫБРАТЬ
		                    |	СХК_Спайки.ОснНоменклатура КАК ОснНоменклатура,
		                    |	СХК_Спайки.ДопНомеклатура КАК ДопНомеклатура
		                    |ИЗ
		                    |	РегистрСведений.СХК_Спайки КАК СХК_Спайки
		                    |ГДЕ
		                    |	СХК_Спайки.ОснНоменклатура В(&ОснНоменклатура)"; 
		ЗапросСпаек.УстановитьПараметр("ОснНоменклатура", Мас);
		РезультатСпаек = ЗапросСпаек.Выполнить().Выбрать(); 
		Если РезультатСпаек.Количество()>=1 Тогда  
			СписокНом = Новый СписокЗначений;
			СписокНом.Очистить();
			Пока РезультатСпаек.Следующий() Цикл
				СписокНом.Добавить(РезультатСпаек.ОснНоменклатура,Строка(РезультатСпаек.ОснНоменклатура));	
				СписокНом.Добавить(РезультатСпаек.ДопНомеклатура,Строка(РезультатСпаек.ДопНомеклатура));
			КонецЦикла;   
			ЭтаФорма.Элементы.ВыбНоменклатура.Видимость = Истина;
			ЭтаФорма.Элементы.ВыбНоменклатура.СписокВыбора.ЗагрузитьЗначения(СписокНом.ВыгрузитьЗначения()); 
			Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
		Иначе
			ЭтаФорма.Элементы.ВыбНоменклатура.Видимость = Ложь;
		
		//Пока Рез.Следующий() Цикл
		//	РНоменклатура = Рез.Номенклатура;
		//КонецЦикла;
		
		Если РНоменклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда 
			ЗапросОстатки = Новый Запрос;
			ЗапросОстатки.Текст = "ВЫБРАТЬ
			                      |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка,
			                      |	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
			                      |	СХК_ТоварыНаСкладеОстатки.Номенклатура КАК Номенклатура,
			                      |	СХК_ТоварыНаСкладеОстатки.Серия КАК Серия
			                      |ИЗ
			                      |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
			                      |ГДЕ
			                      |	СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура";
			ЗапросОстатки.УстановитьПараметр("Номенклатура", РНоменклатура);
			Р = ЗапросОстатки.Выполнить();
			СпособОбхода = ОбходРезультатаЗапроса.Прямой;
			ТЗнач = Р.Выгрузить(СпособОбхода); 
			
			Если ТЗнач.Количество() = 1 Тогда
				ЭтаФорма.Элементы.АдресОткуда.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Ячейка"));
				ЭтаФорма.АдресОткудаЗнач = ТЗнач[0].Ячейка;
				ЭтаФорма.ИтогоКоличество = ТЗнач.Итог("ВНаличииОстаток");
		        ЭтаФОрма.Номенклатура = ТЗнач[0].Номенклатура;

				ЭтаФорма.Элементы.СерияВыбор.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Серия"));
		        ЭтаФорма.Серия = ТЗнач[0].Серия; 
			ИначеЕсли ТЗнач.Количество() >= 1 Тогда
				ЭтаФорма.Элементы.АдресОткуда.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Ячейка"));
				ЭтаФорма.ИтогоКоличество = ТЗнач.Итог("ВНаличииОстаток");
		        ЭтаФОрма.Номенклатура = ТЗнач[0].Номенклатура;
				ТЗнач.Свернуть("Серия");
				Если ТЗнач.Количество() = 1 Тогда 
					ЭтаФорма.Элементы.СерияВыбор.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Серия"));
		        	ЭтаФорма.Серия = ТЗнач[0].Серия; 
				Иначе 
					ЭтаФорма.Элементы.СерияВыбор.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Серия"));
				КонецЕсли;
			КонецЕсли; 
			ЗаполнитьУпаковки("");
		Иначе
			Сообщить("Товар отсутствует или не принят!");
		КонецЕсли;
		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина;
		КонецЕсли;
	Иначе
		Сообщить("Товар отсутствует или не принят!"); 
	КонецЕсли;   
	
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУпаковки(Уп)

	Если ЭтаФорма.Номенклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		|	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Владелец",ЭтаФорма.Номенклатура);
		Если Уп <> "" Тогда
			Результат = Запрос.Выполнить();
			СпособОбхода = ОбходРезультатаЗапроса.Прямой;
			ТабЗнач = Результат.Выгрузить(СпособОбхода);  
			Для Каждого стр из ТабЗнач Цикл
				Если стр.Ссылка.Наименование = Уп Тогда
					ЭтаФорма.Элементы.СЗУпаковки.Видимость = Ложь;
					ЭтаФорма.Упаковка = стр.Ссылка; 
					Прервать;                      
				КонецЕсли;
			КонецЦикла;
			
		//Иначе
		//	
		//	РезультатЗапроса = Запрос.Выполнить(); 
		//	Список = Новый СписокЗначений; 
		//	Список.Очистить();
		//	Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		//	ЭтаФорма.Элементы.СЗУпаковки.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 
		КонецЕсли;
		
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции 


&НаСервере
Процедура ПоискШКQrИзменениеНаСервере(Т,Уп,Уид,Ном)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка,
	|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	СХК_ТоварыНаСкладеОстатки.Номенклатура КАК Номенклатура,
	|	СХК_ТоварыНаСкладеОстатки.Серия КАК Серия
	|ИЗ
	|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	|ГДЕ
	|	СХК_ТоварыНаСкладеОстатки.Серия = &Серия";
	Запрос.УстановитьПараметр("Серия",Т);
	Рез = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТЗнач = Рез.Выгрузить(СпособОбхода); 
	
	Если ТЗнач.Количество() >= 1 Тогда
		ЭтаФОрма.Номенклатура = ТЗнач[0].Номенклатура;
		ЭтаФорма.Серия = Справочники.СерииНоменклатуры.НайтиПоНаименованию(Т); 
		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина;
		
	 
	
		ЗаполнитьУпаковки(Уп);
	
		Попытка
			Док  = Документы.ЭтапПроизводства2_2.ПолучитьСсылку(Новый УникальныйИдентификатор(Уид)) ;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	СХК_ВыпускПоЭтапу.Период КАК Период,
			|	СХК_ВыпускПоЭтапу.ЭтапПроизводства КАК ЭтапПроизводства,
			|	СХК_ВыпускПоЭтапу.СкладПолучатель КАК СкладПолучатель,
			|	СХК_ВыпускПоЭтапу.Количество КАК Количество,
			|	СХК_ВыпускПоЭтапу.Статус КАК Статус,
			|	СХК_ВыпускПоЭтапу.Помещение КАК Помещение,
			|	СХК_ВыпускПоЭтапу.Упаковка КАК Упаковка,
			|	СХК_ВыпускПоЭтапу.НомерСтрокиДок КАК НомерСтрокиДок
			|ИЗ
			|	РегистрСведений.СХК_ВыпускПоЭтапу КАК СХК_ВыпускПоЭтапу
			|ГДЕ
			|	СХК_ВыпускПоЭтапу.ЭтапПроизводства = &ЭтапПроизводства
			|	И СХК_ВыпускПоЭтапу.НомерСтрокиДок = &НомерСтрокиДок";
			Запрос.УстановитьПараметр("ЭтапПроизводства",Док.Ссылка);
			Запрос.УстановитьПараметр("НомерСтрокиДок",Число(Ном));  
			
			Результат = Запрос.Выполнить();
			СпособОбхода = ОбходРезультатаЗапроса.Прямой;
			ТабЗнач = Результат.Выгрузить(СпособОбхода);  
			
			
			Если ТабЗнач.Количество()=1 Тогда 
				Если ТЗнач[0].ВНаличииОстаток>=ТабЗнач[0].Количество Тогда
		    		ЭтаФорма.Количество = ТабЗнач[0].Количество;      
				КонецЕсли;
			КонецЕсли;
			
		Исключение
			
		КонецПопытки;
	КонецЕсли;
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура АдресОткудаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	АдресОткудаОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры 

&НаСервере
Процедура АдресОткудаОбработкаВыбораНаСервере(Зн)
	ЭтаФорма.АдресОткудаЗнач = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию(Зн);	
КонецПроцедуры


&НаКлиенте
Процедура АдресКудаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	АдресЯчейкаОбработкаВыбораСервер(ВыбранноеЗначение);
КонецПроцедуры  

&НаСервере
Процедура АдресЯчейкаОбработкаВыбораСервер(Наименование)
	спр = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию(Наименование);
	
	Если спр.ВМестимость = "Палет" Тогда
		ЭтаФорма.Элементы.Ячейка.ЦветТекста = WebЦвета.Зеленый;
	ИначеЕсли спр.ВМестимость = "Сборный" Тогда
		ЭтаФорма.Элементы.Ячейка.ЦветТекста = WebЦвета.Желтый;
	КонецЕсли;
	
	ЭтаФорма.Ячейка = спр; 
	ЭтаФорма.АдресКуда =  ЭтаФорма.Ячейка;
КонецПроцедуры

//&НаКлиенте
//Процедура АдресКудаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	ЗаполнитьДоступныеАдреса();
//КонецПроцедуры

&НаКлиенте
Процедура СЗУпаковкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СЗУпаковкиПриИзмененииНаСервере(ВыбранноеЗначение);

КонецПроцедуры    

&НаСервере
Процедура СЗУпаковкиПриИзмененииНаСервере(Эл)  
	ЭтаФорма.Упаковка = Эл;
КонецПроцедуры

&НаСервере
Процедура КолУпПриИзмененииНаСервере()
	Попытка 
		ЭтаФорма.Количество = ЭтаФорма.КолУп * ЭтаФорма.Упаковка.Числитель;
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура КолУпПриИзменении(Элемент)
	КолУпПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Переместить(Команда)
	ПереместитьНаСервере(); 
	ЭтаФорма.Закрыть();	
КонецПроцедуры

&НаСервере
Процедура ПереместитьНаСервере() 
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	СХК_Перемещение.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СХК_Перемещение КАК СХК_Перемещение
	               |ГДЕ
	               |	СХК_Перемещение.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И СХК_Перемещение.ПометкаУдаления = &ПометкаУдаления
	               |	И СХК_Перемещение.Проведен = &Проведен"; 
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
	Запрос.УстановитьПараметр("Проведен", Истина);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 

	Рез = Запрос.Выполнить().Выбрать();
	
	Если ЭтаФорма.Количество <=0 Тогда
		Сообщить("Заполните количество")
	//ИначеЕсли ЭтаФорма.Ячейка = "" Тогда
	//	Сообщить("Укажите ячейку назначения"); 
	//ИначеЕсли ЭтаФорма.Серия = "" Тогда
	//	Сообщить("Укажите серию"); 

	Иначе
		
	
	
	
		Если Рез.Следующий() Тогда
			ТекДок = Рез.Ссылка.ПолучитьОбъект();
			НоваяСтрока = ТекДок.ТЧТовары.Добавить();
		    НоваяСтрока.Номенклатура = ЭтаФорма.Номенклатура;
		    НоваяСтрока.Серия = ЭтаФорма.Серия;
		    НоваяСтрока.ТекЯчейка = ЭтаФорма.АдресОткудаЗнач; 
			НоваяСтрока.НЯчейка = ЭтаФорма.Ячейка; 
			НоваяСтрока.Количество = ЭтаФорма.Количество;
			НоваяСтрока.Время = ТекущаяДата();
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ТекДок = Документы.СХК_Перемещение.СоздатьДокумент(); 
			ТекДок.Дата =ТекущаяДата(); 
			НоваяСтрока = ТекДок.ТЧТовары.Добавить();
		    НоваяСтрока.Номенклатура = ЭтаФорма.Номенклатура;
		    НоваяСтрока.Серия = ЭтаФорма.Серия;
		    НоваяСтрока.ТекЯчейка = ЭтаФорма.АдресОткудаЗнач; 
			НоваяСтрока.НЯчейка = ЭтаФорма.Ячейка; 
			НоваяСтрока.Количество = ЭтаФорма.Количество;
			НоваяСтрока.Время = ТекущаяДата();
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	 ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Ложь;	
	КонецЕсли;


КонецПроцедуры


&НаКлиенте
Процедура СерияВыборОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) 
	ВыбСерияОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

	&НаСервере
Процедура ВыбСерияОбработкаВыбораНаСервере(Эл)  
	ЭтаФорма.Серия = Эл;
КонецПроцедуры


&НаКлиенте
Процедура СканЯчейкиИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СканЯчейкиИзменениеТекстаРедактированияНаСервере(Текст);
КонецПроцедуры  

&НаСервере
Процедура СканЯчейкиИзменениеТекстаРедактированияНаСервере(ШтрихКод)   
	//ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	СХК_СкладЯчейки.Ряд КАК Ряд,
	//               |	СХК_СкладЯчейки.Ячейка КАК Ячейка
	//               |ИЗ
	//               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	//               |ГДЕ
	//               |	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
	//Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
	//Результат = Запрос.Выполнить();
	//СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	//ТабЗнач = Результат.Выгрузить(СпособОбхода);   
	//
	//ЗапросЯчеек = Новый Запрос;
	//ЗапросЯчеек.Текст = "ВЫБРАТЬ
	//               |	СХК_СкладЯчейки.Ссылка КАК Ссылка
	//               |ИЗ
	//               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	//               |ГДЕ
	//               |	СХК_СкладЯчейки.Ряд = &Ряд
	//               |	И СХК_СкладЯчейки.Ячейка = &Ячейка";
	//
	//ЗапросЯчеек.УстановитьПараметр("Ряд",ТабЗнач[0].Ряд);
	//ЗапросЯчеек.УстановитьПараметр("Ячейка",ТабЗнач[0].Ячейка); 
	//РезультатЗапроса = ЗапросЯчеек.Выполнить();

	//
	//	Список = Новый СписокЗначений; 
	//	Список.Очистить();
	//	Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
	//	ЭтаФорма.Элементы.АдресКуда.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения()); 
	ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СкладЯчейки.Ссылка КАК Ссылка

	               |ИЗ
	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	               |ГДЕ
	               |	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);
	Если ТабЗнач.Количество()>=1 Тогда
		ЭтаФорма.Ячейка = ТабЗнач[0].Ссылка;		
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	ВыбНомОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры    

&НаСервере
Процедура ВыбНомОбработкаВыбораНаСервере(Эл)  
	ЭтаФорма.Номенклатура = Эл; 
	НоменклатураПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
		
				
		Если ЭтаФорма.Номенклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда 
			ЗапросОстатки = Новый Запрос;
			ЗапросОстатки.Текст = "ВЫБРАТЬ
			                      |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка,
			                      |	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
			                      |	СХК_ТоварыНаСкладеОстатки.Номенклатура КАК Номенклатура,
			                      |	СХК_ТоварыНаСкладеОстатки.Серия КАК Серия
			                      |ИЗ
			                      |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
			                      |ГДЕ
			                      |	СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура";
			ЗапросОстатки.УстановитьПараметр("Номенклатура", ЭтаФорма.Номенклатура);
			Р = ЗапросОстатки.Выполнить();
			СпособОбхода = ОбходРезультатаЗапроса.Прямой;
			ТЗнач = Р.Выгрузить(СпособОбхода); 
			
			Если ТЗнач.Количество() = 1 Тогда
				ЭтаФорма.Элементы.АдресОткуда.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Ячейка"));
				ЭтаФорма.АдресОткудаЗнач = ТЗнач[0].Ячейка;
				ЭтаФорма.ИтогоКоличество = ТЗнач.Итог("ВНаличииОстаток");
		        ЭтаФОрма.Номенклатура = ТЗнач[0].Номенклатура;

				ЭтаФорма.Элементы.СерияВыбор.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Серия"));
		        ЭтаФорма.Серия = ТЗнач[0].Серия; 
			ИначеЕсли ТЗнач.Количество() >= 1 Тогда
				ЭтаФорма.Элементы.АдресОткуда.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Ячейка"));
				ЭтаФорма.ИтогоКоличество = ТЗнач.Итог("ВНаличииОстаток");
		        ЭтаФОрма.Номенклатура = ТЗнач[0].Номенклатура;
				ТЗнач.Свернуть("Серия");
				Если ТЗнач.Количество() = 1 Тогда 
					ЭтаФорма.Элементы.СерияВыбор.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Серия"));
		        	ЭтаФорма.Серия = ТЗнач[0].Серия; 
				Иначе 
					ЭтаФорма.Элементы.СерияВыбор.СписокВыбора.ЗагрузитьЗначения(ТЗнач.ВыгрузитьКолонку("Серия"));
				КонецЕсли;
			КонецЕсли; 
			ЗаполнитьУпаковки("");
		Иначе
			Сообщить("Товар отсутствует или не принят!");
		КонецЕсли;

КонецПроцедуры

//////////////////////
Функция Разложить(Знач Стр, Разделитель = ";") Экспорт
	
	Список = Новый Массив();
	Длина = СтрДлина(Разделитель);
	
	Стр = СокрЛП(Стр);
	Поз = Найти(Стр, Разделитель);
	
	Пока 0 < Поз Цикл
		Список.Добавить(СокрП(Лев(Стр, Поз-1)));
		
		Стр = СокрЛ(Сред(Стр, Поз+Длина));
		Поз = Найти(Стр, Разделитель);
	КонецЦикла;
	
	Список.Добавить(Стр);
	
	Возврат Список;
	
КонецФункции

&НаКлиенте
Процедура АдресОткудаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СканЯчейкиИзменениеТекстаРедактированияНаСервереАдресОткуда(Текст);  
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.СканЯчейки;
КонецПроцедуры


&НаСервере
Функция СканЯчейкиИзменениеТекстаРедактированияНаСервереАдресОткуда(ШтрихКод)   
	ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СкладЯчейки.Ссылка КАК Ссылка

	               |ИЗ
	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	               |ГДЕ
	               |	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);
	Если ТабЗнач.Количество()>=1 Тогда
		ЭтаФорма.АдресОткудаЗнач = ТабЗнач[0].Ссылка;
	//	Запрос1 = Новый Запрос;
	//	Запрос1.Текст = "ВЫБРАТЬ
	//	|	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка,
	//	|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	//	|	СХК_ТоварыНаСкладеОстатки.Номенклатура КАК Номенклатура,
	//	|	СХК_ТоварыНаСкладеОстатки.Серия КАК Серия
	//	|ИЗ
	//	|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	//	|ГДЕ
	//	|	СХК_ТоварыНаСкладеОстатки.Серия = &Серия И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка ";
	//	Запрос1.УстановитьПараметр("Серия",Строка(ЭтаФорма.Серия));
	//	Запрос1.УстановитьПараметр("Ячейка",ТабЗнач[0].Ссылка);
	//	Рез = Запрос1.Выполнить();
	//	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	//	ТЗнач = Рез.Выгрузить(СпособОбхода); 
	//	ЭтаФорма.ИтогоКоличество = ТЗнач.Итог("ВНаличииОстаток"); 
	//	ЭтаФорма.Количество  = ТЗнач.Итог("ВНаличииОстаток")
	КонецЕсли;
	
	
	
КонецФункции

////////////////////////////////////
&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "ГруппаРазмещение" Тогда
		ПодключитьОбработчикОжидания("АктивироватьПоискРазмещения",1,Истина);				
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаПеремещение" Тогда 
		ПодключитьОбработчикОжидания("АктивироватьПоискПеремещения",1,Истина);				
	КонецЕсли;
КонецПроцедуры

//////////////////////////////////// 
&НаКлиенте
Процедура АктивироватьПоискРазмещения() Экспорт
	
	ЭтаФорма.Элементы.СканQRУп.РедактированиеТекста = Истина;
	ОчиститьШКСервер(); 
	Элементы.СканQRУп.ОбновитьТекстРедактирования();
	Элементы.СканQRУп.Видимость = Ложь;
	Элементы.СканQRУп.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканQRУп; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 

&НаКлиенте
Процедура СканQRУпИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		ОткрытьФормуСообщения("Отсканируйте QR"); 
		ПодключитьОбработчикОжидания("АктивироватьПоискРазмещения",1,Истина);				
	Иначе
		Мас = Новый Массив;
		Если СтрНайти(Текст, ";") = 0 Тогда
			Если НайтиНоменклатуруПоСерии(Текст) = Истина Тогда
				ОткрытьФормуФормаСканШК(Текст);		
			Иначе
				ОткрытьФормуСообщения("Номенклатура не найдена");
				ПодключитьОбработчикОжидания("АктивироватьПоискУпаковка",1,Истина);				
			КонецЕсли;
		Иначе
			Мас = Разложить(Текст,";");
			Если НайтиНоменклатуруПоСерии(Мас[0]) = Истина Тогда 
				ЗаполнитьУпаковкаУп(Мас[1]);
				ПодключитьОбработчикОжидания("АктивироватьПоискЯчейкиУп",1,Истина);				
			Иначе
				ОткрытьФормуСообщения("Номенклатура не найдена"); 
				ПодключитьОбработчикОжидания("АктивироватьПоискУпаковка",1,Истина);				
			КонецЕсли;
				
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.Элементы.ГруппаИнформацияУп.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьПоискЯчейкиУп() 
	ОчиститьШКСервер(); 
	Элементы.СканЯчейкиУп.ОбновитьТекстРедактирования();
	Элементы.СканЯчейкиУп.Видимость = Ложь;
	Элементы.СканЯчейкиУп.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканЯчейкиУп; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры  


&НаСервере
Функция НайтиНоменклатуруПоСерии(Сер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДвиженияСерийТоваров.Номенклатура КАК Номенклатура,
	|	ДвиженияСерийТоваров.Серия КАК Серия
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|ГДЕ
	|	ДвиженияСерийТоваров.Серия.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование",Сер);
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()=1 Тогда
		ЭтаФорма.Серия = Рез[0].Серия;
		ЭтаФорма.Номенклатура = Рез[0].Номенклатура;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура ОткрытьФормуФормаСканШК(Штр) 
		Отбор = Новый Структура;
		Отбор.Вставить("Штрих",Штр);
		Отбор.Вставить("Серия",ЭтаФорма.Серия);
		Отбор.Вставить("Номенклатура",ЭтаФорма.Номенклатура);
		//Отбор.Вставить("Ячейка",ЭтаФорма.ЯчейкаВыбор);
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщенияСканШК", ЭтаФорма);
		ОткрытьФорму("Обработка.МобильныйСкладТест.Форма.ФормаСканШК", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщенияСканШК(Значение, ДопПараметры) Экспорт 
	Если Значение.Ош = Истина Тогда 
		ЗаполнитьУпаковкаУп(Значение.Штр);
		АктивироватьПоискЯчейкиУп();
	Иначе
		ОткрытьФормуСообщения(Строка(Значение.Ошибка));	
	КонецЕсли;
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьУпаковкаУп(Штр) 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ШтрихкодыНоменклатуры.Упаковка КАК Упаковка
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	               |	И ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
 	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.Номенклатура);
	Запрос.УстановитьПараметр("Штрихкод",Штр);

	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда 
		ЭтаФорма.УпаковкаУп = Рез.Упаковка;
	КонецЕсли;

КонецПроцедуры



&НаКлиенте
Процедура ОткрытьФормуСообщения(Сообщение) 
	Отбор = Новый Структура;
	Отбор.Вставить("Ошибка",Строка(Сообщение));
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщения", ЭтаФорма);
		ОткрытьФорму("Обработка.МобильныйСкладТест.Форма.ФормаСообщений", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщения(Значение, ДопПараметры) Экспорт 
						
КонецПроцедуры  

&НаКлиенте
Процедура АктивироватьПоискУпаковка() Экспорт 

	ЭтаФорма.Элементы.СканQRУп.РедактированиеТекста = Истина;
	ОчиститьШКСервер(); 
	Элементы.СканQRУп.ОбновитьТекстРедактирования();
	Элементы.СканQRУп.Видимость = Ложь;
	Элементы.СканQRУп.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканQRУп; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 

&НаКлиенте
Процедура Разместить(Команда)
	О = РазместитьНаСервере();
	
	Если О = Ложь Тогда
		ЭтаФорма.Закрыть(); 
	Иначе
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
			ПоказатьПредупреждение(Оповещение,"Не хватает количества",10,"Внимание!!!");
		
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция РазместитьНаСервере() 
	Ош = Истина;
	РасКол = ЭтаФорма.КолУп1*ЭтаФорма.УпаковкаУп.Числитель;
	
	
	Буфер = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	|ИЗ
	|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	|ГДЕ
	|	СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
	|	И СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	|	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка"; 
	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.Номенклатура);
	Запрос.УстановитьПараметр("Серия",Строка(ЭтаФорма.Серия));
	Запрос.УстановитьПараметр("Ячейка",Буфер);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Итог("ВНаличииОстаток")>=РасКол Тогда
		//ПереместитьИзБуфераВсе();
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	СХК_Перемещение.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СХК_Перемещение КАК СХК_Перемещение
		|ГДЕ
		|	СХК_Перемещение.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И СХК_Перемещение.ПометкаУдаления = &ПометкаУдаления
		|	И СХК_Перемещение.Проведен = &Проведен"; 
		Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
		Запрос.УстановитьПараметр("Проведен", Истина);
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
		
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Следующий() Тогда
			ТекДок = Рез.Ссылка.ПолучитьОбъект();
		Иначе
			ТекДок = Документы.СХК_Перемещение.СоздатьДокумент(); 
			ТекДок.Дата =ТекущаяДата(); 
		КонецЕсли;
		НоваяСтрока = ТекДок.ТЧТовары.Добавить();
		НоваяСтрока.Номенклатура = ЭтаФорма.Номенклатура;
		НоваяСтрока.Серия = ЭтаФорма.Серия;
		НоваяСтрока.ТекЯчейка = Буфер; 
		НоваяСтрока.НЯчейка = ЭтаФорма.ЯчейкаУп; 
		НоваяСтрока.Количество = РасКол;
		НоваяСтрока.Время = ТекущаяДата();
		
		Попытка
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Ош = Ложь;
		Исключение
			Ош = Истина;
		КонецПопытки;				
	Иначе
		Ош = Истина;	
	КонецЕсли;
	
	Возврат Ош;
КонецФункции

&НаКлиенте
Процедура СканЯчейкиУпИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СканЯчейкиУпИзменениеТекстаРедактированияНаСервере(Текст);
	Если ЭтаФорма.ЯчейкаУп <> "" Тогда 
		ПодключитьОбработчикОжидания("АктивироватьКолУп",1,Истина);				
	Иначе
		ПодключитьОбработчикОжидания("АктивироватьПоискЯчейкиУп",1,Истина);				
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура АктивироватьКолУп() 
	ОчиститьШКСервер(); 
	Элементы.КолУп1.ОбновитьТекстРедактирования();
	Элементы.КолУп1.Видимость = Ложь;
	Элементы.КолУп1.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.КолУп1; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры  

&НаСервере
Процедура СканЯчейкиУпИзменениеТекстаРедактированияНаСервере(ШтрихКод)   
	ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СкладЯчейки.Ряд КАК Ряд,
	               |	СХК_СкладЯчейки.Ячейка КАК Ячейка,СХК_СкладЯчейки.Ссылка КАК Ссылка

	               |ИЗ
	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	               |ГДЕ
	               |	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода); 
	
	Если ТабЗнач.Количество()>=1 Тогда
		ЭтаФорма.ЯчейкаУп = ТабЗнач[0].Ссылка;
		ЭтаФорма.КолУп = 1;
		ЭтаФорма.Элементы.Разместить.Доступность = Истина;
	Иначе
		ЭтаФорма.Элементы.Декорация9.Заголовок = "Ячейка не найдена"; 
		ЭтаФорма.Элементы.Разместить.Доступность = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры






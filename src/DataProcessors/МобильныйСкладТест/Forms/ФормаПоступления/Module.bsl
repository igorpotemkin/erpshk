
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	
	//Если Пользователи.АвторизованныйПользователь().Наименование = "tsd2" Тогда
	//	ЭтаФорма.Элементы.ГруппаКомплектация.Видимость = Истина;
	//	ЗаполнитьОрдераКомплектации();
	//КонецЕсли;
	//
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	АктивироватьПоиск();
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьПоиск() Экспорт
	
	ЭтаФорма.Элементы.СканQR.РедактированиеТекста = Истина;
	ОчиститьШКСервер(); 
	Элементы.СканQR.ОбновитьТекстРедактирования();
	Элементы.СканQR.Видимость = Ложь;
	Элементы.СканQR.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканQR; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 

&НаСервере
Процедура ОчиститьШКСервер()
	СканQR = "";
	СканQRУп = "";
	СканЯчейки = ""; 
	СканПОрдера = "";
КонецПроцедуры




&НаКлиенте
Процедура СканQRИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	//10c7358e-04f6-11f0-943a-d85ed3a00c95;МРОШ 190325 ПО 25ШТ до 19.10.25;4
	//Попытка
		Если СтрНайти(Текст, ";") = 0 Тогда
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
			ПоказатьПредупреждение(Оповещение,"Отсканируйте палетный лист",10,"Внимание!!!");
		Иначе
			ПоискЗадания(Текст);
			Если ЭтаФорма.Помещение <> "" Тогда
				АктивироватьПоискЯчейки();
			КонецЕсли;
		КонецЕсли;
	//Исключение	
	//	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
	//	ПоказатьПредупреждение(Оповещение,"При сканировании произошла ошибка",10,"Внимание!!!");
	//КонецПопытки;
	
КонецПроцедуры 

&НаКлиенте
Процедура АктивироватьПоискЯчейки() 
	ОчиститьШКСервер(); 
	Элементы.СканЯчейки.ОбновитьТекстРедактирования();
	Элементы.СканЯчейки.Видимость = Ложь;
	Элементы.СканЯчейки.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканЯчейки; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 


&НаКлиенте
Процедура ПослеЗакрытияПредупреждение(Параметры) Экспорт
ЭтотОбъект.ТекущийЭлемент = ЭтотОбъект.Элементы.СканQR; 		
КонецПроцедуры

&НаСервере
Процедура ПоискЗадания(Текст)
	
	СЗ = Разложить(Текст,";");

	ДокЭ = Документы.ЭтапПроизводства2_2.ПолучитьСсылку(Новый УникальныйИдентификатор(СЗ[0])) ;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ВыпускПоЭтапу.Период КАК Период,
	|	СХК_ВыпускПоЭтапу.ЭтапПроизводства КАК ЭтапПроизводства,
	|	СХК_ВыпускПоЭтапу.СкладПолучатель КАК СкладПолучатель,
	|	СХК_ВыпускПоЭтапу.Количество КАК Количество,
	|	СХК_ВыпускПоЭтапу.Статус КАК Статус,
	|	СХК_ВыпускПоЭтапу.Помещение КАК Помещение,
	|	СХК_ВыпускПоЭтапу.Упаковка КАК Упаковка,
	|	СХК_ВыпускПоЭтапу.НомерСтрокиДок КАК НомерСтрокиДок
	|ИЗ
	|	РегистрСведений.СХК_ВыпускПоЭтапу КАК СХК_ВыпускПоЭтапу
	|ГДЕ
	|	СХК_ВыпускПоЭтапу.ЭтапПроизводства = &ЭтапПроизводства
	|	И СХК_ВыпускПоЭтапу.НомерСтрокиДок = &НомерСтрокиДок";
	Запрос.УстановитьПараметр("ЭтапПроизводства",ДокЭ.Ссылка);
	Запрос.УстановитьПараметр("НомерСтрокиДок",Число(СЗ[2]));  
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  
	
	ЭтаФорма.Элементы.ГруппаИнфТекст.Видимость = Ложь;
	ЭтаФорма.Элементы.Ошибка.Заголовок = "";
	ЭтаФорма.Элементы.ИнфНоменклатура.Заголовок = "";
	
	Если ТабЗнач.Количество()=1 Тогда
		ЭтаФорма.Элементы.ГруппаИнформация.Видимость = Истина;
		Если ТабЗнач[0].Статус = Перечисления.СХК_СтатусВыпуска.Собран Тогда
			ЭтаФорма.Элементы.ГруппаИнф.Видимость = Истина;	
			ЭтаФорма.Элементы.ИнфНоменклатура.Заголовок = Строка(ТабЗнач[0].ЭтапПроизводства.ВыходныеИзделия[0].Номенклатура) + Символы.ПС
			+ "Кол: " + Строка(ТабЗнач[0].Количество) + " шт" ;//Символы.ПС ;
			//+ "Упак: " + Строка(ТабЗнач[0].Упаковка) + Символы.ПС 
			//+ "Кол уп: " + Строка(ТабЗнач[0].Количество/ТабЗнач[0].Упаковка.Числитель) + Символы.ПС  ;
			ЭтаФорма.Элементы.ГруппаКн.Видимость = Истина;                                             
			
			ЭтаФорма.ДокЭтапа = ТабЗнач[0].ЭтапПроизводства.Ссылка; 
			ЭтаФорма.НомерСтрокиДок = ТабЗнач[0].НомерСтрокиДок;
			ЭтаФорма.Упаковка = ТабЗнач[0].Упаковка;                                                   
			ЭтаФорма.Количество = ТабЗнач[0].Количество;                                                   
			ЭтаФорма.Помещение = ТабЗнач[0].Помещение;  
			//Если ТабЗнач[0].СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ЦК Цех Комплектации") Тогда
			//	ЭтаФорма.Элементы.ГруппаИнф.Видимость = Ложь;
			//	//ЭтаФорма.Элементы.Ячейка.Видимость = Ложь; 
			//КонецЕсли; 
			ЭтаФорма.Ячейка = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер");
		Иначе
			ЭтаФорма.Элементы.ГруппаИнфТекст.Видимость = Истина;
			ЭтаФорма.Элементы.ИНформация.Заголовок = "Эта продукция уже принята"; 
			ЭтаФорма.Элементы.ГруппаИнф.Видимость = Истина;	
			ЭтаФорма.Элементы.ИнфНоменклатура.Заголовок = Строка(ТабЗнач[0].ЭтапПроизводства.ВыходныеИзделия[0].Номенклатура) + Символы.ПС
			+ "Кол шт: " + Строка(ТабЗнач[0].Количество) + Символы.ПС 
			+ "Упак: " + Строка(ТабЗнач[0].Упаковка) + Символы.ПС 
			+ "Кол уп: " + Строка(ТабЗнач[0].Количество/ТабЗнач[0].Упаковка.Числитель) + Символы.ПС  ;
			
		КонецЕсли;	
	Иначе
		ЭтаФорма.Элементы.ГруппаИнфТекст.Видимость = Истина;
		ЭтаФорма.Элементы.Ошибка.Заголовок = "При сканировании произошла ошибка";
	КонецЕсли;
	
	
	
КонецПроцедуры  


&НаСервере
Функция ПринятьНаСервере()  
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ВыпускПоЭтапу.Период КАК Период,
	|	СХК_ВыпускПоЭтапу.ЭтапПроизводства КАК ЭтапПроизводства,
	|	СХК_ВыпускПоЭтапу.СкладПолучатель КАК СкладПолучатель,
	|	СХК_ВыпускПоЭтапу.Линия КАК Линия,
	|	СХК_ВыпускПоЭтапу.Количество КАК Количество,
	|	СХК_ВыпускПоЭтапу.Статус КАК Статус,
	|	СХК_ВыпускПоЭтапу.Помещение КАК Помещение,
	|	СХК_ВыпускПоЭтапу.Упаковка КАК Упаковка,
	|	СХК_ВыпускПоЭтапу.НомерСтрокиДок КАК НомерСтрокиДок,
	|	СХК_ВыпускПоЭтапу.СерииНоменклатуры КАК СерииНоменклатуры
	|ИЗ
	|	РегистрСведений.СХК_ВыпускПоЭтапу КАК СХК_ВыпускПоЭтапу
	|ГДЕ
	|	СХК_ВыпускПоЭтапу.ЭтапПроизводства = &ЭтапПроизводства
	|	И СХК_ВыпускПоЭтапу.НомерСтрокиДок = &НомерСтрокиДок";
	Запрос.УстановитьПараметр("ЭтапПроизводства",ЭтаФорма.ДокЭтапа.Ссылка);
	Запрос.УстановитьПараметр("НомерСтрокиДок",ЭтаФорма.НомерСтрокиДок);  
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Записи = РезультатЗапроса.Выбрать();
	
	Пока Записи.Следующий() Цикл
		ЗПериод = Записи.Период; 
		СкладПолучатель = Записи.СкладПолучатель;
		Помещение =  Записи.Помещение;
		Линия =  Записи.Линия;
		СерииНоменклатуры =  Записи.СерииНоменклатуры;
	КонецЦикла;	
	СЗ = Новый Структура;
	
	ош = Ложь; 
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",ЭтаФорма.ДокЭтапа.ПартияПроизводства.ОсновноеИзделиеНоменклатура);
	Отбор.Вставить("Спецификация",ЭтаФорма.ДокЭтапа.Спецификация);
	Строки = ЭтаФорма.ДокЭтапа.ПартияПроизводства.Документ.Продукция.НайтиСтроки(Отбор);
	
	Если Строки.Количество() >=1 Тогда
		Если Строки[0].Расш1_Серия <> Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
			СкладОтп = Строки[0].Склад; 
			Серия = Строки[0].Расш1_Серия;
		Иначе
			Сообщить("Не заполнена серия");	
		КонецЕсли;
	Иначе
		
	КонецЕсли;	
	
	/////////////// ЗаказНаПеремещение
	
	Док = Документы.ЗаказНаПеремещение.СоздатьДокумент();
	Док.Дата = ТекущаяДата(); 
	Док.Организация = ЭтаФорма.ДокЭтапа.Распоряжение.Организация;
	Док.СкладОтправитель = СкладОтп ;
	Док.СкладПолучатель = СкладПолучатель; 
	Док.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	Док.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний"); 
	Док.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным;
	Док.СпособДоставки = Перечисления.СпособыДоставки.Самовывоз;
	Док.Статус = Перечисления.СтатусыВнутреннихЗаказов.Закрыт;
	
	Т = Док.Товары.Добавить(); 
	Т.Номенклатура = ЭтаФорма.ДокЭтапа.ВыходныеИзделия[0].Номенклатура;
	Т.НачалоОтгрузки = ТекущаяДата();
	Т.КоличествоУпаковок = ЭтаФорма.Количество/ЭтаФорма.Упаковка.Числитель;
	Т.Количество = ЭтаФорма.Количество;
	Т.Упаковка = ЭтаФорма.Упаковка;
	Т.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить;
	Т.СтатусУказанияСерий = 0;
	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Док.Записать(РежимЗаписиДокумента.Запись);
		ош = Истина;
	КонецПопытки;
	/////////////// Расходный ордер 
	//СтруктураПараметровСозданияРасходныхОрдеров
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Получатель",СкладПолучатель);
	СтруктураПараметров.Вставить("Помещение",Помещение);
	СтруктураПараметров.Вставить("ПомещениеЗаполнено",Истина);
	СтруктураПараметров.Вставить("ФоновоеЗадание",Ложь);
	СтруктураПараметров.Вставить("ЗаданиеНаПеревозку","");
	СтруктураПараметров.Вставить("ЗонаОтгрузки",Справочники.СкладскиеЯчейки.ПустаяСсылка());
	СтруктураПараметров.Вставить("Склад",СкладОтп); 
	РаспоряжениеНаОтгрузку = Новый Массив;
	РаспоряжениеНаОтгрузку.Добавить(Док.Ссылка);
	СтруктураПараметров.Вставить("РаспоряженияНаОтгрузку",РаспоряжениеНаОтгрузку);
	РасхОрдер = СкладыСервер.ПереоформитьРасходныеОрдера(СтруктураПараметров); 
	Если РасхОрдер.ОформленныеОрдера.Количество() > 0 Тогда
		РОрдер = РасхОрдер.ОформленныеОрдера[0].РасходныйОрдер.Ссылка.ПолучитьОбъект();
		РОрдер.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен;
		
		РОрдер.ОтгружаемыеТовары.Очистить();
		
		Т = РОрдер.ОтгружаемыеТовары.Добавить(); 
		Т.Номенклатура = ЭтаФорма.ДокЭтапа.ВыходныеИзделия[0].Номенклатура;;
		Т.КоличествоУпаковок = ЭтаФорма.Количество/ЭтаФорма.Упаковка.Числитель;
		Т.Количество = ЭтаФорма.Количество;
		Т.Серия = Серия;
		Т.СтатусУказанияСерий = 4;
		Т.Упаковка = ЭтаФорма.Упаковка;
		Т.Действие = перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
		
		Попытка
			РОрдер.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			РОрдер.Записать(РежимЗаписиДокумента.Запись);
			ош = Истина;
		КонецПопытки; 
		
	КонецЕсли;	
	
	/////////////// ПеремещениеТоваров 
	СтруктураП = Новый Структура;
	СтруктураП.Вставить("ЗаполнятьПоОрдеру",Истина);
	СтруктураП.Вставить("Статус",Перечисления.СтатусыПеремещенийТоваров.Принято);
	СтруктураП.Вставить("Дата",ТекущаяДата());
	СтруктураП.Вставить("ИмяДокумента","ПеремещениеТоваров");
	СтруктураП.Вставить("ИмяПоляЗаказ","ЗаказНаПеремещение");
	СтруктураП.Вставить("ИмяРегистраЗаказ","ЗаказыНаПеремещение");
	СтруктураП.Вставить("КлючевыеПоля","Номенклатура, Характеристика, Серия, Назначение, НазначениеОтправителя"); 
	МассивЗаказов = Новый Массив;
	МассивЗаказов.Добавить(Док.Ссылка);
	СтруктураП.Вставить("МассивЗаказов",МассивЗаказов);
	
	РеквизитыШапки = Новый Структура; 
	РеквизитыШапки.Вставить("ВариантПриемкиТоваров",Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным);
	РеквизитыШапки.Вставить("Организация",ЭтаФорма.ДокЭтапа.Распоряжение.Организация);
	РеквизитыШапки.Вставить("СкладОтправитель",ЭтаФорма.ДокЭтапа.ВыходныеИзделия[0].Получатель);
	РеквизитыШапки.Вставить("СкладПолучатель",СкладПолучатель);//Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции"));
	РеквизитыШапки.Вставить("СпособДоставки",Перечисления.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада);
	РеквизитыШапки.Вставить("ХозяйственнаяОперация",Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	
	СтруктураП.Вставить("РеквизитыШапки",РеквизитыШапки);
	ДокП = Документы.ПеремещениеТоваров.СоздатьДокумент();
	ДокП.Заполнить(СтруктураП);
	ДокП.Дата = ТекущаяДата();
	ДокП.Записать(РежимЗаписиДокумента.Запись);
	
	ДокПТ = ДокП.Ссылка.ПолучитьОбъект();
	ДокПТ.Статус = Перечисления.СтатусыПеремещенийТоваров.Принято; 
	
	Попытка 
		ДокПТ.Записать(РежимЗаписиДокумента.Проведение);
	Исключение  
		ДокПТ.Записать(РежимЗаписиДокумента.Запись);
		Ош = Истина;
	КонецПопытки;  
	///////////////////////////// 
	Склад = ЭтаФорма.ДокЭтапа.ВыходныеИзделия[0].Получатель;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	ПриходныйОрдерНаТовары.Проведен = &Проведен
	|	И ПриходныйОрдерНаТовары.ПометкаУдаления = &ПометкаУдаления
	|	И ПриходныйОрдерНаТовары.Распоряжение = &Распоряжение"; 
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Распоряжение",Док.Ссылка);
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);	
	Если ТабЗнач.Количество() = 1 Тогда
		ДокПР = ТабЗнач[0].Ссылка.ПолучитьОбъект();
	Иначе
		ДокПР = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
		ДокПР.Дата = ТекущаяДата();
		ДокПР.Склад = СкладПолучатель;//Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции") ; 
		
		Если СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ЦК Цех Комплектации") Тогда
			ДокПР.Помещение =  Справочники.СкладскиеПомещения.НайтиПоНаименованию("ЦК Цех Комплектации");
		КонецЕсли;
		
		ДокПР.Распоряжение = Док.Ссылка; 
		ДокПР.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
		ДокПР.ДатаВходящегоДокумента = ТекущаяДата();
		ДокПР.Отправитель = Склад ;
		ДокПР.Ответственный = Пользователи.АвторизованныйПользователь();
		ДокПР.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
		ДокПР.СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению;
	КонецЕсли;
	Т = ДокПР.Товары.Добавить(); 
	Т.Номенклатура = ЭтаФорма.ДокЭтапа.ВыходныеИзделия[0].Номенклатура;;
	Т.КоличествоУпаковок = ЭтаФорма.Количество/ЭтаФорма.Упаковка.Числитель;
	Т.Количество = ЭтаФорма.Количество;
	Т.Упаковка = ЭтаФорма.Упаковка;
	Т.СтатусУказанияСерий = 4; 
	Т.Серия = Серия;
	Попытка 
		ДокПР.Записать(РежимЗаписиДокумента.Проведение);
	Исключение 
		ДокПР.Записать(РежимЗаписиДокумента.Запись);
		Ош = Истина;
	КонецПопытки;
	////////////////////////////////////////////////
	Если СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции") Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	Расш1_ПоступлениеСклад.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Расш1_ПоступлениеСклад КАК Расш1_ПоступлениеСклад
		|ГДЕ
		|	Расш1_ПоступлениеСклад.ПометкаУдаления = &ПометкаУдаления
		|	И Расш1_ПоступлениеСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расш1_ПоступлениеСклад.Проведен = &Проведен"; 
		Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
		Запрос.УстановитьПараметр("Проведен", Истина);
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
		
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Следующий() Тогда
			ТекДок = Рез.Ссылка.ПолучитьОбъект();
		Иначе
			ТекДок = Документы.Расш1_ПоступлениеСклад.СоздатьДокумент(); 
			ТекДок.Дата =ТекущаяДата(); 
			ТекДок.Склад = СкладПолучатель;//Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
		КонецЕсли;
		НоваяСтрока = ТекДок.Товары.Добавить();
		НоваяСтрока.Номенклатура = ЭтаФорма.ДокЭтапа.ВыходныеИзделия[0].Номенклатура;
		НоваяСтрока.Серия = Серия;
		НоваяСтрока.КоличествоУпаковок = ЭтаФорма.Количество/ЭтаФорма.Упаковка.Числитель;
		НоваяСтрока.Количество = ЭтаФорма.Количество;
		НоваяСтрока.Упаковка = ЭтаФорма.Упаковка;
		НоваяСтрока.Время = ТекущаяДата(); 
		НоваяСтрока.Ячейка = ЭтаФорма.Ячейка;//Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер");;
		
		Попытка
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Ош = Истина;
		Конецпопытки;	
	КонецЕсли;
	
	
	Если ош = Ложь Тогда
		
		НоваяЗапись = РегистрыСведений.СХК_ВыпускПоЭтапу.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период = ЗПериод;
		НоваяЗапись.ЭтапПроизводства = ЭтаФорма.ДокЭтапа.Ссылка;
		НоваяЗапись.СкладПолучатель = СкладПолучатель;
		НоваяЗапись.Упаковка = ЭтотОбъект.Упаковка.Ссылка;
		НоваяЗапись.Количество =ЭтаФорма.Количество;
		НоваяЗапись.Статус = Перечисления.СХК_СтатусВыпуска.ПринятНаСклад;
		НоваяЗапись.НомерСтрокиДок = ЭтаФорма.НомерСтрокиДок; 
		НоваяЗапись.Помещение = ЭтотОбъект.Помещение; 
		НоваяЗапись.Линия = Линия; 
		НоваяЗапись.СерииНоменклатуры = СерииНоменклатуры; 
		НоваяЗапись.Записать(Истина); 
	Иначе
		ЭтаФорма.Элементы.ГруппаИнфТекст.Видимость = Истина;
		ЭтаФорма.Элементы.Ошибка.Заголовок = "Произошла ошибка выполните приемку в ручную";
		ош = Истина
	КонецЕсли; 
	
	
	Возврат Ош;
	
КонецФункции

&НаСервере
Процедура ПереместитьНаСервере() 
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	СХК_Перемещение.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СХК_Перемещение КАК СХК_Перемещение
	               |ГДЕ
	               |	СХК_Перемещение.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И СХК_Перемещение.ПометкаУдаления = &ПометкаУдаления
	               |	И СХК_Перемещение.Проведен = &Проведен"; 
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
	Запрос.УстановитьПараметр("Проведен", Истина);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 

	Рез = Запрос.Выполнить().Выбрать();
	
		
	
	
	
	Если Рез.Следующий() Тогда
		ТекДок = Рез.Ссылка.ПолучитьОбъект();
	Иначе
		ТекДок = Документы.СХК_Перемещение.СоздатьДокумент(); 
		ТекДок.Дата =ТекущаяДата(); 
	КонецЕсли;	
		НоваяСтрока = ТекДок.ТЧТовары.Добавить();
	    НоваяСтрока.Номенклатура = ЭтаФорма.ДокЭтапа.ВыходныеИзделия[0].Номенклатура;
	    НоваяСтрока.Серия = ЭтаФорма.ДокЭтапа.Распоряжение.Продукция[0].Расш1_Серия;;
	    НоваяСтрока.ТекЯчейка = Справочники.СХК_СкладЯчейки.НайтиПоКоду("000000372"); 
		НоваяСтрока.НЯчейка = ЭтаФорма.Ячейка; 
		НоваяСтрока.Количество = ЭтаФорма.Количество; 
		НоваяСтрока.Время = ТекущаяДата();
		
		ТекДок.Записать(РежимЗаписиДокумента.Проведение);
		
	
	
	


КонецПроцедуры


&НаКлиенте
Процедура Принять(Команда)
	О = ПринятьНаСервере();
	Если О = Ложь Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
		
КонецПроцедуры 

//////////////////////
Функция Разложить(Знач Стр, Разделитель = ";") Экспорт
	
	Список = Новый Массив();
	Длина = СтрДлина(Разделитель);
	
	Стр = СокрЛП(Стр);
	Поз = Найти(Стр, Разделитель);
	
	Пока 0 < Поз Цикл
		Список.Добавить(СокрП(Лев(Стр, Поз-1)));
		
		Стр = СокрЛ(Сред(Стр, Поз+Длина));
		Поз = Найти(Стр, Разделитель);
	КонецЦикла;
	
	Список.Добавить(Стр);
	
	Возврат Список;
	
КонецФункции


&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СканЯчейкиИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СканЯчейкиИзменениеТекстаРедактированияНаСервере(Текст);
	ЭтотОбъект.ТекущийЭлемент = ЭтотОбъект.Элементы.Принять; 
КонецПроцедуры 

&НаСервере
Процедура СканЯчейкиИзменениеТекстаРедактированияНаСервере(ШтрихКод)   
	ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СкладЯчейки.Ряд КАК Ряд,
	               |	СХК_СкладЯчейки.Ячейка КАК Ячейка,СХК_СкладЯчейки.Ссылка КАК Ссылка

	               |ИЗ
	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	               |ГДЕ
	               |	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода); 
	
	Если ТабЗнач.Количество()>=1 Тогда
		ЭтаФорма.Ячейка = ТабЗнач[0].Ссылка; 
	Иначе
		ЭтаФорма.Элементы.Ошибка.Заголовок = "Ячейка не найдена";
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "ГруппаПалет" Тогда
		ОчиститьУпаковку();	
		АктивироватьПоиск();
		ПодключитьОбработчикОжидания("АктивироватьПоиск",1,Истина);
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаУпаковка" Тогда 
		ОчиститьПалет();
		АктивироватьПоискУпаковка();
		ПодключитьОбработчикОжидания("АктивироватьПоискУпаковка",1,Истина);		
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаКомплектация" Тогда 
		ЭтаФорма.Элементы.ПринятьПоОрдер.Доступность = Ложь;
		ОчиститьПалет();
		АктивироватьПоискОрдера();
		ПодключитьОбработчикОжидания("АктивироватьПоискОрдера",1,Истина);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьУпаковку()
	ЭтаФорма.Номенклатура = "";	
	ЭтаФорма.Серия = "";	
	ЭтаФорма.УпаковкаУп = "";	
	ЭтаФорма.ЯчейкаУп = "";	 
	ЭтаФорма.Элементы.Разместить.Доступность = Ложь;  
	ЭтаФорма.Элементы.ГруппаИнформацияУп.Видимость = Ложь;
    
КонецПроцедуры

&НаСервере
Процедура ОчиститьПалет()
	ЭтаФорма.Элементы.ГруппаИнф.Видимость = Ложь;		
	ЭтаФорма.Элементы.ГруппаКн.Видимость = Ложь;		
КонецПроцедуры


&НаКлиенте
Процедура АктивироватьПоискУпаковка() Экспорт 

	ЭтаФорма.Элементы.СканQRУп.РедактированиеТекста = Истина;
	ОчиститьШКСервер(); 
	Элементы.СканQRУп.ОбновитьТекстРедактирования();
	Элементы.СканQRУп.Видимость = Ложь;
	Элементы.СканQRУп.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканQRУп; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры   

&НаКлиенте
Процедура АктивироватьПоискОрдера() Экспорт 

	ЭтаФорма.Элементы.СканПОрдера.РедактированиеТекста = Истина;
	ОчиститьШКСервер(); 
	Элементы.СканПОрдера.ОбновитьТекстРедактирования();
	Элементы.СканПОрдера.Видимость = Ложь;
	Элементы.СканПОрдера.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканПОрдера; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 



/////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура СканQRУпИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		ОткрытьФормуСообщения("Отсканируйте QR");
		АктивироватьПоискУпаковка();
	Иначе
		Мас = Новый Массив;
		Если СтрНайти(Текст, ";") = 0 Тогда
			Если НайтиНоменклатуруПоСерии(Текст) = Истина Тогда
				ОткрытьФормуФормаСканШК(Текст);		
			Иначе
				ОткрытьФормуСообщения("Номенклатура не найдена"); 
				АктивироватьПоискУпаковка();
			КонецЕсли;
		Иначе
			Мас = Разложить(Текст,";");
			Если НайтиНоменклатуруПоСерии(Мас[0]) = Истина Тогда 
				ЗаполнитьУпаковкаУп(Мас[1]);
				АктивироватьПоискЯчейкиУп();
			Иначе
				ОткрытьФормуСообщения("Номенклатура не найдена"); 
				АктивироватьПоискУпаковка();
			КонецЕсли;
				
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.Элементы.ГруппаИнформацияУп.Видимость = Истина;

КонецПроцедуры


&НаКлиенте
Процедура АктивироватьПоискЯчейкиУп() 
	ОчиститьШКСервер(); 
	Элементы.СканЯчейкиУп.ОбновитьТекстРедактирования();
	Элементы.СканЯчейкиУп.Видимость = Ложь;
	Элементы.СканЯчейкиУп.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканЯчейкиУп; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры  


&НаСервере
Функция НайтиНоменклатуруПоСерии(Сер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДвиженияСерийТоваров.Номенклатура КАК Номенклатура,
	|	ДвиженияСерийТоваров.Серия КАК Серия
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|ГДЕ
	|	ДвиженияСерийТоваров.Серия.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование",Сер);
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()=1 Тогда
		ЭтаФорма.Серия = Рез[0].Серия;
		ЭтаФорма.Номенклатура = Рез[0].Номенклатура;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура ОткрытьФормуФормаСканШК(Штр) 
		Отбор = Новый Структура;
		Отбор.Вставить("Штрих",Штр);
		Отбор.Вставить("Серия",ЭтаФорма.Серия);
		Отбор.Вставить("Номенклатура",ЭтаФорма.Номенклатура);
		//Отбор.Вставить("Ячейка",ЭтаФорма.ЯчейкаВыбор);
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщенияСканШК", ЭтаФорма);
		ОткрытьФорму("Обработка.МобильныйСкладТест.Форма.ФормаСканШК", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФормуСообщения(Сообщение) 
	Отбор = Новый Структура;
	Отбор.Вставить("Ошибка",Строка(Сообщение));
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщения", ЭтаФорма);
		ОткрытьФорму("Обработка.МобильныйСкладТест.Форма.ФормаСообщений", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщения(Значение, ДопПараметры) Экспорт 
						
КонецПроцедуры  

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщенияСканШК(Значение, ДопПараметры) Экспорт 
	Если Значение.Ош = Истина Тогда 
		//Мас = Новый Массив;
		//Мас.Добавить(Значение.Серия);
		//Мас.Добавить(Значение.Штр);
		ЗаполнитьУпаковкаУп(Значение.Штр);
		АктивироватьПоискЯчейкиУп();
	Иначе
		ОткрытьФормуСообщения(Строка(Значение.Ошибка));	
	КонецЕсли;
	
КонецПроцедуры         

&НаСервере
Процедура ЗаполнитьУпаковкаУп(Штр) 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ШтрихкодыНоменклатуры.Упаковка КАК Упаковка
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	               |	И ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
 	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.Номенклатура);
	Запрос.УстановитьПараметр("Штрихкод",Штр);

	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда 
		ЭтаФорма.УпаковкаУп = Рез.Упаковка;
	КонецЕсли;

КонецПроцедуры



&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции 


&НаКлиенте
Процедура СканЯчейкиУпИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СканЯчейкиУпИзменениеТекстаРедактированияНаСервере(Текст);
	Если ЭтаФорма.ЯчейкаУп <> "" Тогда
		АктивироватьКолУп();	
	Иначе
		АктивироватьПоискЯчейкиУп();
	КонецЕсли;
	
	//ЭтотОбъект.ТекущийЭлемент = ЭтотОбъект.Элементы.Разместить; 
КонецПроцедуры 

&НаКлиенте
Процедура АктивироватьКолУп() 
	ОчиститьШКСервер(); 
	Элементы.КолУп.ОбновитьТекстРедактирования();
	Элементы.КолУп.Видимость = Ложь;
	Элементы.КолУп.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.КолУп; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры  

&НаСервере
Процедура СканЯчейкиУпИзменениеТекстаРедактированияНаСервере(ШтрихКод)   
	ЭтаФорма.Ячейка =  Справочники.СХК_СкладЯчейки.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СкладЯчейки.Ряд КАК Ряд,
	               |	СХК_СкладЯчейки.Ячейка КАК Ячейка,СХК_СкладЯчейки.Ссылка КАК Ссылка

	               |ИЗ
	               |	Справочник.СХК_СкладЯчейки КАК СХК_СкладЯчейки
	               |ГДЕ
	               |	СХК_СкладЯчейки.ШтрихКод = &ШтрихКод";   
	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод); 
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода); 
	
	Если ТабЗнач.Количество()>=1 Тогда
		ЭтаФорма.ЯчейкаУп = ТабЗнач[0].Ссылка;
		ЭтаФорма.КолУп = 1;
		ЭтаФорма.Элементы.Разместить.Доступность = Истина;
	Иначе
		ЭтаФорма.Элементы.Декорация9.Заголовок = "Ячейка не найдена"; 
		ЭтаФорма.Элементы.Разместить.Доступность = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры


&НаСервере
Функция ПринятьРазместитьНаСервере() 
	Ош = Истина;
	РасКол = ЭтаФорма.КолУп*ЭтаФорма.УпаковкаУп.Числитель;
	
	
	Буфер = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	|ИЗ
	|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	|ГДЕ
	|	СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
	|	И СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	|	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка"; 
	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.Номенклатура);
	Запрос.УстановитьПараметр("Серия",Строка(ЭтаФорма.Серия));
	Запрос.УстановитьПараметр("Ячейка",Буфер);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Итог("ВНаличииОстаток")>=РасКол Тогда
		//ПереместитьИзБуфераВсе();
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	СХК_Перемещение.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СХК_Перемещение КАК СХК_Перемещение
		|ГДЕ
		|	СХК_Перемещение.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И СХК_Перемещение.ПометкаУдаления = &ПометкаУдаления
		|	И СХК_Перемещение.Проведен = &Проведен"; 
		Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
		Запрос.УстановитьПараметр("Проведен", Истина);
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
		
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Следующий() Тогда
			ТекДок = Рез.Ссылка.ПолучитьОбъект();
		Иначе
			ТекДок = Документы.СХК_Перемещение.СоздатьДокумент(); 
			ТекДок.Дата =ТекущаяДата(); 
		КонецЕсли;
		НоваяСтрока = ТекДок.ТЧТовары.Добавить();
		НоваяСтрока.Номенклатура = ЭтаФорма.Номенклатура;
		НоваяСтрока.Серия = ЭтаФорма.Серия;
		НоваяСтрока.ТекЯчейка = Буфер; 
		НоваяСтрока.НЯчейка = ЭтаФорма.ЯчейкаУп; 
		НоваяСтрока.Количество = РасКол;
		НоваяСтрока.Время = ТекущаяДата();
		
		Попытка
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Ош = Ложь;
		Исключение
			Ош = Истина;
		КонецПопытки;				
	Иначе
		Если Рез.Итог("ВНаличииОстаток") = 0 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Расш1_ПоступлениеСклад.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.Расш1_ПоступлениеСклад КАК Расш1_ПоступлениеСклад
			|ГДЕ
			|	Расш1_ПоступлениеСклад.ПометкаУдаления = &ПометкаУдаления
			|	И Расш1_ПоступлениеСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Расш1_ПоступлениеСклад.Проведен = &Проведен"; 
			Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
			Запрос.УстановитьПараметр("Проведен", Истина);
			Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
			Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
			
			Рез = Запрос.Выполнить().Выбрать();
			
			Если Рез.Следующий() Тогда
				ТекДок = Рез.Ссылка.ПолучитьОбъект();
			Иначе
				ТекДок = Документы.Расш1_ПоступлениеСклад.СоздатьДокумент(); 
				ТекДок.Дата =ТекущаяДата(); 
				ТекДок.Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
			КонецЕсли;
			НоваяСтрока = ТекДок.Товары.Добавить();
			НоваяСтрока.Номенклатура = ЭтаФорма.Номенклатура;
			НоваяСтрока.Серия = ЭтаФорма.Серия;
			НоваяСтрока.КоличествоУпаковок = ЭтаФорма.КолУп;
			НоваяСтрока.Количество = РасКол;
			НоваяСтрока.Упаковка = ЭтаФорма.УпаковкаУп;
			НоваяСтрока.Время = ТекущаяДата(); 
			НоваяСтрока.Ячейка = ЭтаФорма.ЯчейкаУп;//Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер");;
			
			Попытка
				ТекДок.Записать(РежимЗаписиДокумента.Проведение);
				Ош = Ложь;
			Исключение
				Ош = Истина;
			Конецпопытки;
		Иначе
			//////////////////////Перемещаем что есть в буфере  
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	СХК_Перемещение.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.СХК_Перемещение КАК СХК_Перемещение
			|ГДЕ
			|	СХК_Перемещение.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И СХК_Перемещение.ПометкаУдаления = &ПометкаУдаления
			|	И СХК_Перемещение.Проведен = &Проведен"; 
			Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
			Запрос.УстановитьПараметр("Проведен", Истина);
			Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
			Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
			
			Рез = Запрос.Выполнить().Выбрать();
			
			Если Рез.Следующий() Тогда
				ТекДок = Рез.Ссылка.ПолучитьОбъект();
			Иначе
				ТекДок = Документы.СХК_Перемещение.СоздатьДокумент(); 
				ТекДок.Дата =ТекущаяДата(); 
			КонецЕсли;
			НоваяСтрока = ТекДок.ТЧТовары.Добавить();
			НоваяСтрока.Номенклатура = ЭтаФорма.Номенклатура;
			НоваяСтрока.Серия = ЭтаФорма.Серия;
			НоваяСтрока.ТекЯчейка = Буфер; 
			НоваяСтрока.НЯчейка = ЭтаФорма.ЯчейкаУп; 
			НоваяСтрока.Количество = Рез.Итог("ВНаличииОстаток");
			НоваяСтрока.Время = ТекущаяДата();
			Попытка
				ТекДок.Записать(РежимЗаписиДокумента.Проведение);
				Ош = Ложь;
			Исключение
				Ош = Истина;
			КонецПопытки;				
			
			//////////////////////Создаем поступление на остаток  
			РасКолОстаток = РасКол - Рез.Итог("ВНаличииОстаток");
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Расш1_ПоступлениеСклад.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.Расш1_ПоступлениеСклад КАК Расш1_ПоступлениеСклад
			|ГДЕ
			|	Расш1_ПоступлениеСклад.ПометкаУдаления = &ПометкаУдаления
			|	И Расш1_ПоступлениеСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Расш1_ПоступлениеСклад.Проведен = &Проведен"; 
			Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
			Запрос.УстановитьПараметр("Проведен", Истина);
			Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
			Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
			
			Рез = Запрос.Выполнить().Выбрать();
			
			Если Рез.Следующий() Тогда
				ТекДок = Рез.Ссылка.ПолучитьОбъект();
			Иначе
				ТекДок = Документы.Расш1_ПоступлениеСклад.СоздатьДокумент(); 
				ТекДок.Дата =ТекущаяДата(); 
				ТекДок.Склад = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
			КонецЕсли;
			НоваяСтрока = ТекДок.Товары.Добавить();
			НоваяСтрока.Номенклатура = ЭтаФорма.Номенклатура;
			НоваяСтрока.Серия = ЭтаФорма.Серия;
			НоваяСтрока.КоличествоУпаковок = РасКолОстаток/ЭтаФорма.УпаковкаУп.Числитель;
			НоваяСтрока.Количество = РасКолОстаток;
			НоваяСтрока.Упаковка = ЭтаФорма.УпаковкаУп;
			НоваяСтрока.Время = ТекущаяДата(); 
			НоваяСтрока.Ячейка = ЭтаФорма.ЯчейкаУп;//Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер");;
			
			Попытка
				ТекДок.Записать(РежимЗаписиДокумента.Проведение);
				Ош = Ложь;
			Исключение
				Ош = Истина;
			Конецпопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ош;
КонецФункции


&НаКлиенте
Процедура Разместить(Команда)
	
	О = ПринятьРазместитьНаСервере();
	
	Если О = Ложь Тогда
		ЭтаФорма.Закрыть(); 
	Иначе
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
			ПоказатьПредупреждение(Оповещение,"Произошла Ошибка",10,"Внимание!!!");
		
	КонецЕсли;

КонецПроцедуры



//////////////////////////////////////////////////////////////////////////////////////////


&НаКлиенте
Процедура СканПОрдераИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтатусПОрдера = ПроверитьСтатусПОрдера(Текст); 
	
	//Если ТипЗнч(СтатусПОрдера) = ТИП("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
	//ЗаполнитьИнформациюПоОрдеру(СтатусПОрдера); 
	Если СтатусПОрдера = Истина Тогда 
		Элементы.СканПОрдераQR.Доступность = Истина;
		ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок =""; 
		АктивироватьСканПОрдераQR();
		
	Иначе
		ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок =  СтатусПОрдера;       
	КонецЕсли;
	
КонецПроцедуры  

&НаКлиенте
Процедура АктивироватьСканПОрдераQR() 
 
	Элементы.СканПОрдераQR.ОбновитьТекстРедактирования();
	Элементы.СканПОрдераQR.Видимость = Ложь;
	Элементы.СканПОрдераQR.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканПОрдераQR; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры  


&НаСервере
Функция ПроверитьСтатусПОрдера(УИД) 
	
	Попытка
		Док = Документы.ПриходныйОрдерНаТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(УИД));
	Исключение
		Док = Неопределено;
	КонецПопытки;
	
	Если Док = Неопределено ИЛИ Док.ПолучитьОбъект() = Неопределено Тогда 
		ош = "Отсканируйте правильный qr код";
	Иначе
		Если Док.Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка Тогда
			ЭтаФорма.ДокОрдер = Док.Ссылка;  
			Т = Док.Товары.Выгрузить();
			ЭтаФорма.НоменклатураОрдер = Т[0].Номенклатура;
			ЭтаФорма.СерияОрдер = Т[0].Серия;
			Если Т[0].Упаковка.Пустая() = Ложь Тогда
				ЭтаФорма.УпаковкаОрдер = Т[0].Упаковка; 
			Иначе
				ЭтаФорма.УпаковкаОрдер = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию("шт"); 
			КонецЕсли;				
			ош = Истина;
		ИначеЕсли Док.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят Тогда 
			ЭтаФорма.Элементы.НоменклатураОрдер.Заголовок = ""; 
			ЭтаФорма.СерияОрдер = Справочники.СерииНоменклатуры.ПустаяСсылка();
			ЭтаФорма.УпаковкаОрдер = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			ош = "Ордер уже принят";
		Иначе
			ЭтаФорма.Элементы.НоменклатураОрдер.Заголовок = ""; 
			ЭтаФорма.СерияОрдер = Справочники.СерииНоменклатуры.ПустаяСсылка();
			ЭтаФорма.УпаковкаОрдер = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			
			ош = "Измените статус ордера";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ош;
			
		
КонецФункции

&НаКлиенте
Процедура СканПОрдераQRИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если СтрНайти(Текст, ";") = 0 Тогда
		сканСерия = СокрЛП(Текст);
		Если сканСерия = Строка(ЭтаФорма.СерияОрдер) Тогда
			ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок = "";		
			АктивироватьСканПОрдераQRУп();		
		Иначе
			ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок = "Серия не верна";
			АктивироватьСканПОрдераQR();
		КонецЕсли;
		
	Иначе
		Мас = Разложить(Текст,";");
		сканСерия = Мас[0]; 
		Если сканСерия = Строка(ЭтаФорма.СерияОрдер) Тогда
			ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок = "";		
			инфШк = НайтиШКСервер(Мас[1]);
			Если инфШк = 1 Тогда
				ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок ="";
				ЭтаФорма.Элементы.ПринятьПоОрдер.Доступность = Истина;
				АктивироватьКоличествоПОрдера();		
				
			Иначе
				ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок = инфШк; 
				АктивироватьСканПОрдераQRУп();		
			КонецЕсли;
		Иначе
			ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок = "Серия не верна";
			АктивироватьСканПОрдераQR();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура АктивироватьСканПОрдераQRУп() 
	
	Элементы.СканПОрдераQR.Доступность = Ложь;
	
	Элементы.СканПОрдераQRУп.ОбновитьТекстРедактирования();
	Элементы.СканПОрдераQRУп.Видимость = Ложь;
	Элементы.СканПОрдераQRУп.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.СканПОрдераQRУп; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры  

&НаКлиенте
Процедура СканПОрдераQRУпИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	инфШк = НайтиШКСервер(Текст);
	Если инфШк = 1 Тогда
		ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок ="";
		ЭтаФорма.Элементы.ПринятьПоОрдер.Доступность = Истина;
		АктивироватьКоличествоПОрдера();		
		
	Иначе
		ЭтаФорма.Элементы.ОшибкаОрдера.Заголовок = инфШк; 
		АктивироватьСканПОрдераQRУп();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьКоличествоПОрдера() 
	
	
	Элементы.КоличествоОрдер.ОбновитьТекстРедактирования();
	Элементы.КоличествоОрдер.Видимость = Ложь;
	Элементы.КоличествоОрдер.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.КоличествоОрдер; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры  


&НаСервере
Функция НайтиШКСервер(ШК)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ШтрихкодыНоменклатуры.Упаковка КАК Упаковка
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	               |	И ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
	               |	И ШтрихкодыНоменклатуры.Упаковка = &Упаковка";
	
 	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.НоменклатураОрдер);
	Запрос.УстановитьПараметр("Упаковка",ЭтаФорма.УпаковкаОрдер);
	Запрос.УстановитьПараметр("Штрихкод",ШК);

	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда 
		Ош = 1;
	Иначе
		Ош = "Упаковка не верна";	
	КонецЕсли;
	
	Возврат Ош;
	
КонецФункции   



&НаСервере
Функция ПринятьНаСервереПоОрдеру()  
	
	ош = Ложь;
	
	ДОрдер = ЭтаФорма.ДокОрдер.ПолучитьОбъект();
	ДОрдер.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
	ДОрдер.Записать(РежимЗаписиДокумента.Проведение);   
	ЭтаФорма.ДокОрдер = ДОрдер.Ссылка;
	
	СкладОтп = Справочники.Склады.НайтиПоНаименованию("ЦК Цех Комплектации");  
	Помещение = Справочники.СкладскиеПомещения.НайтиПоНаименованию("ЦК Цех Комплектации"); 
	СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции"); 
	Числитель = ЭтаФорма.УпаковкаОрдер.Числитель;
	Если Числитель = 0 Тогда
		Числитель = 1;
	КонецЕсли;
	
	/////////////// ЗаказНаПеремещение
	
	Док = Документы.ЗаказНаПеремещение.СоздатьДокумент();
	Док.Дата = ТекущаяДата(); 
	Док.Организация = Справочники.Организации.НайтиПоНаименованию("Собинский Хлебокомбинат АО");//ЭтаФорма.ДокОрдер.Распоряжение.Организация;
	Док.СкладОтправитель = СкладОтп ;
	Док.СкладПолучатель = СкладПолучатель; 
	Док.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	Док.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний"); 
	Док.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным;
	Док.СпособДоставки = Перечисления.СпособыДоставки.Самовывоз;
	Док.Статус = Перечисления.СтатусыВнутреннихЗаказов.Закрыт;
	
	Т = Док.Товары.Добавить(); 
	Т.Номенклатура = ЭтаФорма.НоменклатураОрдер;
	Т.НачалоОтгрузки = ТекущаяДата(); 
		Т.КоличествоУпаковок = ЭтаФорма.КоличествоОрдер;
		Т.Количество = ЭтаФорма.КоличествоОрдер*Числитель;
		Т.Упаковка = ЭтаФорма.УпаковкаОрдер;
	Т.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить;
	Т.СтатусУказанияСерий = 0;
	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Док.Записать(РежимЗаписиДокумента.Запись);
		ош = Истина;
	КонецПопытки;
	/////////////// Расходный ордер 
	//СтруктураПараметровСозданияРасходныхОрдеров
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Получатель",СкладПолучатель);
	СтруктураПараметров.Вставить("Помещение",Помещение);
	СтруктураПараметров.Вставить("ПомещениеЗаполнено",Истина);
	СтруктураПараметров.Вставить("ФоновоеЗадание",Ложь);
	СтруктураПараметров.Вставить("ЗаданиеНаПеревозку","");
	СтруктураПараметров.Вставить("ЗонаОтгрузки",Справочники.СкладскиеЯчейки.ПустаяСсылка());
	СтруктураПараметров.Вставить("Склад",СкладОтп); 
	РаспоряжениеНаОтгрузку = Новый Массив;
	РаспоряжениеНаОтгрузку.Добавить(Док.Ссылка);
	СтруктураПараметров.Вставить("РаспоряженияНаОтгрузку",РаспоряжениеНаОтгрузку);
	РасхОрдер = СкладыСервер.ПереоформитьРасходныеОрдера(СтруктураПараметров); 
	Если РасхОрдер.ОформленныеОрдера.Количество() > 0 Тогда
		РОрдер = РасхОрдер.ОформленныеОрдера[0].РасходныйОрдер.Ссылка.ПолучитьОбъект();
		РОрдер.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен;
		
		РОрдер.ОтгружаемыеТовары.Очистить();
		
		Т = РОрдер.ОтгружаемыеТовары.Добавить(); 
		Т.Номенклатура = ЭтаФорма.НоменклатураОрдер;
		Т.КоличествоУпаковок = ЭтаФорма.КоличествоОрдер;
		Т.Количество = ЭтаФорма.КоличествоОрдер*Числитель;
		Т.Серия = ЭтаФорма.СерияОрдер;
		Т.СтатусУказанияСерий = 4;
		Т.Упаковка = ЭтаФорма.УпаковкаОрдер;
		Т.Действие = перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
		
		Попытка
			РОрдер.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			РОрдер.Записать(РежимЗаписиДокумента.Запись);
			ош = Истина;
		КонецПопытки; 
		
	КонецЕсли;	
	
	/////////////// ПеремещениеТоваров 
	СтруктураП = Новый Структура;
	СтруктураП.Вставить("ЗаполнятьПоОрдеру",Истина);
	СтруктураП.Вставить("Статус",Перечисления.СтатусыПеремещенийТоваров.Принято);
	СтруктураП.Вставить("Дата",ТекущаяДата());
	СтруктураП.Вставить("ИмяДокумента","ПеремещениеТоваров");
	СтруктураП.Вставить("ИмяПоляЗаказ","ЗаказНаПеремещение");
	СтруктураП.Вставить("ИмяРегистраЗаказ","ЗаказыНаПеремещение");
	СтруктураП.Вставить("КлючевыеПоля","Номенклатура, Характеристика, Серия, Назначение, НазначениеОтправителя"); 
	МассивЗаказов = Новый Массив;
	МассивЗаказов.Добавить(Док.Ссылка);
	СтруктураП.Вставить("МассивЗаказов",МассивЗаказов);
	
	РеквизитыШапки = Новый Структура; 
	РеквизитыШапки.Вставить("ВариантПриемкиТоваров",Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным);
	РеквизитыШапки.Вставить("Организация",ЭтаФорма.ДокЭтапа.Распоряжение.Организация);
	РеквизитыШапки.Вставить("СкладОтправитель",СкладОтп);
	РеквизитыШапки.Вставить("СкладПолучатель",СкладПолучатель);//Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции"));
	РеквизитыШапки.Вставить("СпособДоставки",Перечисления.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада);
	РеквизитыШапки.Вставить("ХозяйственнаяОперация",Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	
	СтруктураП.Вставить("РеквизитыШапки",РеквизитыШапки);
	ДокП = Документы.ПеремещениеТоваров.СоздатьДокумент();
	ДокП.Заполнить(СтруктураП);
	ДокП.Дата = ТекущаяДата();
	ДокП.Записать(РежимЗаписиДокумента.Запись);
	
	ДокПТ = ДокП.Ссылка.ПолучитьОбъект();
	ДокПТ.Статус = Перечисления.СтатусыПеремещенийТоваров.Принято; 
	
	Попытка 
		ДокПТ.Записать(РежимЗаписиДокумента.Проведение);
	Исключение  
		ДокПТ.Записать(РежимЗаписиДокумента.Запись);
		Ош = Истина;
	КонецПопытки;  
	///////////////////////////// 
	Склад = СкладПолучатель;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	ПриходныйОрдерНаТовары.Проведен = &Проведен
	|	И ПриходныйОрдерНаТовары.ПометкаУдаления = &ПометкаУдаления
	|	И ПриходныйОрдерНаТовары.Распоряжение = &Распоряжение"; 
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Распоряжение",Док.Ссылка);
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);	
	Если ТабЗнач.Количество() = 1 Тогда
		ДокПР = ТабЗнач[0].Ссылка.ПолучитьОбъект();
	Иначе
		ДокПР = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
		ДокПР.Дата = ТекущаяДата();
		ДокПР.Склад = СкладПолучатель;//Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции") ; 
		
		Если СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ЦК Цех Комплектации") Тогда
			ДокПР.Помещение =  Справочники.СкладскиеПомещения.НайтиПоНаименованию("ЦК Цех Комплектации");
		КонецЕсли;
		
		ДокПР.Распоряжение = Док.Ссылка; 
		ДокПР.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
		ДокПР.ДатаВходящегоДокумента = ТекущаяДата();
		ДокПР.Отправитель = Склад ;
		ДокПР.Ответственный = Пользователи.АвторизованныйПользователь();
		ДокПР.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
		ДокПР.СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению;
	КонецЕсли;
	Т = ДокПР.Товары.Добавить(); 
		Т.Номенклатура = ЭтаФорма.НоменклатураОрдер;
		Т.КоличествоУпаковок = ЭтаФорма.КоличествоОрдер;
		Т.Количество = ЭтаФорма.КоличествоОрдер*Числитель;
		Т.Серия = ЭтаФорма.СерияОрдер;
	Т.Упаковка = ЭтаФорма.УпаковкаОрдер;
	Т.СтатусУказанияСерий = 4; 
	Попытка 
		ДокПР.Записать(РежимЗаписиДокумента.Проведение);
	Исключение 
		ДокПР.Записать(РежимЗаписиДокумента.Запись);
		Ош = Истина;
	КонецПопытки;
	////////////////////////////////////////////////
	Если СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции") Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	Расш1_ПоступлениеСклад.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Расш1_ПоступлениеСклад КАК Расш1_ПоступлениеСклад
		|ГДЕ
		|	Расш1_ПоступлениеСклад.ПометкаУдаления = &ПометкаУдаления
		|	И Расш1_ПоступлениеСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расш1_ПоступлениеСклад.Проведен = &Проведен"; 
		Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);  
		Запрос.УстановитьПараметр("Проведен", Истина);
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата())); 
		
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Следующий() Тогда
			ТекДок = Рез.Ссылка.ПолучитьОбъект();
		Иначе
			ТекДок = Документы.Расш1_ПоступлениеСклад.СоздатьДокумент(); 
			ТекДок.Дата =ТекущаяДата(); 
			ТекДок.Склад = СкладПолучатель;//Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
		КонецЕсли;
		НоваяСтрока = ТекДок.Товары.Добавить();
		НоваяСтрока.Номенклатура = ЭтаФорма.НоменклатураОрдер;
		//НоваяСтрока.КоличествоУпаковок = ЭтаФорма.КоличествоОрдер;
		НоваяСтрока.Количество = ЭтаФорма.КоличествоОрдер*Числитель;
		НоваяСтрока.Серия = ЭтаФорма.СерияОрдер;
		НоваяСтрока.Упаковка = ЭтаФорма.УпаковкаОрдер;
		НоваяСтрока.Время = ТекущаяДата(); 
		НоваяСтрока.Ячейка = Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер");;
		
		Попытка
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Ош = Истина;
		Конецпопытки;	
	КонецЕсли;
	
	
	Если ош = Ложь Тогда
	 
	 
		
	Иначе  
		ДОрдер = ЭтаФорма.ДокОрдер.ПолучитьОбъект();
		ДОрдер.Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка;
		ДОрдер.Записать(РежимЗаписиДокумента.Проведение);   
		ЭтаФорма.Элементы.ГруппаИнфТекст.Видимость = Истина;
		ЭтаФорма.Элементы.Ошибка.Заголовок = "Произошла ошибка выполните приемку в ручную";
		ош = Истина
	КонецЕсли; 

	
	 Возврат Ош;
	
КонецФункции

&НаКлиенте
Процедура ПринятьПоОрдер(Команда)
	О = ПринятьНаСервереПоОрдеру();
	Если О = Ложь Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры




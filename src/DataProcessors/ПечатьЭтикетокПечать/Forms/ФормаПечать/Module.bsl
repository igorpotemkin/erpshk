&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ПометкаУдаления", Ложь);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Ссылка", Номенкл(Неопределено)); 
	СписокУпаковок.Параметры.УстановитьЗначениеПараметра("СсылкаНоменклатура", "");
	СписокШтрихКодов.Параметры.УстановитьЗначениеПараметра("Номенклатура", "");
 	ПодключитьОбработчикОжидания("ОбработчикСтикер", 60); 

КонецПроцедуры


&НаКлиенте
Процедура ОбработчикСтикер()    

	УстановитьКартинку();
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьКартинку()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_ЗаданиеНаПечатьЭтикеток.ЗаказНаПроизводств КАК ЗаказНаПроизводств,
	               |	СХК_ЗаданиеНаПечатьЭтикеток.Номенклатура КАК Номенклатура,
	               |	СХК_ЗаданиеНаПечатьЭтикеток.Серия КАК Серия,
	               |	СХК_ЗаданиеНаПечатьЭтикеток.Период КАК Период,
	               |	СХК_ЗаданиеНаПечатьЭтикеток.Статус КАК Статус
	               |ИЗ
	               |	РегистрСведений.СХК_ЗаданиеНаПечатьЭтикеток КАК СХК_ЗаданиеНаПечатьЭтикеток
	               |ГДЕ
	               |	СХК_ЗаданиеНаПечатьЭтикеток.Статус = &Статус"; 
	
	 Запрос.УстановитьПараметр("Статус","Создан");
	 Результат = Запрос.Выполнить().Выбрать();
	 
	 Если Результат.Количество() >= 1 ТОгда
		 ЭтаФорма.Элементы.СтраницаЗадачи.Картинка = БиблиотекаКартинок.ВосклицательныйЗнакКрасный;
	 Иначе
		ЭтаФорма.Элементы.СтраницаЗадачи.Картинка = БиблиотекаКартинок.ОформлениеЗнакФлажок;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекДата = ТекущаяДата(); 
	ТипМакета = "Белый";
	ТекстЭтикетки = Строка("Изготовитель: АО 'Собинский хлебокомбинат', 601204, Россия, Владимирская область, Собинский район, г.Собинка, ул.Ленина, д.3, тел.: +7 (499) 322-48-37");
	//url17 = "192.168.88.146:8000";	
	//url18 = "192.168.88.189:8000";
	
	Статус = Новый Массив;
	Статус.Добавить("Создан");

    СЗЗадание.Параметры.УстановитьЗначениеПараметра("Статус",Статус);
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере()
	ТЧТовары.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	ОчиститьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ТЧПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	СтандартнаяОбработка = Ложь; 
	//См = Смена;
	//ДобавитьСтрокуНом = ИнфоНоменклатуры(ВыбраннаяСтрока);
	//НоваяСтрока = ЭтаФорма.ТЧТовары.Добавить();
	//НоваяСтрока.Наименование = ВыбраннаяСтрока;	
	//НоваяСтрока.Номенклатура = ВыбраннаяСтрока;	  

	ТЧПодборНоменклатурыВыборНаСервере(ВыбраннаяСтрока); 
	СписокУпаковок.Параметры.УстановитьЗначениеПараметра("СсылкаНоменклатура", ПолучитьНоменк(ВыбраннаяСтрока));
	СписокШтрихКодов.Параметры.УстановитьЗначениеПараметра("Номенклатура", ПолучитьНоменк(ВыбраннаяСтрока));
	//СписокШтрихКодов.Параметры.УстановитьЗначениеПараметра("Упаковка", "");
	

КонецПроцедуры   

&НаСервере
Функция ПолучитьНоменк(Ном)
	Спр = Ном.ПолучитьОбъект();
Возврат Спр.Ссылка;	
КонецФункции


&НаСервере
Процедура ТЧПодборНоменклатурыВыборНаСервере(Ном)
	Спр = Ном.ПолучитьОбъект();
	//4630017460199
	НовСтрока = ТЧТовары.Добавить();
	НовСтрока.Номенклатура = Спр.Ссылка;
	Для Каждого допРекв из Спр.ДополнительныеРеквизиты Цикл   
		Если допРекв.Свойство.ИдентификаторДляФормул ="НаименованиеДляЭтикетки" Тогда 
			Если допРекв.Значение <> "" Тогда
				НовСтрока.Наименование = допРекв.Значение;
			Иначе
				НовСтрока.Наименование = Спр.НаименованиеПолное;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
	КонецЦикла; 	
	
	НовСтрока.НомерСмены = Смена;
	НовСтрока.Штрихкод = ШК(Спр);

	Для Каждого допРекв из Спр.ДополнительныеРеквизиты Цикл   
		Если допРекв.Свойство.Наименование = "Условия хранения" Тогда
			НовСтрока.УсловияХранения = допРекв.Значение ;	
		ИначеЕсли допРекв.Свойство.ИдентификаторДляФормул ="ТоварнаяКатегория" Тогда
			НовСтрока.СерияЭтикетки = допРекв.Значение;
		КонецЕсли;
	КонецЦикла; 	

		Если Спр.ИспользоватьУпаковки = Истина Тогда
			весшт = Спр.ВесЧислитель; 
			колшт = Спр.КоэффициентЕдиницыДляОтчетов;  
			//весОднойШт = весшт  * колшт * 1000; 
			весОднойШт = весшт  * 1000; 
			//упКол = стр.Упаковка.Числитель; 
			//весУп = упКол * весОднойШт;
		Иначе
			весшт = 1;
			колшт =1 ;
			весОднойШт = 1;
			
		КонецЕсли;
	//	
	//	НовСтрока.весшт = Строка(весОднойШт)+" г.";	
	//	Т.колшт = "1 шт";	
	//
	//	Т.Нетто = Строка(весУп) + "1 г";
	
	//НовСтрока.весшт = "";
	//НовСтрока.Нетто = "";
	//НовСтрока.КолШт = "";
	//НовСтрока.Срок = ""; 
	
	НовСтрока.ВариантУпаковки = 1; 
	НовСтрока.КолШт = колшт;
    НовСтрока.весшт = весОднойШт;
	НовСтрока.Нетто = "";
	НовСтрока.КолЭтикеток = "";
	
	ЭтаФорма.Элементы.ТЧТовары.ТекущаяСтрока = НовСтрока.ПолучитьИдентификатор();
	//НовСтрока.НомерСмены = Смена;
	
	
КонецПроцедуры

&НаСервере
Функция ШК(Номенклатура)
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
			               |ИЗ
			               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
			               |ГДЕ
			               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура.Ссылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Штрихкод  = Выборка.ШтрихКод;
			Иначе
				ШтрихКод  = "";
			КонецЕсли;
	
	Возврат ШтрихКод;

КонецФункции

&НаСервере
Функция Номенкл(Ном)  
	Если Ном <> Неопределено Тогда
		Спр = Ном.ПолучитьОбъект().Ссылка;
	ИНаче
		Спр = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
	
Возврат Спр;	
КонецФункции


&НаКлиенте
Процедура ТЧТоварыПриАктивизацииСтроки(Элемент) 
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		СписокУпаковок.Параметры.УстановитьЗначениеПараметра("СсылкаНоменклатура", ПолучитьНоменк(Элемент.ТекущиеДанные.Номенклатура));
		СписокШтрихКодов.Параметры.УстановитьЗначениеПараметра("Номенклатура", ПолучитьНоменк(Элемент.ТекущиеДанные.Номенклатура));
		//СписокШтрихКодов.Параметры.УстановитьЗначениеПараметра("Упаковка","");
   	КонецЕсли;
	//Сообщить(Элемент);
КонецПроцедуры

&НаСервере
Процедура СписокУпаковокВыборНаСервере(Упаковка, Идентификатор)
	ТекущаяСтрока = ТЧТовары.НайтиПоИдентификатору(Идентификатор);
	//Упаковка.Числитель
	ТекущаяСтрока.ВариантУпаковки = Упаковка; 
	
	ПересчетТаблицы(Идентификатор);	

	//СтруктураДействий = Новый Структура;
	//СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	//СтруктураДействий.Вставить("ЗаполнитьВесУпаковки",Новый Структура("Номенклатура, Упаковка", "ВесУпаковки"));
	//СтруктураДействий.Вставить("ЗаполнитьОбъемУпаковки",Новый Структура("Номенклатура, Упаковка", "ОбъемУпаковки"));
	//СтруктураДействий.Вставить("ЗаполнитьЕдиницуИзмеренияВеса",Новый Структура("Номенклатура, Упаковка", "ЕдиницаИзмеренияВеса"));
	//СтруктураДействий.Вставить("ЗаполнитьЕдиницуИзмеренияОбъема",Новый Структура("Номенклатура, Упаковка", "ЕдиницаИзмеренияОбъема"));
	//СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	//СтруктураДействий.Вставить("ПересчитатьВесОбъем");
	//
	//ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	//
	//ЗаблокироватьДанныеФормыДляРедактирования();
	//Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокУпаковокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)  
	СтандартнаяОбработка = Ложь; 
	
	СписокУпаковокВыборНаСервере(ВыбраннаяСтрока,Элементы.ТЧТовары.ТекущиеДанные.ПолучитьИдентификатор());

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьУпаковку(Команда)  
	
	СписокУпаковокВыборНаСервере(Элементы.СписокУпаковок.ТекущаяСтрока,Элементы.ТЧТовары.ТекущиеДанные.ПолучитьИдентификатор());

	// Вставить содержимое обработчика.
КонецПроцедуры


&НаСервере
Процедура СписокШтрихКодовВыборНаСервере(Штрихкод,Упаковка, Идентификатор)
	ТекущаяСтрока = ТЧТовары.НайтиПоИдентификатору(Идентификатор);
	//Упаковка.Числитель
	ТекущаяСтрока.Штрихкод = Штрихкод; 
	ТекущаяСтрока.ВариантУпаковки = Упаковка;
    ПересчетТаблицы(Идентификатор);	

КонецПроцедуры

&НаКлиенте
Процедура СписокШтрихКодовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	
	СписокШтрихКодовВыборНаСервере(Элемент.ТекущиеДанные.Штрихкод,Элемент.ТекущиеДанные.Упаковка,Элементы.ТЧТовары.ТекущиеДанные.ПолучитьИдентификатор());

КонецПроцедуры

&НаКлиенте
Процедура ТЧТоварыКолПриИзменении(Элемент)
	ТЧТоварыКолПриИзмененииНаСервере(Элемент.ТекстРедактирования,Элементы.ТЧТовары.ТекущиеДанные.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура ТЧТоварыКолПриИзмененииНаСервере(Кол,Идентификатор)
	ТекущаяСтрока = ТЧТовары.НайтиПоИдентификатору(Идентификатор); 
	ТекущаяСтрока.КолЭтикеток = Кол;
 
	ПересчетТаблицы(Идентификатор);	
КонецПроцедуры

&НаСервере
Процедура ПересчетТаблицы(Идентификатор)
	ТекущаяСтрока = ТЧТовары.НайтиПоИдентификатору(Идентификатор);
	 
	Кол = ?(ТекущаяСтрока.Кол > 0 , ТекущаяСтрока.Кол,  1) ;
	ВариантУпаковки = ?(ТекущаяСтрока.ВариантУпаковки.Числитель > 0, ТекущаяСтрока.ВариантУпаковки.Числитель,  1) ;
	ТекущаяСтрока.КолЭтикеток =Цел(Кол/ВариантУпаковки);
	//ТекущаяСтрока.Нетто =  ВариантУпаковки * ТекущаяСтрока.весшт * ТекущаяСтрока.КолШт;
	ТекущаяСтрока.Нетто =  ТекущаяСтрока.весшт * ВариантУпаковки;
	
КонецПроцедуры

	

&НаСервере
Процедура СменаПриИзмененииНаСервере()
	Для Каждого стр из ТЧТовары Цикл
		стр.НомерСмены = Смена;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СменаПриИзменении(Элемент)
	СменаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТЧТоварыСерияПриИзменении(Элемент)


КонецПроцедуры  

&НаСервере
Процедура ТЧТоварыСерияПриИзмененииСервер(Срок,Идентификатор) 
	
	ТекущаяСтрока = ТЧТовары.НайтиПоИдентификатору(Идентификатор);
    ТекущаяСтрока.Срок =Срок.ГоденДо; 
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧТоварыСерияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		ТЧТоварыСерияПриИзмененииСервер(ВыбранноеЗначение,Элементы.ТЧТовары.ТекущиеДанные.ПолучитьИдентификатор());
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	Ош = ПроверкаПолей();
	Если Ош = Ложь Тогда
		ТаблДокум = Новый  ТабличныйДокумент;
		ТаблДокум = ПечатьНаСервере(ТаблДокум);
		ТаблДокум.Показать("Печать документа");
	Иначе
		ДиалогОшибки(Ош);
	КонецЕсли;

КонецПроцедуры 

&НаСервере
Функция ПроверкаПолей()
	
	Ош = Ложь;
	Для Каждого стр из ТЧТовары Цикл
		Если стр.НомерСмены = "" Тогда 
			Ош = "Заполните номер смены"; 
			Продолжить; 
		ИначеЕсли  стр.Серия = "" Тогда 
			Ош = "Заполните СЕРИЮ Номенклатуры"; 
			Продолжить; 
		ИначеЕсли  стр.Штрихкод = "" Тогда 
			Ош = "Заполните Штрихкод Номенклатуры"; 
			Продолжить; 
		ИначеЕсли  стр.весшт = "" Тогда 
			Ош = "Заполните ВЕС шт Номенклатуры"; 
			Продолжить; 
		ИначеЕсли  стр.Нетто = "" Тогда 
			Ош = "Заполните ВЕС НЕТТО Номенклатуры"; 
			Продолжить; 
		ИначеЕсли  стр.колшт = "" Тогда 
			Ош = "Заполните Количество шт Номенклатуры"; 
			Продолжить; 
		//ИначеЕсли  стр.Срок = "" Тогда 
		//	Ош = "Заполните срок годности Номенклатуры"; 
		//	Продолжить; 
		//	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ош;	
КонецФункции


&НаСервере
Функция ПечатьНаСервере(ТаблДокум)
	Обработка = РеквизитФормыВЗначение("Объект"); 
	//Тест = Ложь;
	////	ВК=Обработка.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	//Если ТипМакета = "СТО" Тогда
	//	ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет"); 
	//ИначеЕсли ТипМакета = "ТУ" Тогда
	//	ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетТУ");
	//конецЕсли;
	
	ТаблДокум.Очистить();
	Для Каждого стр из ТЧТовары Цикл
		Если ТипМакета = "Белый" Тогда
			Если стр.Номенклатура.ТипНД = "СТО" Тогда
				ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
			ИначеЕсли стр.Номенклатура.ТипНД = "ТУ" Тогда 
				ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетТУ");
			Иначе
				Прервать;
			КонецЕсли;
		ИначеЕсли ТипМакета = "Черный" Тогда
			Если стр.Номенклатура.ТипНД = "СТО" Тогда
				ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетЧерн");
			ИначеЕсли стр.Номенклатура.ТипНД = "ТУ" Тогда 
				ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетТУЧерн");
			Иначе
				Прервать;
			КонецЕсли;
		КонецЕсли;	
		
		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
		ОбластьШапка.Параметры.Наименование	 = Строка(стр.Наименование)+", " + Строка(стр.Номенклатура.Марка); 
		ТаблДокум.Вывести(ОбластьШапка); 
		
		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
		
		//       
		
		QRСтрока = Строка(стр.Серия);
		Если Не ПустаяСтрока(QRСтрока) Тогда 
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
			
		КонецЕсли;
		ОбластьСтрока.Параметры.Текст1 =стр.УсловияХранения;
		ОбластьСтрока.Параметры.Текст2 =ТекстЭтикетки;
		ОбластьСтрока.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12; 
		ИначеЕсли Д <= 10 И Д >= 9 Тогда
			Срок = 9;
		ИначеЕсли Д <= 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Срок = "Срок годности: "+стр.Номенклатура.СрокГодности+" месяцев";
		ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
		Если стр.СерияЭтикетки = "MUSLER" ИЛИ стр.СерияЭтикетки = "MUSLER PRO" 
			ИЛИ стр.СерияЭтикетки = "ОРЕХОВЫЕ" 
			ИЛИ стр.СерияЭтикетки = "ПОЧТОВАЯ МАРКА" Тогда 
			ОбластьСтрока.Параметры.Адрес = "www.musler.ru"; 
		Иначе
			ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
		КонецЕсли;
		ТаблДокум.Вывести(ОбластьСтрока);
		
		///
		
		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.СерияЭтикетки = стр.СерияЭтикетки;  
		ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
		ОбластьПодвал.Параметры.Смена = "Номер смены: "+стр.НомерСмены;
		ОбластьПодвал.Параметры.НД = Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД);

		// 
		ШК = стр.Штрихкод;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          1197);
		ПараметрыШтрихкода.Вставить("Высота",          421);
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         4); // EAN13
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
		
		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
				//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
		ТаблДокум.Вывести(ОбластьПодвал);
		ТаблДокум.ПолеСверху = 0;
		ТаблДокум.ПолеСнизу = 0;
		ТаблДокум.ПолеСлева  = 0;
		ТаблДокум.ПолеСправа  = 0;
		ТаблДокум.РазмерКолонтитулаСверху   = 0;
		ТаблДокум.РазмерКолонтитулаСнизу   = 0;
		ТаблДокум.Автомасштаб = Истина; 
	КонецЦикла;
	
	//Если Тест = Ложь ТОгда
	//	Для Каждого стр из ТЧТовары Цикл
	//		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
	//		ОбластьШапка.Параметры.Наименование	 = стр.Номенклатура.Наименование; 
	//		ТаблДокум.Вывести(ОбластьШапка); 
	//		
	//		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
	//		
	//		//       
	//		
	//		QRСтрока = Строка(стр.Серия);
	//		Если Не ПустаяСтрока(QRСтрока) Тогда
	//			
	//			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
	//			
	//			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	//				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	//				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
	//				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
	//			Иначе
	//				ТекстСообщения = "Не удалось сформировать QR-код для документа";
	//				#Если Клиент Тогда
	//					Сообщить(ТекстСообщения);
	//				#КонецЕсли
	//			КонецЕсли;
	//			
	//		КонецЕсли;
	//		ОбластьСтрока.Параметры.Текст1 =стр.УсловияХранения;
	//		ОбластьСтрока.Параметры.Текст2 =ТекстЭтикетки;
	//		ОбластьСтрока.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
	//		ОбластьСтрока.Параметры.Срок = "Срок годности: 12 месяцев";
	//		ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
	//		ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
	//		ТаблДокум.Вывести(ОбластьСтрока);
	//		
	//		///
	//		
	//		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
	//		ОбластьПодвал.Параметры.СерияЭтикетки = стр.СерияЭтикетки;  
	//		ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
	//		ОбластьПодвал.Параметры.Смена = "Номер смены: "+стр.НомерСмены;
	//		
	//		// 
	//		ШК = стр.Штрихкод;
	//		ПараметрыШтрихкода = Новый Структура;
	//		ПараметрыШтрихкода.Вставить("Ширина",          1197);
	//		ПараметрыШтрихкода.Вставить("Высота",          421);
	//		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
	//		ПараметрыШтрихкода.Вставить("ТипКода",         4); // EAN13
	//		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
	//		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
	//		
	//		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
	//		//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
	//		ТаблДокум.Вывести(ОбластьПодвал);
	//	КонецЦикла;
	//ИначеЕсли Тест = "КитайШоу" Тогда
	//	//Тест
	//	ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
	//	//ОбластьШапка.Параметры.Наименование	 = стр.Номенклатура.Наименование; 
	//	ТаблДокум.Вывести(ОбластьШапка); 
	//	
	//	ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
	//	
	//	
	//	Для Каждого стр из ТЧТовары Цикл
	//		
	//		ШК = стр.Штрихкод;
	//		ПараметрыШтрихкода = Новый Структура;
	//		ПараметрыШтрихкода.Вставить("Ширина",          112);
	//		ПараметрыШтрихкода.Вставить("Высота",          75);
	//		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
	//		ПараметрыШтрихкода.Вставить("ТипКода",         2); // EAN13
	//		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
	//		ПараметрыШтрихкода.Вставить("РазмерШрифта",    12);
	//		
	//		ОбластьСтрока.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
	//		//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
	//		ТаблДокум.Вывести(ОбластьСтрока);
	//	КонецЦикла;
	//ИначеЕсли Тест = "КитайГофро" Тогда
	//	
	//	ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
	//	
	//	
	//	Для Каждого стр из ТЧТовары Цикл
	//		
	//		ШК = стр.Штрихкод;
	//		ПараметрыШтрихкода = Новый Структура;
	//		ПараметрыШтрихкода.Вставить("Ширина",          112);
	//		ПараметрыШтрихкода.Вставить("Высота",          75);
	//		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
	//		ПараметрыШтрихкода.Вставить("ТипКода",         2); // EAN13
	//		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
	//		ПараметрыШтрихкода.Вставить("РазмерШрифта",    12);
	//		
	//		ОбластьСтрока.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
	//		//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
	//		ТаблДокум.Вывести(ОбластьСтрока);
	//	КонецЦикла;
	//	
	//	
	//	
	//КонецЕсли;
	Возврат ТаблДокум;
КонецФункции  


&НаКлиенте
Процедура ДиалогОшибки(Текст)
 
    Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение",
      ЭтотОбъект);	
 
	//ПоказатьВопрос(Оповещение,
	//    "Нет данного товара",
	//    РежимДиалогаВопрос.ОК,
	//    0, // таймаут в секундах
	//    КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
	//    "Нет данного товара" // (необ.) заголовок
	//); 
	ПоказатьПредупреждение(
        Оповещение,
        "", // предупреждение
        3, // (необ.) таймаут в секундах
        Текст // (необ.) заголовок
    );
 
КонецПроцедуры


Процедура ПослеЗакрытияПредупреждение(Результат, Параметры) Экспорт
	
КонецПроцедуры


&НаСервере
Процедура НайтиШКНаСервере()
	

КонецПроцедуры

&НаСервере
Функция ШКНом(Штрих)
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура
			               |ИЗ
			               |	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК ШтрихкодыНоменклатуры
			               |ГДЕ
			               |	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
			Запрос.УстановитьПараметр("Штрихкод", СокрЛП(Штрих));
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Номенклатура  = Выборка.Номенклатура.Ссылка;
			Иначе
				ШтрихКод  = Справочники.Номенклатура.ПустаяСсылка();
			КонецЕсли;
	
	Возврат Номенклатура;

КонецФункции


&НаКлиенте
Процедура НайтиШК(Команда)  
			ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Ссылка",ШКНом(ПоискШК));
КонецПроцедуры

&НаКлиенте
Процедура ПоискШКОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ПометкаУдаления", Ложь);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Ссылка", Номенкл(Неопределено));
	ПоискШК = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКороб(Команда) 
	printfile = "smartbar1.ym";
	Сервер = "192.168.88.17/vb.htm?page=pate_printctrl&printstart=1&printfile="+printfile+"&login=anony";
	Соединение =  Новый HTTPСоединение(Сервер,,,,,60,,);
	
	Заголовки = Новый Соответствие; 
	Заголовки.Вставить("Content-Type", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9");
	Заголовки.Вставить("Accept-Encoding", "gzip, deflate");
	Заголовки.Вставить("Accept-Language", "zh-CN,zh;q=0.9");
	//
	//
	Запрос = Новый HTTPЗапрос("/",Заголовки);
	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.Получить(Запрос,ФайлРезультата);
	//
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата,КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст(); 
	Если Лев(СтрокаОтветСервера, 2) = "OK" Тогда 
		ЭтаФорма.Элементы.ПечатьКороб.Доступность = Ложь;
		ЭтаФорма.Элементы.ОстановкаПечатьКороб.Доступность = Истина;
		Ош = ПроверкаПолей();
		Если Ош = Ложь Тогда
        	ПечатьКоробКлиент();
		Иначе
			ДиалогОшибки(Ош);
			ОстановкаПечатьКоробКлиент();
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановкаПечатьКороб(Команда)
	ОстановкаПечатьКоробКлиент();
КонецПроцедуры   

&НаКлиенте 
Процедура ПечатьКоробКлиент()
	МасОтправ = ПараметрыПечати();
	//
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON();
	ЗаписьJSON.ОткрытьФайл("C:\Backup\raspis.json", , , ПараметрыЗаписи) ;
	ЗаписатьJSON(ЗаписьJSON, МасОтправ);
	
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, МасОтправ);
	СтрJSON = ЗаписьJSON.Закрыть();  
	
	//
	Сервер = url17+"/printers/";
	Соединение =  Новый HTTPСоединение(Сервер,,,,,60,,);
	
	Заголовки = Новый Соответствие; 
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	
	
	Запрос = Новый HTTPЗапрос("url17/",Заголовки);
	Запрос.УстановитьТелоИзСтроки("data="+СтрJSON); 
	//Рез = Соединение.Получить(Запрос);
	//Куки = Рез.Заголовки.Получить("error"); 
	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.ОтправитьДляОбработки(Запрос,ФайлРезультата);
	
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата,КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст(); 
	
КонецПроцедуры


&НаКлиенте  
Процедура ОстановкаПечатьКоробКлиент()
	Сервер = "192.168.88.17/vb.htm?page=pate_printctrl&printstop=1&login=anony";
	Соединение =  Новый HTTPСоединение(Сервер,,,,,60,,);
	
	Заголовки = Новый Соответствие; 
	Заголовки.Вставить("Content-Type", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9");
	Заголовки.Вставить("Accept-Encoding", "gzip, deflate");
	Заголовки.Вставить("Accept-Language", "zh-CN,zh;q=0.9");
	//
	Запрос = Новый HTTPЗапрос("/",Заголовки);
	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.Получить(Запрос,ФайлРезультата);
	//
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата,КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст(); 
	

		ЭтаФорма.Элементы.ПечатьКороб.Доступность = Истина;
		ЭтаФорма.Элементы.ОстановкаПечатьКороб.Доступность = Ложь;
	
	КонецПроцедуры


&НаКлиенте
Процедура ПечатьШоуБокс(Команда)
	
	printfile = "smartbar1.ym";
	Сервер = "192.168.88.18/vb.htm?page=pate_printctrl&printstart=1&printfile="+printfile+"&login=anony";
	Соединение =  Новый HTTPСоединение(Сервер,,,,,60,,);
	
	Заголовки = Новый Соответствие; 
	Заголовки.Вставить("Content-Type", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9");
	Заголовки.Вставить("Accept-Encoding", "gzip, deflate");
	Заголовки.Вставить("Accept-Language", "zh-CN,zh;q=0.9");
	//
	//
	Запрос = Новый HTTPЗапрос("/",Заголовки);
	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.Получить(Запрос,ФайлРезультата);
	//
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата,КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст(); 
	Если Лев(СтрокаОтветСервера, 2) = "OK" Тогда 
		ЭтаФорма.Элементы.ПечатьШоуБокс.Доступность = Ложь;
		ЭтаФорма.Элементы.ОстановкаПечатьШоу.Доступность = Истина;
		Ош = ПроверкаПолей();
		Если Ош = Ложь Тогда
        	//ПечатьШоуКлиент();
		Иначе
			ДиалогОшибки(Ош);
			ОстановкаПечатьШоуКлиент();
		КонецЕсли;
		
	КонецЕсли;
	


КонецПроцедуры   


&НаКлиенте
Процедура ПечатьШоуКлиент()
	
	МасОтправ = ПараметрыПечати();
	//
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON();
	ЗаписьJSON.ОткрытьФайл("C:\Backup\raspis.json", , , ПараметрыЗаписи) ;
	ЗаписатьJSON(ЗаписьJSON, МасОтправ);
	
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, МасОтправ);
	СтрJSON = ЗаписьJSON.Закрыть();  
	
	//
	Сервер = url17+"/printers/";
	Соединение =  Новый HTTPСоединение(Сервер,,,,,60,,);
	
	Заголовки = Новый Соответствие; 
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	
	
	Запрос = Новый HTTPЗапрос("url18/",Заголовки);
	Запрос.УстановитьТелоИзСтроки("data="+СтрJSON); 
	//Рез = Соединение.Получить(Запрос);
	//Куки = Рез.Заголовки.Получить("error"); 
	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.ОтправитьДляОбработки(Запрос,ФайлРезультата);
	
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата,КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст(); 
	

КонецПроцедуры

&НаКлиенте  
Процедура ОстановкаПечатьШоуКлиент()
	Сервер = "192.168.88.18/vb.htm?page=pate_printctrl&printstop=1&login=anony";
	Соединение =  Новый HTTPСоединение(Сервер,,,,,60,,);
	
	Заголовки = Новый Соответствие; 
	Заголовки.Вставить("Content-Type", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9");
	Заголовки.Вставить("Accept-Encoding", "gzip, deflate");
	Заголовки.Вставить("Accept-Language", "zh-CN,zh;q=0.9");
	//
	Запрос = Новый HTTPЗапрос("/",Заголовки);
	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.Получить(Запрос,ФайлРезультата);
	//
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата,КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст(); 
	

		ЭтаФорма.Элементы.ПечатьШоуБокс.Доступность = Истина;
		ЭтаФорма.Элементы.ОстановкаПечатьШоу.Доступность = Ложь;
	
	КонецПроцедуры

&НаСервере
Функция ПараметрыПечати() 
	
	Пар = Новый Структура;	
	Для Каждого стр из ТЧТовары Цикл  
		
		
		Пар.Вставить("Title",Строка(стр.Наименование));
		Пар.Вставить("Qrcode",Строка(стр.Серия));
		Пар.Вставить("Barcode",Строка(стр.Штрихкод));
		Пар.Вставить("Datav",Строка(Формат(ТекДата, "ДЛФ=Д")));
		Пар.Вставить("Massa",Строка(Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )"));
		// 
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12;
		ИначеЕсли Д < 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		Пар.Вставить("Srock",Строка(Срок));
        //
		Пар.Вставить("Typeprod",Строка(стр.СерияЭтикетки));
		Пар.Вставить("Smena",Строка(стр.НомерСмены));
		Пар.Вставить("TySto",Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД));
		
	КонецЦикла;
	
	Возврат Пар;

КонецФункции

	
	
	
&НаСервере
Функция ПерекодированиеСтроки(СтрокаДляПерекодирования, НужнаяКодировка = "windows-1251") Экспорт

   ПерекодированныйТекст = Новый ТекстовыйДокумент;
   ПерекодированныйТекст.УстановитьТипФайла(НужнаяКодировка);
   ПерекодированныйТекст.УстановитьТекст(СтрокаДляПерекодирования);

   // Возвращает перекодированную строку
   Возврат ПерекодированныйТекст.ПолучитьТекст();

КонецФункции


&НаКлиенте
Процедура ОстановкаПечатьШоу(Команда)
	ОстановкаПечатьШоуКлиент();
КонецПроцедуры


&НаКлиенте
Процедура ЭтикеткаШоу(Команда)
		Ош = ПроверкаПолей();
	Если Ош = Ложь Тогда
		ТаблДокум = Новый  ТабличныйДокумент;
		ТаблДокум = ПечатьНаСервереШоуПринт(ТаблДокум);
		ТаблДокум.Показать("Печать документа");
	Иначе
		ДиалогОшибки(Ош);
	КонецЕсли;

КонецПроцедуры 

&НаСервере
Функция ПечатьНаСервереШоуПринт(ТаблДокум)
	Обработка = РеквизитФормыВЗначение("Объект"); 
	
	ТаблДокум.Очистить();
	Для Каждого стр из ТЧТовары Цикл
		ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетШоу");	
		
		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
		ОбластьШапка.Параметры.Наименование	 = Строка(стр.Наименование)+", " + Строка(стр.Номенклатура.Марка);  
		ТаблДокум.Вывести(ОбластьШапка); 
		
		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
		
		//       
		
		QRСтрока = Строка(стр.Серия);
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
			
		КонецЕсли;
		ОбластьСтрока.Параметры.Текст1 =стр.УсловияХранения;
		ОбластьСтрока.Параметры.Текст2 =ТекстЭтикетки;
		ОбластьСтрока.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12;
		ИначеЕсли Д < 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Срок = "Срок годности: "+стр.Номенклатура.СрокГодности+" месяцев";
		ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
		ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
		ТаблДокум.Вывести(ОбластьСтрока);
		
		///
		
		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.СерияЭтикетки = стр.СерияЭтикетки;  
		ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
		ОбластьПодвал.Параметры.Смена = "Номер смены: "+стр.НомерСмены;
		ОбластьПодвал.Параметры.НД = Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД);

		// 
		ШК = стр.Штрихкод;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          1197);
		ПараметрыШтрихкода.Вставить("Высота",          421);
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         4); // EAN13
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
		
		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
				//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
		ТаблДокум.Вывести(ОбластьПодвал);
		ТаблДокум.ПолеСверху = 0;
		ТаблДокум.ПолеСнизу = 0;
		ТаблДокум.ПолеСлева  = 0;
		ТаблДокум.ПолеСправа  = 0;
		ТаблДокум.РазмерКолонтитулаСверху   = 0;
		ТаблДокум.РазмерКолонтитулаСнизу   = 0;
		ТаблДокум.Автомасштаб = Истина;  
ТаблДокум.РазмерСтраницы="A4";//нестандартный размер бумаги
ТаблДокум.ВысотаСтраницы=71;
ТаблДокум.ШиринаСтраницы=100;		
	КонецЦикла;
	
	Возврат ТаблДокум;
КонецФункции  

&НаКлиенте
Процедура ПечатьАнглийский(Команда)
		Ош = ПроверкаПолей();
	Если Ош = Ложь Тогда
		ТаблДокум = Новый  ТабличныйДокумент;
		ТаблДокум = ПечатьНаСервереАнг(ТаблДокум);
		ТаблДокум.Показать("Печать документа");
	Иначе
		ДиалогОшибки(Ош);
	КонецЕсли;

КонецПроцедуры 

&НаСервере
Функция ПечатьНаСервереАнг(ТаблДокум)
	Обработка = РеквизитФормыВЗначение("Объект"); 
	
	ТаблДокум.Очистить();
	Для Каждого стр из ТЧТовары Цикл
		ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетАнг");	
		
		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
			К  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "НаименованиеАнглийский_efcc7b5950d6487ea73864d0ec5b4607");
			Кар = 	УправлениеСвойствами.ЗначениеСвойства(стр.Номенклатура, К);
		
		ОбластьШапка.Параметры.Наименование	 = Кар; 
		ТаблДокум.Вывести(ОбластьШапка); 
		                                                       
		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
		
		//       
		
		QRСтрока = Строка(стр.Серия);
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
			
		КонецЕсли;
		ОбластьСтрока.Параметры.Текст1 ="Manufacturer: JSC Sobinsky Khlebokombinat, 3 Lenina St., Sobinka, Sobinsky District, Vladimir Oblast, 601204, Russia, tel.: +7 (499) 322-48-37. Storage conditions: the product is to be stored in a place protected from direct sunlight, at a temperature below 25°С and relative air humidity below 75%. It is not recommended to store the product after the packaging has been opened.";
			К  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "СоставАнглийский_9a15ceea31b144798856d9b7b9c72f0f");
			Состав = 	УправлениеСвойствами.ЗначениеСвойства(стр.Номенклатура, К);
		ОбластьСтрока.Параметры.Текст2 =Состав; 
			К  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "КоличествоАнглийский_3d86f0b808864b1698b29e88dcf97818");
			Масса = 	УправлениеСвойствами.ЗначениеСвойства(стр.Номенклатура, К);
		//ОбластьСтрока.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
		ОбластьСтрока.Параметры.Масса =  Масса;
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12; 
		ИначеЕсли Д <= 10 И Д >= 9 Тогда
			Срок = 9;
		ИначеЕсли Д <= 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Срок = "Shelf life: "+стр.Номенклатура.СрокГодности+" MONTHS.";
		ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
		Если стр.СерияЭтикетки = "MUSLER" ИЛИ стр.СерияЭтикетки = "MUSLER PRO" 
			ИЛИ стр.СерияЭтикетки = "ОРЕХОВЫЕ" 
			ИЛИ стр.СерияЭтикетки = "ПОЧТОВАЯ МАРКА" Тогда 
			ОбластьСтрока.Параметры.Адрес = "www.musler.ru"; 
		Иначе
			ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
		КонецЕсли;
		ТаблДокум.Вывести(ОбластьСтрока);
		
		///
		
		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.СерияЭтикетки = стр.СерияЭтикетки;  
		ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
		ОбластьПодвал.Параметры.Смена = "Manufactured in Russia";//"Shift number: "+стр.НомерСмены;
		ОбластьПодвал.Параметры.НД = Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД);

		// 
		ШК = стр.Штрихкод;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          1197);
		ПараметрыШтрихкода.Вставить("Высота",          421);
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         4); // EAN13
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
		
		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
				//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
		ТаблДокум.Вывести(ОбластьПодвал);
		ТаблДокум.ПолеСверху = 0;
		ТаблДокум.ПолеСнизу = 0;
		ТаблДокум.ПолеСлева  = 0;
		ТаблДокум.ПолеСправа  = 0;
		ТаблДокум.РазмерКолонтитулаСверху   = 0;
		ТаблДокум.РазмерКолонтитулаСнизу   = 0;
		ТаблДокум.Автомасштаб = Истина; 
	КонецЦикла;
	
	Возврат ТаблДокум;
КонецФункции  

&НаКлиенте
Процедура ПечатьЭмираты(Команда)
			Ош = ПроверкаПолей();
	Если Ош = Ложь Тогда
		ТаблДокум = Новый  ТабличныйДокумент;
		ТаблДокум = ПечатьНаСервереЭмират(ТаблДокум);
		ТаблДокум.Показать("Печать документа");
	Иначе
		ДиалогОшибки(Ош);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервереЭмират(ТаблДокум)
	Обработка = РеквизитФормыВЗначение("Объект"); 
	
	ТаблДокум.Очистить();
	Для Каждого стр из ТЧТовары Цикл
		ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетЭм");	
		
		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
			К  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "НаименованиеАрабский_0c933339466d4c39b56267c85e5f3deb");
			Кар = 	УправлениеСвойствами.ЗначениеСвойства(стр.Номенклатура, К);
		
		ОбластьШапка.Параметры.Наименование	 = Кар; 
		ТаблДокум.Вывести(ОбластьШапка); 
		                                                       
		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
		
		//       
		
		QRСтрока = Строка(стр.Серия);
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
			
		КонецЕсли;
			К  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "СоставАрабский_1d1f8ab527d44fc399d76e690f420501");
			Состав = 	УправлениеСвойствами.ЗначениеСвойства(стр.Номенклатура, К);
			ОбластьСтрока.Параметры.Текст1 =Состав;

			ОбластьСтрока.Параметры.Текст2 ="سوبينسكي خليبوكومبينا ، 601204 ، روسيا ، منطقة فلاديمير ، مقاطعة سوبنسكي ، سوبينكا ، شارع لينينا ، 3 ، هاتف:  тел.: +7 (499) 322-48-37	"; 
			К  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "КоличествоАрабский_d40395403e2d4f2ea006a0c66d9f37e4");
			Масса = 	УправлениеСвойствами.ЗначениеСвойства(стр.Номенклатура, К);
		//ОбластьСтрока.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
		ОбластьСтрока.Параметры.Масса =  Масса;
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12; 
		ИначеЕсли Д <= 10 И Д >= 9 Тогда
			Срок = 9;
		ИначеЕсли Д <= 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Срок = Строка(стр.Номенклатура.СрокГодности)+" :"+"قم التحول";
		ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
		Если стр.СерияЭтикетки = "MUSLER" ИЛИ стр.СерияЭтикетки = "MUSLER PRO" 
			ИЛИ стр.СерияЭтикетки = "ОРЕХОВЫЕ" 
			ИЛИ стр.СерияЭтикетки = "ПОЧТОВАЯ МАРКА" Тогда 
			ОбластьСтрока.Параметры.Адрес = "www.musler.ru"; 
		Иначе
			ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
		КонецЕсли;
		ТаблДокум.Вывести(ОбластьСтрока); 
		
		///
		
		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.СерияЭтикетки = стр.СерияЭтикетки;  
		//ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
		ОбластьПодвал.Параметры.Смена = "Shift number: "+стр.НомерСмены;
		ОбластьПодвал.Параметры.НД = Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД);

		// 
		ШК = стр.Штрихкод;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          1197);
		ПараметрыШтрихкода.Вставить("Высота",          421);
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         4); // EAN13
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
		
		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
				//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
		ТаблДокум.Вывести(ОбластьПодвал);
		ТаблДокум.ПолеСверху = 0;
		ТаблДокум.ПолеСнизу = 0;
		ТаблДокум.ПолеСлева  = 0;
		ТаблДокум.ПолеСправа  = 0;
		ТаблДокум.РазмерКолонтитулаСверху   = 0;
		ТаблДокум.РазмерКолонтитулаСнизу   = 0;
		ТаблДокум.Автомасштаб = Истина; 
	КонецЦикла;
	
	Возврат ТаблДокум;
КонецФункции 

&НаКлиенте
Процедура ПечатьБеларусский(Команда)
				Ош = ПроверкаПолей();
	Если Ош = Ложь Тогда
		ТаблДокум = Новый  ТабличныйДокумент;
		ТаблДокум = ПечатьНаСервереБел(ТаблДокум);
		ТаблДокум.Показать("Печать документа");
	Иначе
		ДиалогОшибки(Ош);
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция ПечатьНаСервереБел(ТаблДокум)  
	Обработка = РеквизитФормыВЗначение("Объект"); 
	ТаблДокум.Очистить();
	Для Каждого стр из ТЧТовары Цикл
		ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетБел");	
		
		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
		ОбластьШапка.Параметры.Наименование	 = стр.Наименование; 
		ТаблДокум.Вывести(ОбластьШапка); 
		
		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
		
		//       
		
		QRСтрока = Строка(стр.Серия);
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
			
		КонецЕсли;
		ОбластьСтрока.Параметры.Текст1 =стр.УсловияХранения;
		ОбластьСтрока.Параметры.Текст2 =ТекстЭтикетки;
		ОбластьСтрока.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12; 
		ИначеЕсли Д <= 10 И Д >= 9 Тогда
			Срок = 9;
		ИначеЕсли Д <= 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		
		//ОбластьСтрока.Параметры.Срок = "Срок годности: "+стр.Номенклатура.СрокГодности+" месяцев";
		//ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
		//Если стр.СерияЭтикетки = "MUSLER" ИЛИ стр.СерияЭтикетки = "MUSLER PRO" 
		//	ИЛИ стр.СерияЭтикетки = "ОРЕХОВЫЕ" 
		//	ИЛИ стр.СерияЭтикетки = "ПОЧТОВАЯ МАРКА" Тогда 
		//	ОбластьСтрока.Параметры.Адрес = "www.musler.ru"; 
		//Иначе
		//	ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
		//КонецЕсли; 
		ОбластьСтрока.Параметры.Текст4 = "Произведен и упакован по заказу ООО 'ЕВРОТОРГ'";
		ТаблДокум.Вывести(ОбластьСтрока);
		
		///
		
		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Текст3 = "Поставщик в Республике Беларусь: ООО ""ЕВРОТОРГ"", "+символы.пс+
										 "Республика Беларусь, 220099, г.Минск,"+символы.пс+
										"ул.Казинца, дом 52а, комната 22,"+символы.пс+
										"тел.: +375 44 7888 880";  
		ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
		ОбластьПодвал.Параметры.Смена = "Номер смены: "+стр.НомерСмены;
		ОбластьПодвал.Параметры.НД = Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД);

		// 
		ШК = стр.Штрихкод;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          1197);
		ПараметрыШтрихкода.Вставить("Высота",          421);
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         4); // EAN13
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
		
		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
				//ОбластьПодвал.Рисунки["ШтрихКод"].Картинка = "";
		ТаблДокум.Вывести(ОбластьПодвал);
		ТаблДокум.ПолеСверху = 0;
		ТаблДокум.ПолеСнизу = 0;
		ТаблДокум.ПолеСлева  = 0;
		ТаблДокум.ПолеСправа  = 0;
		ТаблДокум.РазмерКолонтитулаСверху   = 0;
		ТаблДокум.РазмерКолонтитулаСнизу   = 0;
		ТаблДокум.Автомасштаб = Истина; 
	КонецЦикла;
	Возврат ТаблДокум;
КонецФункции  


&НаКлиенте
Процедура ПечатьСпортМастер(Команда)
	Ош = ПроверкаПолей();
	Если Ош = Ложь Тогда
		ТаблДокум = Новый  ТабличныйДокумент;
		ТаблДокум = ПечатьНаСервереСпортМастер(ТаблДокум);
		ТаблДокум.Показать("Печать документа");
	Иначе
		ДиалогОшибки(Ош);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПечатьНаСервереСпортМастер(ТаблДокум)
	Обработка = РеквизитФормыВЗначение("Объект"); 
	
	ТаблДокум.Очистить();
	Для Каждого стр из ТЧТовары Цикл
		ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетСпортМастер");	
		
		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
		ОбластьШапка.Параметры.Наименование	 = Строка(стр.Наименование);  
		ТаблДокум.Вывести(ОбластьШапка); 
		
		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
		
		//       
		
		ОбластьСтрока.Параметры.Текст1 =стр.УсловияХранения; 
		QRСтрока = Строка(стр.Серия);
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
			
		КонецЕсли;
		
		//ОбластьСтрока.Параметры.Текст2 =ТекстЭтикетки;
		//
		//ОбластьСтрока.Параметры.Срок = "Срок годности: "+стр.Номенклатура.СрокГодности+" месяцев";
		//ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
		//ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
		ТаблДокум.Вывести(ОбластьСтрока);
		
		///
		
		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
		//ОбластьПодвал.Параметры.СерияЭтикетки = стр.СерияЭтикетки;  
		ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
		ОбластьПодвал.Параметры.Смена = "Номер смены: "+стр.НомерСмены; 
		ОбластьПодвал.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12;
		ИначеЕсли Д < 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		
		ОбластьПодвал.Параметры.НД = Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД);

		//// 
		ШК = стр.Штрихкод;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          1197);
		ПараметрыШтрихкода.Вставить("Высота",          421);
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         1); // EAN13
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
		
		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);

		ТаблДокум.Вывести(ОбластьПодвал);
		ТаблДокум.ПолеСверху = 0;
		ТаблДокум.ПолеСнизу = 0;
		ТаблДокум.ПолеСлева  = 0;
		ТаблДокум.ПолеСправа  = 0;
		ТаблДокум.РазмерКолонтитулаСверху   = 0;
		ТаблДокум.РазмерКолонтитулаСнизу   = 0;
		ТаблДокум.Автомасштаб = Истина;  
ТаблДокум.РазмерСтраницы="A4";//нестандартный размер бумаги
ТаблДокум.ВысотаСтраницы=71;
ТаблДокум.ШиринаСтраницы=100;		
	КонецЦикла;
	
	Возврат ТаблДокум;
КонецФункции  


&НаКлиенте
Процедура ПечатьСпортМастерМаркиратор(Команда)
	Ош = ПроверкаПолей();
	Если Ош = Ложь Тогда
		ТаблДокум = Новый  ТабличныйДокумент;
		ТаблДокум = ПечатьНаСервереСпортМастерМарткиратор(ТаблДокум);
		ТаблДокум.Показать("Печать документа");
	Иначе
		ДиалогОшибки(Ош);
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция ПечатьНаСервереСпортМастерМарткиратор(ТаблДокум)
	Обработка = РеквизитФормыВЗначение("Объект"); 
	
	ТаблДокум.Очистить();
	Для Каждого стр из ТЧТовары Цикл
		ТипМакет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетСпортМастерМаркератор");	
		
		ОбластьШапка = ТипМакет.ПолучитьОбласть("Шапка"); 
		ОбластьШапка.Параметры.Наименование	 = Строка(стр.Наименование);  
		ТаблДокум.Вывести(ОбластьШапка); 
		
		ОбластьСтрока = ТипМакет.ПолучитьОбласть("Строка"); 
		
		//       
		
		ОбластьСтрока.Параметры.Текст1 =стр.УсловияХранения; 
		QRСтрока = Строка(стр.Серия);
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				//ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
			
		КонецЕсли;
		
		//ОбластьСтрока.Параметры.Текст2 =ТекстЭтикетки;
		//
		//ОбластьСтрока.Параметры.Срок = "Срок годности: "+стр.Номенклатура.СрокГодности+" месяцев";
		//ОбластьСтрока.Параметры.Телефон = "+7 (499) 322-48-37";
		//ОбластьСтрока.Параметры.Адрес = "www.smartbar.ru"; 
		ТаблДокум.Вывести(ОбластьСтрока);
		
		///
		
		ОбластьПодвал = ТипМакет.ПолучитьОбласть("Подвал");
		//ОбластьПодвал.Параметры.СерияЭтикетки = стр.СерияЭтикетки;  
		ОбластьПодвал.Параметры.Дата = Формат(ТекДата, "ДЛФ=Д");
		ОбластьПодвал.Параметры.Смена = "Номер смены: "+стр.НомерСмены; 
		ОбластьПодвал.Параметры.Масса = "Масса нетто: " + Строка(стр.Нетто) + " г. (" +Строка(стр.ВариантУпаковки.Числитель) + " шт по "+ Строка(стр.весшт) + " г. )";
		Д = Цел(((стр.Серия.ГоденДо - ТекущаяДата())/86400)/30);
		Срок = 12;
		Если Д > 12 Тогда
			Срок = 12;
		ИначеЕсли Д < 8 Тогда
			Срок = 8;
		Иначе
			Срок = 12;
		КонецЕсли;
		
		ОбластьПодвал.Параметры.НД = Строка(стр.Номенклатура.ТипНД) +" "+ Строка(стр.Номенклатура.ЗначениеНД);

		//// 
		ШК = стр.Штрихкод;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          1197);
		ПараметрыШтрихкода.Вставить("Высота",          421);
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(стр.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         1); // EAN13
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    56);
		
		ОбластьПодвал.Рисунки.ШтрихКод.Картинка= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);

		ТаблДокум.Вывести(ОбластьПодвал);
		ТаблДокум.ПолеСверху = 0;
		ТаблДокум.ПолеСнизу = 0;
		ТаблДокум.ПолеСлева  = 0;
		ТаблДокум.ПолеСправа  = 0;
		ТаблДокум.РазмерКолонтитулаСверху   = 0;
		ТаблДокум.РазмерКолонтитулаСнизу   = 0;
		ТаблДокум.Автомасштаб = Истина;  
ТаблДокум.РазмерСтраницы="A4";//нестандартный размер бумаги
ТаблДокум.ВысотаСтраницы=71;
ТаблДокум.ШиринаСтраницы=100;		
	КонецЦикла;
	
	Возврат ТаблДокум;
КонецФункции  


&НаКлиенте
Процедура СЗЗаданиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СЗЗаданиеОбработкаВыбораНаСервере(Элемент.ТекущиеДанные.ЗаказНаПроизводств,Элемент.ТекущиеДанные.Номенклатура,Элемент.ТекущиеДанные.Период,Элемент.ТекущиеДанные.Серия);
КонецПроцедуры

&НаСервере
Процедура СЗЗаданиеОбработкаВыбораНаСервере(ДЗПроизв,ДЗНоменклатура,ДЗПериод,ДЗСерия)
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.СтраницаПечать;	
	
	ЭтаФорма.ТЧТовары.Очистить();
	
	Статус = Новый Массив;
	Статус.Добавить("Создан");
	
	//Получаем регистр
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ЗаданиеНаПечатьЭтикеток.Номенклатура КАК Номенклатура,
	|	СХК_ЗаданиеНаПечатьЭтикеток.Серия КАК Серия,
	|	СХК_ЗаданиеНаПечатьЭтикеток.НомерСмены КАК НомерСмены,
	|	СХК_ЗаданиеНаПечатьЭтикеток.Вложение КАК Вложение,
	|	СХК_ЗаданиеНаПечатьЭтикеток.ТипЭтикетки КАК ТипЭтикетки,
	|	СХК_ЗаданиеНаПечатьЭтикеток.КолЭтикеток КАК КолЭтикеток,
	|	СХК_ЗаданиеНаПечатьЭтикеток.ДатаПечати КАК ДатаПечати
	|ИЗ
	|	РегистрСведений.СХК_ЗаданиеНаПечатьЭтикеток КАК СХК_ЗаданиеНаПечатьЭтикеток
	|ГДЕ
	|	СХК_ЗаданиеНаПечатьЭтикеток.ЗаказНаПроизводств = &ЗаказНаПроизводств
	|	И СХК_ЗаданиеНаПечатьЭтикеток.Номенклатура = &Номенклатура
	|	И СХК_ЗаданиеНаПечатьЭтикеток.Серия = &Серия
	|	И СХК_ЗаданиеНаПечатьЭтикеток.Период = &Период
	|	И СХК_ЗаданиеНаПечатьЭтикеток.Статус В (&Статус)"; 
	
	Запрос.УстановитьПараметр("ЗаказНаПроизводств",ДЗПроизв);
	Запрос.УстановитьПараметр("Номенклатура",ДЗНоменклатура);
	Запрос.УстановитьПараметр("Период",ДЗПериод);
	Запрос.УстановитьПараметр("Серия",ДЗСерия);
	Запрос.УстановитьПараметр("Статус",Статус);
	
	Рез = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Рез.Выгрузить(СпособОбхода); 
	
	Если ТабЗнач.Количество()>=1 Тогда 
		ЭтаФорма.ТекДата = ТабЗнач[0].ДатаПечати ;
		ЭтаФорма.Смена = ТабЗнач[0].НомерСмены ; 
		
		
		//	
		Спр = ТабЗнач[0].Номенклатура.ПолучитьОбъект();
		НовСтрока = ТЧТовары.Добавить();
		НовСтрока.КолЭтикеток =  ТабЗнач[0].КолЭтикеток ;
		НовСтрока.Номенклатура = Спр.Ссылка;
		НовСтрока.Серия = ТабЗнач[0].Серия;
		Для Каждого допРекв из Спр.ДополнительныеРеквизиты Цикл   
			Если допРекв.Свойство.ИдентификаторДляФормул ="НаименованиеДляЭтикетки" Тогда 
				Если допРекв.Значение <> "" Тогда
					НовСтрока.Наименование = допРекв.Значение;
				Иначе
					НовСтрока.Наименование = Спр.НаименованиеПолное;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
		КонецЦикла; 	
		
		НовСтрока.НомерСмены = ТабЗнач[0].НомерСмены;
		
		НовСтрока.Штрихкод = ШК(Спр);
		
		Для Каждого допРекв из Спр.ДополнительныеРеквизиты Цикл   
			Если допРекв.Свойство.Наименование = "Условия хранения" Тогда
				НовСтрока.УсловияХранения = допРекв.Значение ;	
			ИначеЕсли допРекв.Свойство.ИдентификаторДляФормул ="ТоварнаяКатегория" Тогда
				НовСтрока.СерияЭтикетки = допРекв.Значение;
			КонецЕсли;
		КонецЦикла; 	
		
		Если Спр.ИспользоватьУпаковки = Истина Тогда
			весшт = Спр.ВесЧислитель; 
			колшт = Спр.КоэффициентЕдиницыДляОтчетов;  
			весОднойШт = весшт  * 1000; 
		Иначе
			весшт = 1;
			колшт =1 ;
			весОднойШт = 1;
			
		КонецЕсли;
		//	
		
		НовСтрока.ВариантУпаковки = ТабЗнач[0].Вложение; 
		НовСтрока.КолШт = колшт;
		НовСтрока.весшт = весОднойШт;
		//
		ВариантУпаковки = ?(ТабЗнач[0].Вложение.Числитель > 0, ТабЗнач[0].Вложение.Числитель,  1) ;
		НовСтрока.Нетто =  весОднойШт * ВариантУпаковки;
		
		//
		СписокУпаковок.Параметры.УстановитьЗначениеПараметра("СсылкаНоменклатура", ТабЗнач[0].Номенклатура);
		
		ЗапросШК = Новый Запрос;
		ЗапросШК.Текст = "ВЫБРАТЬ
		|	Расш1_РегистрШтрихЭтикетка.Штрихкод КАК Штрихкод,
		|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура,
		|	Расш1_РегистрШтрихЭтикетка.Характеристика КАК Характеристика,
		|	Расш1_РегистрШтрихЭтикетка.Упаковка КАК Упаковка
		|ИЗ
		|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
		|ГДЕ
		|	Расш1_РегистрШтрихЭтикетка.Номенклатура = &Номенклатура
		|	И Расш1_РегистрШтрихЭтикетка.Упаковка = &Упаковка"; 
		
		ЗапросШК.УстановитьПараметр("Номенклатура",ТабЗнач[0].Номенклатура);
		ЗапросШК.УстановитьПараметр("Упаковка",ТабЗнач[0].Вложение);
		РезШК = ЗапросШК.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТШк = РезШК.Выгрузить(СпособОбхода);
		Если ТШк.Количество()>=1 Тогда
			НовСтрока.Штрихкод = ТШк[0].Штрихкод;
		КонецЕсли;
		
		ЭтаФорма.Элементы.ТЧТовары.ТекущаяСтрока = НовСтрока.ПолучитьИдентификатор();  
	Иначе
		Сообщить("Задание было выполнено или отменено");
	КонецЕсли;
	//	
	
	
КонецПроцедуры

&НаСервере
Процедура СменитьСтатусНаСервере(ДокПроизводства,ДокНоменклатура,ДокСерия,ДокПериод)
	НаборЗаписей = РегистрыСведений.СХК_ЗаданиеНаПечатьЭтикеток.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДокПериод);
	НаборЗаписей.Отбор.ЗаказНаПроизводств.Установить(ДокПроизводства);
	НаборЗаписей.Отбор.Номенклатура.Установить(ДокНоменклатура);
	НаборЗаписей.Отбор.Серия.Установить(ДокСерия); 
	НаборЗаписей.Прочитать(); 
	Если НаборЗаписей.Количество() = 1 Тогда
		З = НаборЗаписей[0];
		Статус = З.Статус;
		З.Статус = "Выполнено";
		Пользователь = З.Пользователь;
		ЗаказНаПроизводств = З.ЗаказНаПроизводств;
		Номенклатура = З.Номенклатура;
	КонецЕсли;
	
	Попытка 
		НаборЗаписей.Записать(); 
		НаборЗаписейП = РегистрыСведений.НапоминанияПользователя.СоздатьМенеджерЗаписи();
		НаборЗаписейП.Пользователь =  Пользователь;
		НаборЗаписейП.ВремяСобытия =  ТекущаяДата() + 600;
		НаборЗаписейП.Источник =  ЗаказНаПроизводств;
		НаборЗаписейП.ИнтервалВремениНапоминания =  0;
		НаборЗаписейП.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя ;
	    НаборЗаписейП.Описание = "Задание на печать " + Строка(Номенклатура) + "Выполнено" ; 
		НаборЗаписейП.Записать();

		
	Исключение
		Сообщить("Не удалось изменить статус!")
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьСтатус(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтотОбъект);	
 
   		 ПоказатьВопрос(Оповещение,
        	"Задание выполнено?",
        	РежимДиалогаВопрос.ДаНет,
        	0, // таймаут в секундах
        	КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
        	"Задание" // (необ.) заголовок
    	);    		

КонецПроцедуры   

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
		
		СменитьСтатусНаСервере(Элементы.СЗЗадание.ТекущиеДанные.ЗаказНаПроизводств,Элементы.СЗЗадание.ТекущиеДанные.Номенклатура,Элементы.СЗЗадание.ТекущиеДанные.Серия,Элементы.СЗЗадание.ТекущиеДанные.Период);
        ЭтаФорма.Элементы.СЗЗадание.Обновить();  
		
	КонецЕсли;	
 
КонецПроцедуры

&НаСервере
Процедура ВсеЗаданияПриИзмененииНаСервере() 
	Статус = Новый Массив;
	Статус.Добавить("Создан");
 	Если ВсеЗадания = Истина Тогда
		Статус.Добавить("Отменен");
		Статус.Добавить("Выполнено"); 
	КонецЕсли;  
	
    СЗЗадание.Параметры.УстановитьЗначениеПараметра("Статус",Статус);
	
КонецПроцедуры 

&НаСервере
Процедура ИзменитьДоступностьКнопок() 
    ТПросмотр = Истина;
	Если ВсеЗадания = Истина Тогда
		ТПросмотр = Ложь;
	КонецЕсли;  
	ЭтаФорма.Элементы.СЗЗаданиеСменитьСтатус.Видимость = ТПросмотр;
	ЭтаФорма.Элементы.СЗЗаданиеОтменитьЗадание.Видимость = ТПросмотр;
	
 	
КонецПроцедуры

&НаКлиенте
Процедура ВсеЗаданияПриИзменении(Элемент)
	ВсеЗаданияПриИзмененииНаСервере();
	ЭтаФорма.Элементы.СЗЗадание.Обновить();
	ИзменитьДоступностьКнопок();
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗаданиеНаСервере(ДокПроизводства,ДокНоменклатура,ДокСерия,ДокПериод)
	НаборЗаписей = РегистрыСведений.СХК_ЗаданиеНаПечатьЭтикеток.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДокПериод);
	НаборЗаписей.Отбор.ЗаказНаПроизводств.Установить(ДокПроизводства);
	НаборЗаписей.Отбор.Номенклатура.Установить(ДокНоменклатура);
	НаборЗаписей.Отбор.Серия.Установить(ДокСерия); 
	НаборЗаписей.Прочитать(); 
	Если НаборЗаписей.Количество() = 1 Тогда
		З = НаборЗаписей[0];
		Статус = З.Статус;
		З.Статус = "Отменено";
		Пользователь = З.Пользователь;
		ЗаказНаПроизводств = З.ЗаказНаПроизводств;
		Номенклатура = З.Номенклатура;
	КонецЕсли;
	
	Попытка 
		НаборЗаписей.Записать(); 
		НаборЗаписейП = РегистрыСведений.НапоминанияПользователя.СоздатьМенеджерЗаписи();
		НаборЗаписейП.Пользователь =  Пользователь;
		НаборЗаписейП.ВремяСобытия =  ТекущаяДата() + 600; 
		НаборЗаписейП.ИнтервалВремениНапоминания =  0;
		НаборЗаписейП.Источник =  ЗаказНаПроизводств;
		НаборЗаписейП.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя ;
	    НаборЗаписейП.Описание = "Задание на печать " + Строка(Номенклатура) + "Отменено" ; 
		НаборЗаписейП.Записать();
		
	Исключение
		Сообщить("Не удалось изменить статус!")
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОтмена(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОтменитьЗаданиеНаСервере(Элементы.СЗЗадание.ТекущиеДанные.ЗаказНаПроизводств,Элементы.СЗЗадание.ТекущиеДанные.Номенклатура,Элементы.СЗЗадание.ТекущиеДанные.Серия,Элементы.СЗЗадание.ТекущиеДанные.Период);
        ЭтаФорма.Элементы.СЗЗадание.Обновить();
	КонецЕсли;	
 
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьЗадание(Команда) 
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОтмена",ЭтотОбъект);	
 
   		 ПоказатьВопрос(Оповещение,
        	"Отменить задание?",
        	РежимДиалогаВопрос.ДаНет,
        	0, // таймаут в секундах
        	КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
        	"Задание" // (необ.) заголовок
    	);    		

	КонецПроцедуры

	
	



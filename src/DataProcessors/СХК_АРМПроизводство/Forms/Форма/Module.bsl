

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период  = ТекущаяДата();
	ВидНоменклатуры = "ГП";
	ЗаполнитьПомещенияПриОткрытии();	
	//Без параметра, даже пустого, список выдаст ошибку и будет прав 
		
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала",НачалоДня(Период));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",КонецДня(Период));
	Список.Параметры.УстановитьЗначениеПараметра("ОсновноеИзделиеНоменклатура",Справочники.Номенклатура.НайтиПоКоду("00000000007"));
	Список.Параметры.УстановитьЗначениеПараметра("СХК_Этаж",Справочники.СкладскиеПомещения.НайтиПоНаименованию("Цех Мюсли 1 этаж"));
	//Список.Параметры.УстановитьЗначениеПараметра("ОсновноеИзделиеНоменклатура",Справочники.Номенклатура.НайтиПоКоду("ЦБ-00006040"));
	ЭтаФорма.Помещение = Справочники.СкладскиеПомещения.НайтиПоНаименованию("Цех Мюсли 1 этаж");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПомещенияПриОткрытии() 
	Объект.СХК_Склад = Справочники.Склады.НайтиПоНаименованию("ЦМ Цех Мюсли");

	Если Объект.СХК_Этаж.Пустая() = Истина Тогда
		УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СХК_Склад,СХК_Этаж",Объект.СХК_Склад,Объект.СХК_Этаж));
	КонецЕсли;
	Объект.СХК_Этаж = Справочники.СкладскиеПомещения.НайтиПоНаименованию("Цех Мюсли 1 этаж");
	
КонецПроцедуры

			 
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОчиститьПоля();

	Если ЭтаФорма.ВидНоменклатуры = "ГП" Тогда 
		ЭтаФорма.СкладПолучатель = "";  
		ЭтаФорма.СкладВыбор = "";
		СтатусЭтапа = ПолучитьИНформациюПоЭтапу(Элемент.ТекущиеДанные.Ссылка);
		Если СтатусЭтапа = Истина Тогда 
			ЭтаФорма.Элементы.ГруппаГП.Видимость = Истина;
			ЭтаФорма.Элементы.ГруппаПФ.Видимость = Ложь;
			ЗаполнитьИнформациюПоЭтапу(Элемент.ТекущиеДанные.Ссылка);
		Иначе
			Если СтатусЭтапа = "Статус" Тогда
				Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаСтатус",ЭтотОбъект);
				ПоказатьВопрос(Оповещение,
				"Начать этап?",
				РежимДиалогаВопрос.ДаНет,
				0, // таймаут в секундах
				КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
				"" // (необ.) заголовок
				); 
			ИначеЕсли СтатусЭтапа = "КонтрольМатериалов" Тогда
				Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаКонтрольМатериалов",ЭтотОбъект);
				ПоказатьВопрос(Оповещение,
				"Сформировать передачу материалов в производство",
				РежимДиалогаВопрос.ДаНет,
				0, // таймаут в секундах
				КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
				"" // (необ.) заголовок
				); 
				
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		
		Элементы.Список.Обновить();
		ЭтаФорма.Элементы.ГруппаГП.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаПФ.Видимость = Истина;
		ЗаполнитьИнформациюПоЭтапуПФ(Элемент.ТекущиеДанные.Ссылка);
		
	КонецЕсли;			
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаКонтрольМатериалов(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		СПМ = КонтрольМатриалов(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);//СформироватьПередачуМатериалов(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка); 
		Если СПМ = Истина Тогда
			ЗаполнитьИнформациюПоЭтапу(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
		Иначе
			Если СформироватьПередачуМатериалов(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка) = Истина Тогда
			//НовыйДокумент = Документы.ДвижениеПродукцииИМатериалов.СоздатьДокумент();
			//НовыйДокумент.Заполнить(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
					
	 		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОшибка",ЭтотОбъект);
		    ПоказатьВопрос(Оповещение,
		        "Перемещение материалов выполнено",
		        РежимДиалогаВопрос.ОК,
		        0, // таймаут в секундах
		        , // (необ.) кнопка по умолчанию
		        "" // (необ.) заголовок
		    ); 
				
				ЗаполнитьИнформациюПоЭтапу(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
			Иначе
	 		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОшибка",ЭтотОбъект);
		    ПоказатьВопрос(Оповещение,
		        "Не удалось сформировать документ",
		        РежимДиалогаВопрос.ОК,
		        0, // таймаут в секундах
		        , // (необ.) кнопка по умолчанию
		        "" // (необ.) заголовок
		    ); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры  

&НаКлиенте
Процедура ПослеЗакрытияВопросаОшибка(Результат, Параметры) Экспорт

КонецПроцедуры

&НаСервере
Функция СформироватьПередачуМатериалов(ЭтапП)
	Ош = Истина;
	
	Док = ЭтапП.ПолучитьОбъект();

	Для Каждого стр из Док.ОбеспечениеМатериаламиИРаботами Цикл  
		Если стр.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.Отгрузить  Тогда
			стр.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение); 
//
		ДокП = Документы.ДвижениеПродукцииИМатериалов.СоздатьДокумент();
		
		Мас = Новый Массив;
		Мас.Добавить(Док.Ссылка);
			
			Пар = Новый Структура;
			Пар.Вставить("ЗаполнятьПоОрдеру",Ложь);
			Пар.Вставить("Организация",Док.Распоряжение.Организация);
			Пар.Вставить("ИмяДокумента","ДвижениеПродукцииИМатериалов");
			Пар.Вставить("ИмяПоляЗаказ","Распоряжение");
			Пар.Вставить("ИмяРегистраЗаказ","ЗаказыМатериаловВПроизводство");
			Пар.Вставить("КлючевыеПоля","Номенклатура, Характеристика, Серия, Назначение, НазначениеОтправителя");
			Пар.Вставить("МассивЗаказов",Мас);
			Пар.Вставить("Отправитель",Док.ВыходныеИзделия[0].Получатель);
			Пар.Вставить("Получатель",Док.Распоряжение.Подразделение);
			
			РеквизитыШапки = Новый Структура;
			
			РеквизитыШапки.Вставить("ХозяйственнаяОперация",Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство);
			РеквизитыШапки.Вставить("Организация",Док.Распоряжение.Организация);
			РеквизитыШапки.Вставить("Отправитель",Док.ВыходныеИзделия[0].Получатель);
			РеквизитыШапки.Вставить("Получатель",Док.Распоряжение.Подразделение);
			РеквизитыШапки.Вставить("Подразделение",Док.Распоряжение.Подразделение);
			РеквизитыШапки.Вставить("ЕстьОрдера",Истина);
			РеквизитыШапки.Вставить("ЕстьОшибкиПроведен",Ложь);
			РеквизитыШапки.Вставить("ЕстьОшибкиСтатус",Ложь);
			РеквизитыШапки.Вставить("ЕстьПроизведено",Истина);
			
			Пар.Вставить("РеквизитыШапки",РеквизитыШапки); 
			ДокП.Заполнить(Пар);
		
		Попытка 
			ДокП.Записать(РежимЗаписиДокумента.Проведение);
		Исключение  
			ДокП.Записать(РежимЗаписиДокумента.Запись);
			Ош = Ложь;
		КонецПопытки; 
		ЭтаФорма.Элементы.ГПОшибка.Заголовок = "";
	Исключение 
		ЭтаФорма.Элементы.ГПОшибка.Заголовок = "не достаточно сырья";
		Ош = Ложь;
	КонецПопытки;
//

	Возврат Ош;
КонецФункции


&НаСервере
Функция ПолучитьИНформациюПоЭтапу(ЭтапП)
	Ош = Истина; 
	ЭтаФорма.Элементы.ГПОшибка.Заголовок = "";
	Если ЭтапП.Статус <> Перечисления.СтатусыЭтаповПроизводства2_2.Начат ТОгда
		Ош = "Статус"; 
	ИначеЕсли КонтрольМатриалов(ЭтапП) = Ложь ТОгда
		Ош = "КонтрольМатериалов";	
	КонецЕсли;
	Возврат Ош;
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопросаСтатус(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ИзменитьЭтап(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка); 
		СтатусЭтапа = ПолучитьИНформациюПоЭтапу(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
		Если СтатусЭтапа = "КонтрольМатериалов" Тогда
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаКонтрольМатериалов",ЭтотОбъект);
			ПоказатьВопрос(Оповещение,
			"Сформировать передачу материалов в производство",
			РежимДиалогаВопрос.ДаНет,
			0, // таймаут в секундах
			КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
			"" // (необ.) заголовок
			); 
			
		Иначе		
			ЗаполнитьИнформациюПоЭтапу(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка); 
		КонецЕсли;
	Иначе		
		ЗаполнитьИнформациюПоЭтапу(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка); 
		
	КонецЕсли;
КонецПроцедуры  

&НаСервере
Процедура ИзменитьЭтап(ЭтапП)
	Док = ЭтапП.ПолучитьОбъект();
	Док.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат;  
	Док.ФактическоеНачалоЭтапа = ТекущаяДата(); 
	Док.ВыходныеИзделия[0].ДатаПроизводства = ТекущаяДата(); 
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Функция КонтрольМатриалов(ЭтапП)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДвижениеПродукцииИМатериалов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	               |ГДЕ
	               |	ДвижениеПродукцииИМатериалов.ПометкаУдаления = &ПометкаУдаления
	               |	И ДвижениеПродукцииИМатериалов.Проведен = &Проведен
	               |	И ДвижениеПродукцииИМатериалов.Распоряжение = &ДокументОснование"; 
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("ДокументОснование",ЭтапП.Ссылка);  
	
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество()>=1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ЗаполнитьИнформациюПоЭтапу(ЭтапП) 
	ЭтаФорма.Номенклатура = ЭтапП.ПартияПроизводства.ОсновноеИзделиеНоменклатура; 
	ЭтаФорма.Запланировано = Строка(ЭтапП.КоличествоУпаковокПлан) + " шт.";
	ЭтаФорма.Выполнено = Строка(ЭтапП.КоличествоУпаковокФакт) + " шт.";
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",ЭтапП.ПартияПроизводства.ОсновноеИзделиеНоменклатура);
	Отбор.Вставить("Спецификация",ЭтапП.Спецификация);
	Отбор.Вставить("Количество",ЭтапП.КоличествоУпаковокПлан);
	Строки = ЭтапП.ПартияПроизводства.Документ.Продукция.НайтиСтроки(Отбор); 
		
	Если Строки[0].Расш1_Серия <> Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
		ЗаполнитьУпаковки(ЭтапП.ПартияПроизводства.ОсновноеИзделиеНоменклатура,Строки[0].Расш1_Серия);
		ЗаполнитьПомещения(Строки[0].Склад);
		ЭтаФорма.Элементы.ГПОшибка.Заголовок = "";	
		ЭтаФорма.Элементы.СкладПолучатель.Доступность = Истина;
		ЭтаФорма.ИнфоСерия = Строки[0].Расш1_Серия;
	Иначе
		ЭтаФорма.Элементы.ГПОшибка.Заголовок = "Заполните серию в заказе на производство"	; 
		ЭтаФорма.Элементы.СкладПолучатель.Доступность = Ложь;
		
	КонецЕсли;
	СписокВыпуска.Параметры.УстановитьЗначениеПараметра("ЭтапПроизводства",ЭтапП);

	
КонецПроцедуры 

        

&НаСервере
Процедура ОчиститьПоля()
	ЭтаФорма.Количество = 0; 
	ЭтаФорма.ДопКоличество = 0;
	ЭтаФорма.Элементы.ГруппаДоп.Видимость = Ложь;
	ЭтаФорма.ДопВыпуск = Ложь;
	ЭтаФорма.Элементы.Печать.Доступность = Ложь;
	ЭтаФорма.СкладПолучатель = Справочники.Склады.ПустаяСсылка(); 
	ЭтаФорма.СкладВыбор = "";
	ЭтаФорма.ЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЭтаФорма.Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЭтаФорма.ДопЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЭтаФорма.ДопУпаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЭтаФорма.Элементы.Декорация3.Заголовок = "";
	ЭтаФорма.Элементы.Номенклатура.Заголовок = ""; 
	ЭтаФорма.Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	ЭтаФорма.Элементы.ИнфоСерия.Заголовок = ""; 
	ЭтаФорма.ИнфоСерия = Справочники.СерииНоменклатуры.ПустаяСсылка();
	ЭтаФорма.Элементы.Запланировано.Заголовок = "";
	ЭтаФорма.Элементы.Выполнено.Заголовок = "";
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьУпаковки(Ном,СерияФормы)
		ЗапросУп = Новый Запрос;
		ЗапросУп.Текст = "ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка , УпаковкиЕдиницыИзмерения.Родитель КАК Родитель
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
		|	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
		ЗапросУп.УстановитьПараметр("ПометкаУдаления",Ложь);
		ЗапросУп.УстановитьПараметр("Владелец",Ном);
		РезультатЗапросаУп = ЗапросУп.Выполнить();
		
		ТабУп = РезультатЗапросаУп.Выгрузить();
		
		СписокУпаковок = Новый СписокЗначений; 
		СписокУпаковок.Очистить(); 
		
		Для Каждого стр из ТабУп Цикл
			Если стр.Ссылка = СерияФормы.СХК_Упаковка.Ссылка ИЛИ стр.Родитель = СерияФормы.СХК_Упаковка.Ссылка Тогда
				СписокУпаковок.Добавить(стр.Ссылка);
			КонецЕсли;
		КонецЦикла;
		ЭтаФорма.Элементы.ЕдИзм.СписокВыбора.ЗагрузитьЗначения(СписокУпаковок.ВыгрузитьЗначения());
//
		СписокУпаковок = Новый СписокЗначений; 
		СписокУпаковок.Очистить();
		СписокУпаковок.ЗагрузитьЗначения(РезультатЗапросаУп.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
		ЭтаФорма.Элементы.ДопЕдИзм.СписокВыбора.ЗагрузитьЗначения(СписокУпаковок.ВыгрузитьЗначения());

КонецПроцедуры  
	
&НаСервере
Процедура ЗаполнитьПомещения(Ном)

КонецПроцедуры

&НаКлиенте
Процедура ЕдИзмОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	СЗУпаковкиПриИзмененииНаСервере(ВыбранноеЗначение);
КонецПроцедуры                                         

&НаСервере
Процедура СЗУпаковкиПриИзмененииНаСервере(Эл)  
	ЭтаФорма.Упаковка = Эл; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Расш1_РегистрШтрихЭтикетка.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	               |ГДЕ
	               |	Расш1_РегистрШтрихЭтикетка.Номенклатура = &Номенклатура
	               |	И Расш1_РегистрШтрихЭтикетка.Упаковка = &Упаковка";
	
	Запрос.УстановитьПараметр("Номенклатура",ЭтотОбъект.Номенклатура);
	Запрос.УстановитьПараметр("Упаковка",ЭтотОбъект.Упаковка);
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода); 

	Если ТабЗнач.Количество()>=1 Тогда
    	ЭтотОбъект.ШкНом = ТабЗнач[0].Штрихкод;
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура СкладПолучательПриИзмененииНаСервере()
	Если ЭтотОбъект.СкладПолучатель = Справочники.Склады.ПустаяСсылка() Тогда
		ЭтаФорма.Элементы.Печать.Доступность = Ложь;
	Иначе
		ЭтаФорма.Элементы.Печать.Доступность = Истина;
	КонецЕсли;
	

КонецПроцедуры


&НаКлиенте
Процедура СкладПолучательПриИзменении(Элемент)
	СкладПолучательПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Функция ПечатьНаСервере(ЭтапП)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ВыпускПоЭтапу.Период КАК Период,
	|	СХК_ВыпускПоЭтапу.ЭтапПроизводства КАК ЭтапПроизводства,
	|	СХК_ВыпускПоЭтапу.СкладПолучатель КАК СкладПолучатель,
	|	СХК_ВыпускПоЭтапу.Количество КАК Количество,
	|	СХК_ВыпускПоЭтапу.Статус КАК Статус,
	|	СХК_ВыпускПоЭтапу.Помещение КАК Помещение,
	|	СХК_ВыпускПоЭтапу.Упаковка КАК Упаковка,
	|	СХК_ВыпускПоЭтапу.НомерСтрокиДок КАК НомерСтрокиДок
	|ИЗ
	|	РегистрСведений.СХК_ВыпускПоЭтапу КАК СХК_ВыпускПоЭтапу
	|ГДЕ
	|	СХК_ВыпускПоЭтапу.ЭтапПроизводства = &ЭтапПроизводства
	|	";
	Запрос.УстановитьПараметр("ЭтапПроизводства",ЭтапП);
 
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  
		
		НоваяЗапись = РегистрыСведений.СХК_ВыпускПоЭтапу.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.ЭтапПроизводства = ЭтапП;
		НоваяЗапись.СкладПолучатель = ЭтотОбъект.СкладПолучатель;
		НоваяЗапись.Упаковка = ЭтотОбъект.Упаковка.Ссылка; 
		ДопКол = 0;
		Если ЭтотОбъект.ДопВыпуск = Истина И ЭтотОбъект.ДопКоличество >=1 Тогда
			НоваяЗапись.ДопВыпуск = Истина;	 
			Если ЭтотОбъект.ДопУпаковка.Числитель >=1 Тогда 
				ДопКол = ЭтотОбъект.ДопКоличество * ЭтотОбъект.ДопУпаковка.Числитель;
				НоваяЗапись.ДопКоличество = ДопКол;	
			Иначе
				ДопКол = ЭтотОбъект.ДопКоличество;
				НоваяЗапись.ДопКоличество = ДопКол;	
			КонецЕсли;				
			НоваяЗапись.ДопУпаковка = ЭтотОбъект.ДопУпаковка;	
		Иначе
			НоваяЗапись.ДопВыпуск = Ложь;
			НоваяЗапись.ДопКоличество = 0;
		КонецЕсли;
		
		НоваяЗапись.Количество = ЭтотОбъект.Упаковка.Числитель * ЭтотОбъект.Количество + ДопКол;
		НоваяЗапись.Статус = Перечисления.СХК_СтатусВыпуска.Собран;
		НоваяЗапись.НомерСтрокиДок = ТабЗнач.Количество() + 1;	
		НоваяЗапись.Линия = ЭтаФорма.ЛинияВыбор;	

		НоваяЗапись.Помещение = Объект.СХК_Этаж; 
		НоваяЗапись.СерииНоменклатуры = ЭтотОбъект.ИнфоСерия; 
		НоваяЗапись.Записать(Истина);
	    ЭтаФорма.Выполнено = Строка(ЭтапП.КоличествоУпаковокФакт) + " шт.";
		
		Обработка = РеквизитФормыВЗначение("Объект"); 

		ТаблДокум = Новый  ТабличныйДокумент;
	    ТаблДокум.Очистить();  
		
		Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПалетныйЛист"); 
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");

		QRСтрока = Строка(ЭтапП.УникальныйИдентификатор())+";"+Строка(ЭтаФорма.ИнфоСерия)+";"+Строка(ТабЗнач.Количество() + 1)
			+ ";" +Строка(ЭтотОбъект.Упаковка);  
		
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = Обработка.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОбластьСтрока.Рисунки["QRКод"].Картинка = КартинкаQRКода;
			Иначе
				ТекстСообщения = "Не удалось сформировать QR-код для документа";
				#Если Клиент Тогда
					Сообщить(ТекстСообщения);
				#КонецЕсли
			КонецЕсли;
		КонецЕсли;  
		
			
 		ОбластьСтрока.Параметры.Номенклатура =  Строка(ЭтотОбъект.Номенклатура);  
		
		Если ЭтотОбъект.ДопКоличество>=1 Тогда 
			Если ЭтотОбъект.ДопУпаковка.Числитель >=1 Тогда 
				ОбластьСтрока.Параметры.Количество = Строка((ЭтотОбъект.Упаковка.Числитель * ЭтотОбъект.Количество)+(ЭтотОбъект.ДопУпаковка.Числитель * ЭтотОбъект.ДопКоличество)) + " шт"; 
			Иначе
				ОбластьСтрока.Параметры.Количество = Строка((ЭтотОбъект.Упаковка.Числитель * ЭтотОбъект.Количество)+(ЭтотОбъект.ДопКоличество)) + " шт"; 
			КонецЕсли;				
			ОбластьСтрока.Параметры.Содержимое = "Содержимое : " + Строка(ЭтотОбъект.Упаковка) +" "+ Строка(ЭтотОбъект.Количество) + " шт" + Символы.ПС +
												"Дополнительно: "+ Строка(ЭтотОбъект.ДопУпаковка) +" "	+ Строка(ЭтотОбъект.ДопКоличество) + " шт.";
		Иначе 
			ОбластьСтрока.Параметры.Количество =  Строка(ЭтотОбъект.Упаковка.Числитель * ЭтотОбъект.Количество) + " шт";
			ОбластьСтрока.Параметры.Содержимое = "Содержимое : " + Строка(ЭтотОбъект.Упаковка) +" "+ Строка(ЭтотОбъект.Количество) + " шт";
		КонецЕсли;
		
		ОбластьСтрока.Параметры.ДатаВыпуска = "Дата Выпуска : " + Строка(Формат(ЭтотОбъект.ИнфоСерия.ДатаПроизводства, "ДЛФ=Д"));
		ОбластьСтрока.Параметры.ГоденДо	 = "Годен До : " + Строка(Формат(ЭтотОбъект.ИнфоСерия.ГоденДо, "ДЛФ=Д"));
		ОбластьСтрока.Параметры.СкладПолучатель	 = "Склад получатель : " + Строка(ЭтаФорма.СкладПолучатель); 
 		ОбластьСтрока.Параметры.НомерЛиста	 = "Паллетный лист № : " + Строка(ТабЗнач.Количество() + 1); 
 		ОбластьСтрока.Параметры.НомерЭтапа	 = "Этап № : " + Строка(ЭтапП.Номер) + " Заказ производства № " + Строка(ЭтапП.Распоряжение.Номер); 
        ТаблДокум.АвтоМасштаб = Истина;
		ТаблДокум.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		ТаблДокум.Вывести(ОбластьСтрока); 

	Возврат ТаблДокум;
КонецФункции


&НаКлиенте
Процедура Печать(Команда) 
	ЭтаФорма.Элементы.ГПОшибка.Заголовок = "";
	
	Если ЭтаФорма.Номенклатура.Пустая() = Истина ИЛИ ЭтаФорма.ИнфоСерия.Пустая() = Истина Тогда 
		ЭтаФорма.Элементы.ГПОшибка.Заголовок = "Выберите этап еще раз !!!";
		Сообщить("Выберите этап еще раз !!!");	
	Иначе
		Если ЭтаФорма.ЛинияВыбор = "" Тогда
			Сообщить("Выберите Линию !!!"); 
			ЭтаФорма.Элементы.ГПОшибка.Заголовок = "Выберите Линию !!!";
			
		Иначе

			ВыполнитьВыпуск(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
			
			П = Новый Структура("Ключ", ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
			фрмДок = ПолучитьФорму("Документ.ЭтапПроизводства2_2.ФормаОбъекта", П);
			фрмДок.СХК_ОтразитьКоличествоФактВТЧ(Неопределено);
			фрмДок.Записать();	
			
			ПП = ПроверитьПоля(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
			
			Если ПП = Истина Тогда
				ТаблДокум = ПечатьНаСервере(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
				ТаблДокум.Показать("Печать документа"); 
				
				ЭтаФорма.Элементы.СписокВыпуска.Обновить();
				ЭтаФорма.Элементы.Печать.Доступность = Ложь; 
				ОчиститьПоля();
			ИНаче
				Сообщить(ПП);
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры    



&НаСервере
Процедура ВыполнитьВыпуск(ЭтапП)
		Док = ЭтапП.ПолучитьОбъект(); 
		Если ЭтотОбъект.ДопКоличество >=1 Тогда
			Док.КоличествоУпаковокФакт = Док.КоличествоУпаковокФакт + ЭтотОбъект.Упаковка.Числитель * ЭтотОбъект.Количество + ЭтотОбъект.ДопУпаковка.Числитель * ЭтотОбъект.ДопКоличество ;
		Иначе
			Док.КоличествоУпаковокФакт = Док.КоличествоУпаковокФакт + ЭтотОбъект.Упаковка.Числитель * ЭтотОбъект.Количество;
		КонецЕсли;
		
		Док.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры


&НаСервере
Функция ПроверитьПоля(ЭтапП) 

	КолШт = ЭтотОбъект.Упаковка.Числитель * ЭтотОбъект.Количество;
	Если ЭтотОбъект.ДопКоличество >=1 Тогда
		Если ЭтотОбъект.ДопУпаковка.Числитель >=1 Тогда 
			КолДоп = ЭтотОбъект.ДопУпаковка.Числитель * ЭтотОбъект.ДопКоличество;
		Иначе
			КолДоп = ЭтотОбъект.ДопКоличество;
		КонецЕсли;			
	КонецЕсли;			
	//УпШт = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию("шт");
	Ош = Истина;
	
	Попытка  
		Распоряжение = ЭтапП.Ссылка;
		Склад = ЭтапП.Ссылка.ВыходныеИзделия[0].Получатель; 
		
		Серия = ЭтаФорма.ИнфоСерия;

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
		|ГДЕ
		|	ПриходныйОрдерНаТовары.Проведен = &Проведен
		|	И ПриходныйОрдерНаТовары.ПометкаУдаления = &ПометкаУдаления
		|	И ПриходныйОрдерНаТовары.Распоряжение = &Распоряжение"; 
		Запрос.УстановитьПараметр("Проведен",Истина);
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
		Результат = Запрос.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТабЗнач = Результат.Выгрузить(СпособОбхода);
		
		Если ТабЗнач.Количество() = 1 Тогда
			ДокП = ТабЗнач[0].Ссылка.ПолучитьОбъект();
		Иначе
			ДокП = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
			ДокП.Дата = ТекущаяДата();
			ДокП.Склад = Склад ; 
			ДокП.Распоряжение = Распоряжение; 
			ДокП.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
			ДокП.Помещение = Объект.СХК_Этаж;
			ДокП.ДатаВходящегоДокумента = ТекущаяДата();
			ДокП.Отправитель = ЭтапП.Подразделение ; 
			ДокП.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства;
			ДокП.СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства; 
			ДокП.Ответственный = Пользователи.АвторизованныйПользователь(); 
			ДокП.РежимПросмотраПоТоварам = 1;
		КонецЕсли; 
		
		Если КолШт >=1 Тогда
			Т = ДокП.Товары.Добавить(); 
			Т.Номенклатура = ЭтотОбъект.Номенклатура;
			Т.Упаковка = ЭтотОбъект.Упаковка;
			Т.Количество = КолШт;
			Т.КоличествоУпаковок = ЭтотОбъект.Количество;
			Т.СтатусУказанияСерий = 4; 
			Т.Серия = Серия;  
		КонецЕсли;
		
		Если ЭтаФорма.ДопКоличество>=1 Тогда
			Т = ДокП.Товары.Добавить(); 
			Т.Номенклатура = ЭтотОбъект.Номенклатура;
			Т.Упаковка = ЭтотОбъект.ДопУпаковка;
			Т.Количество = КолДоп;
			Т.КоличествоУпаковок = ЭтотОбъект.ДопКоличество;
			Т.СтатусУказанияСерий = 4; 
			Т.Серия = Серия;  
		КонецЕсли;
		
		
		Попытка 
			ДокП.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Ош = Ложь;
		КонецПопытки;
///////////////////////////////////////		

		ДокДвижениеПродукцииИМатериалов = Документы.ДвижениеПродукцииИМатериалов.СоздатьДокумент();
		
		Мас = Новый Массив;
		Мас.Добавить(Распоряжение);
			
			Пар = Новый Структура;
			Пар.Вставить("ЗаполнятьПоОрдеру",Ложь);
			Пар.Вставить("Организация",Распоряжение.Распоряжение.Организация);
			Пар.Вставить("ИмяДокумента","ДвижениеПродукцииИМатериалов");
			Пар.Вставить("ИмяПоляЗаказ","Распоряжение");
			Пар.Вставить("ИмяРегистраЗаказ","ЗаказыМатериаловВПроизводство");
			Пар.Вставить("КлючевыеПоля","Номенклатура, Характеристика, Серия, Назначение, НазначениеОтправителя");
			Пар.Вставить("МассивЗаказов",Мас);
			Пар.Вставить("Отправитель",Распоряжение.Распоряжение.Подразделение);
			
			РеквизитыШапки = Новый Структура;
			
			РеквизитыШапки.Вставить("ХозяйственнаяОперация",Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства);
			РеквизитыШапки.Вставить("Организация",Распоряжение.Распоряжение.Организация);
			РеквизитыШапки.Вставить("Отправитель",Распоряжение.Распоряжение.Подразделение);
			РеквизитыШапки.Вставить("Получатель",Склад);
			РеквизитыШапки.Вставить("ЕстьОрдера",Истина);
			РеквизитыШапки.Вставить("ЕстьОшибкиПроведен",Ложь);
			РеквизитыШапки.Вставить("ЕстьОшибкиСтатус",Ложь);
			РеквизитыШапки.Вставить("ЕстьПроизведено",Истина);
			
			Пар.Вставить("РеквизитыШапки",РеквизитыШапки); 
			ДокДвижениеПродукцииИМатериалов.Заполнить(Пар);
		
		Попытка 
			ДокДвижениеПродукцииИМатериалов.Записать(РежимЗаписиДокумента.Проведение);
		Исключение  
			ДокДвижениеПродукцииИМатериалов.Записать(РежимЗаписиДокумента.Запись);
			Ош = Ложь;
		КонецПопытки;
		///////////////////////////////////////		
		
		
	Исключение
		Ош = Ложь;
		
	КонецПопытки;
	
	
	Возврат Ош;
	
КонецФункции

&НаСервере
Процедура СоздатьИзменитьПриходныйОрдер(ДокС,Кол,Помещение)
	
	
КонецПроцедуры


&НаСервере
Процедура ЕдИзмОчисткаНаСервере()
	ЭтотОбъект.ЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
КонецПроцедуры

&НаКлиенте
Процедура ЕдИзмОчистка(Элемент, СтандартнаяОбработка)
	ЕдИзмОчисткаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОчиститьУпаковка()
	ЭтотОбъект.Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();	
КонецПроцедуры

&НаКлиенте
Процедура ЕдИзмПриИзменении(Элемент) 
	Если Элемент.ВыделенныйТекст = "" Тогда
		ОчиститьУпаковка(); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()  
	ОчиститьПоля();
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала",НачалоДня(Период));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",КонецДня(Период));
	Список.Параметры.УстановитьЗначениеПараметра("СХК_Этаж",Объект.СХК_Этаж);
	ЭтаФорма.Помещение = Объект.СХК_Этаж;

	Если ЭтотОбъект.ВидНоменклатуры = "ГП" Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОсновноеИзделиеНоменклатура",Справочники.Номенклатура.НайтиПоКоду("00000000007"));
	Иначе  
		Список.Параметры.УстановитьЗначениеПараметра("ОсновноеИзделиеНоменклатура",Справочники.Номенклатура.НайтиПоКоду("ЦБ-00006040")); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда) 
	ОбновитьНаСервере();
	ЭтаФорма.Элементы.Список.Обновить();	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновитьНаСервере();
	ЭтаФорма.Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)   
	Если ЭтаФорма.ВидНоменклатуры = "ГП" Тогда
		ЭтаФорма.Элементы.ГруппаГП.Видимость = Истина;
		ЭтаФорма.Элементы.ГруппаПФ.Видимость = Ложь;
	Иначе
		ЭтаФорма.Элементы.ГруппаГП.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаПФ.Видимость = Истина;
	КонецЕсли;
    ОчиститьПоля();
	ОбновитьНаСервере();
	ЭтаФорма.Элементы.Список.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	ОткрытьЗначение(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
КонецПроцедуры


&НаКлиенте
Процедура СкладВыборОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	СкладВыборПриИзмененииНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура СкладВыборПриИзмененииНаСервере(Эл)  
	Если Эл = "ГП" Тогда 
		ЭтаФорма.СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции");
	Иначе
		ЭтаФорма.СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("ЦК Цех Комплектации");
	КонецЕсли;
	ЭтаФорма.Элементы.Печать.Доступность = Истина;
	
КонецПроцедуры



//////////////////////////////////////////ПФ
&НаСервере
Процедура ЗаполнитьИнформациюПоЭтапуПФ(ЭтапП) 
	ЭтаФорма.ДокЭтапа = ЭтапП;   
	ЭтаФорма.Номенклатура = ЭтапП.ПартияПроизводства.ОсновноеИзделиеНоменклатура;
	ЭтаФорма.Элементы.Декорация3.Заголовок = ЭтапП;
	ЭтаФорма.Элементы.Декорация5.Заголовок = "";  
	ЭтаФорма.Элементы.ЗаказСырье.Доступность = Истина;
	ЭтаФорма.Элементы.ВыпускПФ.Доступность = Ложь; 
	ЭтаФорма.ОбъемПФ = 0; 
	ЭтаФорма.ОбъемПФДок = "Объем по документу :" + Строка(ЭтапП.КоличествоУпаковокПлан);
	ЭтаФорма.ОбъемПФДокФакт = "Выпущено :" + Строка(ЭтапП.КоличествоУпаковокФакт);
КонецПроцедуры  

&НаКлиенте
Процедура ЗаказСырье(Команда)
	
	Если КоличествоПоЗаказу() >1 Тогда
				Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПотребностьНаЭтапы",ЭтотОбъект);
					ПоказатьВопрос(Оповещение,
					"Сформировать потребность на все этапы?",
					РежимДиалогаВопрос.ДаНет,
					0, // таймаут в секундах
					КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
					"" // (необ.) заголовок
				); 
		
			Иначе				
				СформироватьЗаказНаПеремещение(1);
	КонецЕсли;
	
	
КонецПроцедуры  

&НаСервере
Функция КоличествоПоЗаказу()
	Возврат ЭтаФорма.ДокЭтапа.Распоряжение.Продукция.Количество();
КонецФункции

	
&НаКлиенте
Процедура ПослеЗакрытияВопросаПотребностьНаЭтапы(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		СформироватьЗаказНаПеремещение(2);
	Иначе
		СформироватьЗаказНаПеремещение(1);
	КонецЕсли; 
	Если ЭтаФорма.ЗаказПеремещения <> "" Тогда
		ОткрытьЗначение(ЭтаФорма.ЗаказПеремещения);
	Иначе
		ЭтаФорма.Элементы.Декорация5.Заголовок = "При создании документа произошла ошибка";
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервере
Процедура СформироватьЗаказНаПеремещение(М) 
	ЭтаФорма.ЗаказПеремещения = "";
	Если м = 1 Тогда
		ТЗ = ЭтаФорма.ДокЭтапа.ОбеспечениеМатериаламиИРаботами.Выгрузить();
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Номенклатура КАК Номенклатура,
		               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок КАК КоличествоУпаковок,
		               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Количество КАК Количество,
		               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Склад КАК Склад,
		               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Упаковка КАК Упаковка
		               |ИЗ
		               |	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами
		               |ГДЕ
		               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка.Распоряжение = &Распоряжение";
		
		Запрос.УстановитьПараметр("Распоряжение",ЭтаФорма.ДокЭтапа.Распоряжение); 
		Результат = Запрос.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТЗ = Результат.Выгрузить(СпособОбхода);	
	КонецЕсли;
	
	Док = Документы.ЗаказНаПеремещение.СоздатьДокумент();
	Док.Дата = ТекущаяДата(); 
	Док.ЖелаемаяДатаПоступления = ТекущаяДата(); 
	Док.Организация = ЭтаФорма.ДокЭтапа.Распоряжение.Организация;
	Док.СкладОтправитель = Справочники.Склады.НайтиПоНаименованию("СМ Склад сырья и материалов");
	Док.СкладПолучатель = ТЗ[0].Склад; 
	Док.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	Док.СпособДоставки = Перечисления.СпособыДоставки.Самовывоз;
	Док.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным;
	Док.Статус = Перечисления.СтатусыВнутреннихЗаказов.КВыполнению;
	Док.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний");
	ПФ = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Полуфабрикаты (действующие)");
	Для Каждого стр из ТЗ Цикл
		Если стр.Номенклатура.ВидНоменклатуры <> ПФ Тогда		
			Т = Док.Товары.Добавить();
			Т.Номенклатура = стр.Номенклатура;
			Т.Количество = стр.Количество;
			Т.КоличествоУпаковок = стр.КоличествоУпаковок;
			Т.Упаковка = стр.Упаковка;
			Т.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.КОбеспечению;
		КонецЕсли;
	КонецЦикла;

	Попытка
		Док.Записать(РежимЗаписиДокумента.Провести);
	Исключение
		Док.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;		
	ЭтаФорма.ЗаказПеремещения = Док.Ссылка;
КонецПроцедуры	


&НаКлиенте
Процедура ЗаказСырьеГП(Команда)
	Сообщить("Кнопка в работе");
КонецПроцедуры


&НаКлиенте
Процедура СкладВыборОчистка(Элемент, СтандартнаяОбработка)
	ЭтаФорма.Элементы.Печать.Доступность = Ложь;
 	ЭтаФорма.СкладПолучатель = "";
КонецПроцедуры


&НаКлиенте
Процедура ВыпускПФ(Команда) 
	ИзменитьЭтапПФ(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
	Если СформироватьПередачуМатериалов(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка) = Истина Тогда
		ВыполнитьВыпускПФ(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);

		П = Новый Структура("Ключ", ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
		фрмДок = ПолучитьФорму("Документ.ЭтапПроизводства2_2.ФормаОбъекта", П);
		фрмДок.СХК_ОтразитьКоличествоФактВТЧ(Неопределено);
		фрмДок.Записать();	
		ВыполнитьПеремещениеПФ(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
		ЗавершитьЭтап(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
		ОбновитьНаСервере();
		ЭтаФорма.Элементы.Список.Обновить();	
		
	Иначе
		ЭтаФорма.Элементы.Декорация5.Заголовок = "Не достаточно сырья";	
		ЭтаФорма.Элементы.Декорация3.Заголовок = "";
	КонецЕсли;
	
	
КонецПроцедуры 

&НаСервере
Процедура ИзменитьЭтапПФ(ЭтапП)
	Док = ЭтапП.ПолучитьОбъект();
	Если Док.Статус <> Перечисления.СтатусыЭтаповПроизводства2_2.Начат Тогда
		Док.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат;
		Док.ПроизводствоОднойДатой = Истина;
		Док.ФактическоеНачалоЭтапа = ТекущаяДата(); 
		Док.ФактическоеОкончаниеЭтапа = ТекущаяДата(); 
		Док.ДатаПроизводства = ТекущаяДата();
		Док.Записать(РежимЗаписиДокумента.Проведение); 
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ВыполнитьВыпускПФ(ЭтапП)
		Док = ЭтапП.ПолучитьОбъект();
		Док.КоличествоУпаковокФакт = Док.КоличествоУпаковокФакт + ОбъемПФ;//ЭтаФорма.ОбъемПФ;  
		Док.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры


&НаСервере
Процедура ВыполнитьПеремещениеПФ(ЭтапП) 
	Док = ЭтапП.ПолучитьОбъект();
	КолШт = Док.КоличествоУпаковокФакт;
	Попытка
		
		// меняем на тгрузить
				
		
		Распоряжение = ЭтапП.Ссылка;
		Склад = ЭтапП.Ссылка.ВыходныеИзделия[0].Получатель; 
		Отправитель = ЭтапП.Ссылка.Подразделение;
		
		Серия = ЭтапП.Ссылка.Распоряжение.Продукция[0].Расш1_Серия;
		////////////////////////////
		
		/////////////////////////////////////		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
		|ГДЕ
		|	ПриходныйОрдерНаТовары.Проведен = &Проведен
		|	И ПриходныйОрдерНаТовары.ПометкаУдаления = &ПометкаУдаления
		|	И ПриходныйОрдерНаТовары.Распоряжение = &Распоряжение"; 
		Запрос.УстановитьПараметр("Проведен",Истина);
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
		Результат = Запрос.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТабЗнач = Результат.Выгрузить(СпособОбхода);	
		Если ТабЗнач.Количество() = 1 Тогда
			ДокП = ТабЗнач[0].Ссылка.ПолучитьОбъект();
		Иначе
			ДокП = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
			ДокП.Дата = ТекущаяДата();
			ДокП.Склад = Склад ; 
			ДокП.НомерВходящегоДокумента = ЭтапП.Ссылка.Номер;
			ДокП.Распоряжение = Распоряжение; 
			ДокП.РаспоряжениеНаНесколькоСкладов = ЛОжь;
			ДокП.Статус = Перечисления.СтатусыПриходныхОрдеров.КПоступлению;
			ДокП.Помещение = Объект.СХК_Этаж;//ЭтотОбъект.ПомещениеПФ;
			ДокП.ДатаВходящегоДокумента = ТекущаяДата();
			ДокП.Отправитель = Отправитель.Ссылка ; 
			ДокП.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства;
			ДокП.СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства; 
			ДокП.Ответственный = Пользователи.АвторизованныйПользователь().Ссылка;
			ДокП.ВсегоМест = КолШт; 
		КонецЕсли;
		Т = ДокП.Товары.Добавить(); 
		Т.Номенклатура = ЭтотОбъект.Номенклатура;
		Т.Упаковка = ЭтотОбъект.Номенклатура.ЕдиницаИзмерения;
		Т.Количество = КолШт;
		Т.КоличествоУпаковок = КолШт;
		Т.СтатусУказанияСерий = 0;
		Т.ЭтоУпаковочныйЛист = Ложь;

		Попытка 
			ДокП.Записать(РежимЗаписиДокумента.Запись);  
			ДокНП = ДокП.Ссылка.ПолучитьОбъект();
			ДокНП.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
			ДокНП.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Ош = Ложь;
		КонецПопытки;
		///////////////////////////////////////		
		
		ДокПД = Документы.ДвижениеПродукцииИМатериалов.СоздатьДокумент();
		
		Мас = Новый Массив;
		Мас.Добавить(Распоряжение);
		
		Пар = Новый Структура;
		Пар.Вставить("ЗаполнятьПоОрдеру",Ложь);
		Пар.Вставить("Организация",Распоряжение.Распоряжение.Организация);
		Пар.Вставить("ИмяДокумента","ДвижениеПродукцииИМатериалов");
		Пар.Вставить("ИмяПоляЗаказ","Распоряжение");
		Пар.Вставить("ИмяРегистраЗаказ","ЗаказыМатериаловВПроизводство");
		Пар.Вставить("КлючевыеПоля","Номенклатура, Характеристика, Серия, Назначение, НазначениеОтправителя");
		Пар.Вставить("МассивЗаказов",Мас);
		Пар.Вставить("Отправитель",Распоряжение.Распоряжение.Подразделение);
		
		РеквизитыШапки = Новый Структура;
		
		РеквизитыШапки.Вставить("ХозяйственнаяОперация",Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства);
		РеквизитыШапки.Вставить("Организация",Распоряжение.Распоряжение.Организация);
		РеквизитыШапки.Вставить("Отправитель",Распоряжение.Распоряжение.Подразделение);
		РеквизитыШапки.Вставить("Получатель",Распоряжение.ВыходныеИзделия[0].Получатель);
		РеквизитыШапки.Вставить("ЕстьОрдера",Истина);
		РеквизитыШапки.Вставить("ЕстьОшибкиПроведен",Ложь);
		РеквизитыШапки.Вставить("ЕстьОшибкиСтатус",Ложь);
		РеквизитыШапки.Вставить("ЕстьПроизведено",Истина);
		
		Пар.Вставить("РеквизитыШапки",РеквизитыШапки); 
		ДокПД.Заполнить(Пар);
		
		Попытка 
			ДокПД.Записать(РежимЗаписиДокумента.Проведение);
		Исключение  
			ДокПД.Записать(РежимЗаписиДокумента.Запись);
			Ош = Ложь;
		КонецПопытки;
		///////////////////////////////////////		
		
		ЭтаФорма.Элементы.Декорация3.Заголовок = "ПФ выпущен";	
	Исключение
		Ош = Ложь;
		ЭтаФорма.Элементы.Декорация5.Заголовок = "Произошла ошибка";	
		ЭтаФорма.Элементы.Декорация3.Заголовок = "";	
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ДопВыпускПриИзменении(Элемент)
	Если ЭтаФорма.Элементы.ГруппаДоп.Видимость = Ложь Тогда 
		ЭтаФорма.Элементы.ГруппаДоп.Видимость = Истина ;
	Иначе
		ЭтаФорма.Элементы.ГруппаДоп.Видимость = Ложь ;
	КонецЕсли;		
		
КонецПроцедуры

&НаКлиенте
Процедура ДопЕдИзмОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	допСЗУпаковкиПриИзмененииНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура допСЗУпаковкиПриИзмененииНаСервере(Эл)  
	ЭтаФорма.ДопУпаковка = Эл;
КонецПроцедуры

&НаСервере
Процедура ЗавершитьЭтап(ЭтапП)
	
	Док = ЭтапП.ПолучитьОбъект();
	Док.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен;
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьЭтап(Команда)
	ЗавершитьЭтап(ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка);
КонецПроцедуры


&НаСервере
Процедура ОбъемПФПриИзмененииНаСервере()
	Если ЭтаФорма.ОбъемПФ >=1 Тогда
		ЭтаФорма.Элементы.ВыпускПФ.Доступность = Истина;
	Иначе
		ЭтаФорма.Элементы.ВыпускПФ.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбъемПФПриИзменении(Элемент)
	ОбъемПФПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ЭтажПриИзменении(Элемент)
	ОбновитьНаСервере();
	ЭтаФорма.Элементы.Список.Обновить();	
КонецПроцедуры


&НаСервере
Процедура ГруппаДокументыНаСервере()
	
	ПериодДок.ДатаНачала = НачалоМесяца(НачалоДня(ТекущаяДата()));
	ПериодДок.ДатаОкончания = КонецНедели(КонецДня(ТекущаяДата()));

	Если ЭтаФорма.Этаж.Пустая() = Истина Тогда
		УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СХК_Склад,Этаж",Объект.СХК_Склад,ЭтаФорма.Этаж));
	КонецЕсли;
	ЭтаФорма.Этаж = Справочники.СкладскиеПомещения.НайтиПоНаименованию("Цех Мюсли 1 этаж");

	ЗаполнитьДокументыНаПроизводство(); 

КонецПроцедуры


&НаКлиенте
Процедура Группа7ПриСменеСтраницы(Элемент, ТекущаяСтраница) 
	Если ТекущаяСтраница.Имя = "ГруппаДокументы" Тогда
		ГруппаДокументыНаСервере();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПериодДокПриИзменении(Элемент)
	ЗаполнитьДокументыНаПроизводство();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДокументыНаПроизводство()

	ТабИнфоЭтап.Очистить(); 
    ТабСвязанные.Очистить();
    ТабДокЭтап.Очистить();
	СписокДок = Новый СписокЗначений; 
	СписокДок.Очистить();

	ЭтаФорма.Элементы.СписокДокЗаказов.СписокВыбора.ЗагрузитьЗначения(СписокДок.ВыгрузитьЗначения());
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказНаПроизводство2_2.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство2_2
	               |ГДЕ
	               |	ЗаказНаПроизводство2_2.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И ЗаказНаПроизводство2_2.Проведен = &Проведен
	               |	И ЗаказНаПроизводство2_2.ПометкаУдаления = &ПометкаУдаления
	               |	И ЗаказНаПроизводство2_2.СХК_Этаж = &СХК_Этаж
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗаказНаПроизводство2_2.Дата УБЫВ"; 
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(ПериодДок.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(ПериодДок.ДатаОкончания));
	Запрос.УстановитьПараметр("СХК_Этаж",ЭтаФорма.Этаж.Ссылка);
	
	РезДок = Запрос.Выполнить();

	СписокДок = Новый СписокЗначений; 
	СписокДок.Очистить();
	
	СписокДок.ЗагрузитьЗначения(РезДок.Выгрузить().ВыгрузитьКолонку("Ссылка"));		
	ЭтаФорма.Элементы.СписокДокЗаказов.СписокВыбора.ЗагрузитьЗначения(СписокДок.ВыгрузитьЗначения());
    
КонецПроцедуры



&НаКлиенте
Процедура ОбъектСХК_ЭтажПриИзменении(Элемент) 
	ИзменитьЭтаж(Элемент.ВыделенныйТекст);
	ЗаполнитьДокументыНаПроизводство();
КонецПроцедуры

&НаСервере
Процедура ИзменитьЭтаж(Эт) 
	ЭтаФорма.Этаж = Справочники.СкладскиеПомещения.НайтиПоНаименованию(Эт);
КонецПроцедуры





&НаКлиенте
Процедура ТабДокЭтаповПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда 

	Иначе  
		ЗаполнитьИнфоПоЭтапу(Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьИнфоПоЭтапу(ДокЭ) 
	ЭтаФорма.ТабИнфоЭтап.Очистить(); 
	НТаб = ЭтаФорма.ТабИнфоЭтап.Выгрузить();
	
	Для Каждого стр из ДокЭ.ОбеспечениеМатериаламиИРаботами Цикл
		Т = НТаб.Добавить();
		Т.Номенклатура = стр.Номенклатура; 
		Т.Обеспечение = стр.Количество;
	КонецЦикла;
	
	Для Каждого стр из ДокЭ.РасходМатериаловИРабот Цикл
		Т = НТаб.Добавить();
		Т.Номенклатура = стр.Номенклатура; 
		Т.Расход = стр.Количество;
	КонецЦикла;

	Для Каждого стр из ДокЭ.ЭкономияМатериалов Цикл
		Т = НТаб.Добавить();
		Т.Номенклатура = стр.Номенклатура; 
		Т.Экономия = стр.Количество;
	КонецЦикла;
    ////
		ТабОтгр = ПолучитьРасхОрдера(ДокЭ); 
	Для Каждого стр из ТабОтгр Цикл
		Т = НТаб.Добавить();
		Т.Номенклатура = стр.Номенклатура; 
		Т.Отгружено = стр.Количество;
	КонецЦикла;
 		
		ТабВозвр = ПолучитьВозврт(ДокЭ);
	Для Каждого стр из ТабВозвр Цикл
		Т = НТаб.Добавить();
		Т.Номенклатура = стр.Номенклатура; 
		Т.Возврат = стр.Количество;
	КонецЦикла;
 		
	///
    НТаб.Свернуть("Номенклатура","Обеспечение,Расход,Экономия,Отгружено,Возврат");
	ЭтаФорма.ТабИнфоЭтап.Загрузить(НТаб);
	
 	ТаблицаСвязанныхДокументов = Новый ТаблицаЗначений;
    ТаблицаСвязанныхДокументов.Колонки.Добавить("Ссылка");
    ТаблицаСвязанныхДокументов.Колонки.Добавить("Проведен");
    НоваяСтрока = ТаблицаСвязанныхДокументов.Добавить();
    НоваяСтрока.Ссылка = ДокЭ;
    
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |    СвязанныеДокументы.Ссылка
    |ИЗ
    |    КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
    
    Для Каждого СтрокаТаблицы Из ТаблицаСвязанныхДокументов Цикл
        
        Если Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(СтрокаТаблицы.Ссылка))  Тогда
            
            Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", СтрокаТаблицы.Ссылка);
            ТаблицаСвязанныхДокументовВременная = Запрос.Выполнить().Выгрузить();
            
            Для Каждого ЭлементКоллекции Из ТаблицаСвязанныхДокументовВременная Цикл
                РезультатПоиска = ТаблицаСвязанныхДокументов.Найти(ЭлементКоллекции.Ссылка);
                Если РезультатПоиска = НеОпределено Тогда
                    НоваяСтрока = ТаблицаСвязанныхДокументов.Добавить();
                    НоваяСтрока.Ссылка = ЭлементКоллекции.Ссылка;
                   НоваяСтрока.Проведен = ЭлементКоллекции.Ссылка.Проведен;
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;
    КонецЦикла;
	
	ЭтаФорма.ТабСвязанные.Загрузить(ТаблицаСвязанныхДокументов);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасхОрдера(Распоряжение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходныйОрдерНаТовары.Номенклатура КАК Номенклатура,
	               |	РасходныйОрдерНаТовары.КоличествоУпаковок КАК Количество
	               |ИЗ
	               |	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТовары
	               |ГДЕ
	               |	РасходныйОрдерНаТовары.Ссылка.ТоварыПоРаспоряжениям.Распоряжение = &Распоряжение
	               |	И РасходныйОрдерНаТовары.Ссылка.ПометкаУдаления = &ПометкаУдаления
	               |	И РасходныйОрдерНаТовары.Ссылка.Проведен = &Проведен"; 
	Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Проведен",Истина);
	ТабРасх = Запрос.Выполнить().Выгрузить(); 
	ТабРасх.Свернуть("Номенклатура","Количество"); 
	
	Возврат ТабРасх;
	
КонецФункции

&НаСервере
Функция ПолучитьВозврт(Распоряжение)
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
|	ДвижениеПродукцииИМатериалов.Номенклатура КАК Номенклатура,
|	ДвижениеПродукцииИМатериалов.КоличествоУпаковок КАК Количество
|ИЗ
|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ДвижениеПродукцииИМатериалов
|ГДЕ
|	ДвижениеПродукцииИМатериалов.Ссылка.Распоряжение = &Распоряжение
|	И ДвижениеПродукцииИМатериалов.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства)
|	И ДвижениеПродукцииИМатериалов.Ссылка.ПометкаУдаления = &ПометкаУдаления
|	И ДвижениеПродукцииИМатериалов.Ссылка.Проведен = &Проведен"; 
	Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Проведен",Истина);
	ТабРасх = Запрос.Выполнить().Выгрузить(); 
	ТабРасх.Свернуть("Номенклатура","Количество"); 
	Возврат ТабРасх;

КонецФункции

&НаКлиенте
Процедура СписокДокЗаказовОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	СписокДокЗаказовОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура СписокДокЗаказовОбработкаВыбораНаСервере(Эл)
	ТабСвязанные.Очистить(); 
	ТабДокЭтап.Очистить();
	ТабИнфоЭтап.Очистить(); 

	ЭтотОбъект.ВыбДокЗаказа = Эл;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокументЭтапПроизводства2_2.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ЭтапПроизводства2_2 КАК ДокументЭтапПроизводства2_2
	               |ГДЕ
	               |	ДокументЭтапПроизводства2_2.Распоряжение = &Док";

	Запрос.УстановитьПараметр("Док",ЭтотОбъект.ВыбДокЗаказа);
	
	ТабЗН = Запрос.Выполнить().Выгрузить(); 
	Для Каждого стр из ТабЗН Цикл
		Сдано = ПолучитьСданоНаСервере(стр.Ссылка);
		СданоИзПроиз = ПолучитьСданоИзПроизНаСервере(стр.Ссылка);
		Т = ЭтотОбъект.ТабДокЭтап.Добавить();
		Т.Статус = стр.Ссылка.Статус;
		Т.Ссылка = стр.Ссылка;
		Т.Номенклатура = стр.Ссылка.Спецификация.ОсновноеИзделиеНоменклатура;
		Т.КоличествоУпаковокПлан = стр.Ссылка.КоличествоУпаковокПлан;
		Т.КоличествоУпаковокФакт = стр.Ссылка.КоличествоУпаковокФакт;
		Т.КоличествоУпаковокОтменено = стр.Ссылка.КоличествоУпаковокОтменено;
		Т.Сдано = Сдано;
		Если Сдано > стр.Ссылка.КоличествоУпаковокФакт Тогда
			Т.Ошибка = 1;
		Иначе
			Т.Ошибка = 2;
		КонецЕсли; 

		Т.СданоИзПроиз = СданоИзПроиз;

		Если СданоИзПроиз > стр.Ссылка.КоличествоУпаковокФакт Тогда
			Т.Ошибка = 1;
		Иначе
			Т.Ошибка = 2;
		КонецЕсли;

	КонецЦикла;
    
КонецПроцедуры


&НаСервере
Функция ПолучитьСданоИзПроизНаСервере(Док)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДвижениеПродукцииИМатериаловТовары.Количество КАК Количество
	               |ИЗ
	               |	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ДвижениеПродукцииИМатериаловТовары
	               |ГДЕ
	               |	ДвижениеПродукцииИМатериаловТовары.Ссылка.Распоряжение = &Распоряжение
	               |	И ДвижениеПродукцииИМатериаловТовары.Ссылка.Проведен = &Проведен
	               |	И ДвижениеПродукцииИМатериаловТовары.Ссылка.ПометкаУдаления = &ПометкаУдаления
	               |	И ДвижениеПродукцииИМатериаловТовары.Номенклатура = &Номенклатура"; 
	
	Запрос.УстановитьПараметр("Распоряжение",Док);
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Номенклатура",Док.Спецификация.ОсновноеИзделиеНоменклатура);
	
	Рез = Запрос.Выполнить().Выгрузить(); 
	Сдано = Рез.Итог("Количество");
	
	Возврат Сдано;

КонецФункции


&НаСервере
Функция ПолучитьСданоНаСервере(Док)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриходныйОрдерНаТоварыТовары.Количество КАК Количество
	               |ИЗ
	               |	Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТоварыТовары
	               |ГДЕ
	               |	ПриходныйОрдерНаТоварыТовары.Ссылка.Проведен = &Проведен
	               |	И ПриходныйОрдерНаТоварыТовары.Ссылка.ПометкаУдаления = &ПометкаУдаления
	               |	И ПриходныйОрдерНаТоварыТовары.Ссылка.Распоряжение = &Распоряжение
	               |	И ПриходныйОрдерНаТоварыТовары.Номенклатура = &Номенклатура"; 
	
	Запрос.УстановитьПараметр("Распоряжение",Док);
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Номенклатура",Док.Спецификация.ОсновноеИзделиеНоменклатура);
	
	Рез = Запрос.Выполнить().Выгрузить(); 
	Сдано = Рез.Итог("Количество");
	
	Возврат Сдано;

КонецФункции


	
&НаКлиенте
Процедура ТабСвязанныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ТабДокЭтаповВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ТабДокЭтапПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда 

	Иначе  
		ЗаполнитьИнфоПоЭтапу(Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТабДокЭтапВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаСервере
Функция ПроверитьПроведение(Этап)
	Возврат Этап.Проведен;	
КонецФункции


&НаКлиенте
Процедура ПечатьДокументов(Команда)

	Мас = Новый Массив;
	Мас.Добавить(ЭтотОбъект.ВыбДокЗаказа);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ЗаказНаПроизводство2_2","ЗаказНаПроизводство",Мас,ЭтаФорма); 
	
	МасЭтапов = Новый Массив;
	Для Каждого стр из ЭтаФорма.ТабДокЭтап Цикл 
		Если ПроверитьПроведение(стр.Ссылка) Тогда
			МасЭтапов.Добавить(стр.Ссылка);
		КонецЕсли;
	КонецЦикла; 
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ПечататьСмежныеЭтапы",Ложь);
	ПараметрыПечати.Вставить("ПечататьМатериалы",Истина);
	ПараметрыПечати.Вставить("ПечататьВыходныеИзделия",Ложь);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ЭтапПроизводства2_2","ЛистСопровожденияПартииПроизводства",МасЭтапов,ЭтаФорма,ПараметрыПечати); 
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ПечататьСмежныеЭтапы",Ложь);
	ПараметрыПечати.Вставить("ПечататьМатериалы",Истина);   
	ПараметрыПечати.Вставить("ПечататьВыходныеИзделия",Ложь);   
	ПараметрыПечати.Вставить("ДобавлятьПустыеСтрокиВМатериалы",Ложь);
	ПараметрыПечати.Вставить("ПечататьОперации",Ложь);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ЭтапПроизводства2_2","ЗаданиеНаПроизводство",МасЭтапов,ЭтаФорма,ПараметрыПечати); 
		
КонецПроцедуры   



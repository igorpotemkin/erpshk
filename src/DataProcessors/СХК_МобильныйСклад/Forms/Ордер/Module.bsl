//ЭтаФорма.СХКСписание - изменить тип
//0000001420000
//СББШ 08.07.2025 25 по 150 шт до 08.07.26;24630017461237
//ЦБ-013355


#Область ОбластьОткрытиеСоздание

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)   
	
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);

	ЭтаФорма.СХКСписание = Документы.СХК_СписаниеЯчейки.ПустаяСсылка();

	Если СтруктураПараметров.Ссылка <> "" Тогда
		СсылкаДок = СтруктураПараметров.Ссылка;
		ТЧТовары.Очистить();
		Списание = ПоискСХКСписание(СсылкаДок);
		Если Списание.Количество() = 0 Тогда
			Док = Документы.СХК_СписаниеЯчейки.СоздатьДокумент();
			Док.Дата = ТекущаяДата();
			Док.Склад = СсылкаДок.Склад;
			Док.ДокОснования = СсылкаДок;
			Док.Собран = Ложь;
		Иначе
			Док = Списание[0].Ссылка.ПолучитьОбъект();
		КонецЕсли;

		Если Док.Собран = Ложь Тогда
			Док.ТоварыПоРаспоряжениям.Очистить();
			ТТовары = Док.ДокОснования.ОтгружаемыеТовары.Выгрузить();
			Док.ТоварыПоРаспоряжениям.Загрузить(ТТовары);
		Иначе
			ЭтаФорма.Элементы.ЗакрытьОрдер.Доступность = Истина;
			Сообщить("По данному ордеру все собрано !!!");
		КонецЕсли;
		
		Попытка
			Док.Записать(РежимЗаписиДокумента.Проведение);
			Д = Док;
			ЭтаФорма.СХКСписание = Д.Ссылка;
		Исключение
			Сообщить("Не удалось создать документ отгрузки");
			Отказ = Истина;
		КонецПопытки;
		
		ЭтаФорма.СписокТовары.Очистить();
		ЭтаФорма.СписокТовары.Загрузить(ЭтаФорма.СХКСписание.ТоварыПоРаспоряжениям.Выгрузить());

	Иначе
		Сообщить("Не удалось создать документ отгрузки");
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОшибкаСборки = Истина Тогда
		ОткрытьФормуСообщения("В документе обнаружены ошибки");
	КонецЕсли;

	Если ПолучитьСтатусСборкиОрдера() И ОрдерРазмещен() = 0 Тогда
		ВывестиВопрос();
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти




&НаКлиенте
Процедура ПослеЗакрытияПредупреждение(Параметры) Экспорт
	ЭтаФорма.Доступность = Ложь; 		
КонецПроцедуры



&НаСервере
Функция ПоискСХКСписание(Д)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_СписаниеЯчейки.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СХК_СписаниеЯчейки КАК СХК_СписаниеЯчейки
	               |ГДЕ
	               |	СХК_СписаниеЯчейки.ДокОснования = &ДокОснования
	               |	И СХК_СписаниеЯчейки.ПометкаУдаления = &ПометкаУдаления
	               //|	И СХК_СписаниеЯчейки.Собран = &Собран
	               |	И СХК_СписаниеЯчейки.Проведен = &Проведен";
	Запрос.УстановитьПараметр("ДокОснования",Д); 
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);   
	Запрос.УстановитьПараметр("Проведен",Истина);   
//	Запрос.УстановитьПараметр("Собран",Истина);
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);
	Возврат ТабЗнач;
КонецФункции



&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СписокТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	
	НСтр = ПолучитьНомерСтрокиДокумента(Элемент.ТекущиеДанные.Номенклатура,Элемент.ТекущиеДанные.Серия,Элемент.ТекущиеДанные.Упаковка);
	
	Если ТИПЗНЧ(НСтр) = ТИП("Число") Тогда
		ПараметрыФормыЗаказа = Новый Структура;
		ПараметрыФормыЗаказа.Вставить("НомерСтроки",НСтр);
		ПараметрыФормыЗаказа.Вставить("Ссылка",ЭтаФорма.СХКСписание);
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыЗаказа,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		//@skip-check notify-description-to-server-procedure
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
		ОткрытьФорму("Обработка.СХК_МобильныйСклад.Форма.ФормаСборки", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
	Иначе
		ОткрытьФормуСообщения(НСтр);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНомерСтрокиДокумента(Ном,Сер,Уп)
	
	ош = "";
	
	Таб = СсылкаДок.Ссылка.ОтгружаемыеТовары.Выгрузить(); 
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",Ном);
	Отбор.Вставить("Серия",Сер);
	Отбор.Вставить("Упаковка",Уп);
	
	Строки = Таб.НайтиСтроки(Отбор);
	Если Строки.Количество() = 1 Тогда
		Если Строки[0].Действие <> Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать Тогда
			Возврат Число(Строки[0].НомерСтроки);
		Иначе
			ош = "Эту позицию НЕ ОТГРУЖАТЬ";
		КонецЕсли;
	Иначе
		ош = "Ошибка в документе";
	КонецЕсли;
	
	Возврат ош;
	
КонецФункции

#Область ОбластьСтатусыДокументов

&НаСервере
Функция ПолучитьСтатусСборкиОрдера()
	Возврат ЭтотОбъект.СХКСписание.Собран;	
КонецФункции

&НаСервере
Функция ОрдерРазмещен()
	
	Возврат СХК_ТСДСклад.ПоискОрдераЯчейки(ЭтаФорма.СсылкаДок).Количество();	
	
КонецФункции


#КонецОбласти

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыНовыйЗаказ(Значение, ДопПараметры) Экспорт 
		
	ОбработатьЗакрытиеФормыНовыйЗаказнаСервере();	
	
	Если ПолучитьСтатусСборкиОрдера() Тогда
		ВывестиВопрос();
	КонецЕсли;
		
КонецПроцедуры 

&НаСервере
Процедура ОбработатьЗакрытиеФормыНовыйЗаказнаСервере()
	ЭтаФорма.СписокТовары.Очистить();
	ЭтаФорма.СписокТовары.Загрузить(ЭтаФорма.СХКСписание.ТоварыПоРаспоряжениям.Выгрузить());

	ТСобр = ЭтаФорма.СХКСписание.СобранныеТовары.Выгрузить();

	Для Каждого стр Из СписокТовары Цикл
		Если стр.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара Тогда
			стр.Собран = Истина;
		Иначе
			НСтр = ПолучитьНомерСтрокиДокумента(стр.Номенклатура, стр.Серия, стр.Упаковка);
			Если ТИПЗНЧ(НСтр) = ТИП("Число") Тогда
				Отбор = Новый Структура;
				Отбор.Вставить("Номенклатура", стр.Номенклатура);
				Отбор.Вставить("Серия", стр.Серия);
				Отбор.Вставить("НомерСтрокиТовара", НСтр);
				Строки = ТСобр.НайтиСтроки(Отбор);
				итКол = 0;
				Если Строки.Количество() >= 1 Тогда

					Для сч = 0 По Строки.Количество() - 1 Цикл
						итКол = итКол + Строки[сч].Количество;
					КонецЦикла;

					Если итКол = стр.Количество Тогда
						стр.Собран = Истина;
					ИначеЕсли итКол > стр.Количество Тогда
						ОшибкаСборки = Истина;
						Прервать;
					Иначе
						стр.Собран = Ложь;
					КонецЕсли;

				КонецЕсли;
			Иначе
				СписокТовары.Удалить(стр);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
 
	Отбор = Новый Структура;
	Отбор.Вставить("Собран", Ложь);
	Строки =ЭтаФорма.СХКСписание.ТоварыПоРаспоряжениям.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Или ЭтаФорма.СписокТовары.Количество() = 0 Тогда

		Д = СсылкаДок.ПолучитьОбъект();

		Если Д.Статус <> Перечисления.СтатусыРасходныхОрдеров.Отгружен Тогда

			Д.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен; 

			Для Каждого стр из Д.ОтгружаемыеТовары Цикл
				стр.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
			КонецЦикла;

			Попытка
				Д.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить("Статус расходного ордера не изменен !!!");
			КонецПопытки;

		КонецЕсли;

		ЭтаФорма.Элементы.ЗакрытьОрдер.Доступность = Истина;

	КонецЕсли;

КонецПроцедуры 
////////////////////////////////
&НаКлиенте 
Процедура ВывестиВопрос()
	
	//@skip-check undefined-function
	Ответ = Вопрос("Разместить ордер ?",//"Ордер собран",//"Разместить ордер ?",
	РежимДиалогаВопрос.ДаНетОтмена,
	0, // таймаут в секундах
	КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
	"Разместить ордер в ячейке" // (необ.) заголовок
	//"По данному ордеру все собрано !!!"
	);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		//ЭтаФорма.Закрыть();
		Отбор = Новый Структура;
		Отбор.Вставить("ДокументОрдер",СсылкаДок);
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		//@skip-check notify-description-to-server-procedure
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщенияВопроса", ЭтаФорма);
		ОткрытьФорму("Обработка.СХК_МобильныйСклад.Форма.ФормаРазместитьОрдер", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщенияВопроса(Значение, ДопПараметры) Экспорт 
					
КонецПроцедуры

////////////////////////////////
&НаКлиенте
Процедура ОткрытьФормуСообщения(Сообщение) 
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ошибка",Строка(Сообщение));
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	//@skip-check notify-description-to-server-procedure
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщения", ЭтаФорма);
	ОткрытьФорму("Обработка.СХК_МобильныйСклад.Форма.ФормаСообщений", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщения(Значение, ДопПараметры) Экспорт 
	ЭтаФорма.Закрыть();						
КонецПроцедуры


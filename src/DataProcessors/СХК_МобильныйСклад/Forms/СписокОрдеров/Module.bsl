
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтотОбъект.ПериодДата = ТекущаяДата(); 
	//ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ПериодДата;
	//ЭтаФорма.НачатьРедактированиеЭлемента();
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала",НачалоДня(ЭтотОбъект.ПериодДата));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",КонецДня(ЭтотОбъект.ПериодДата));
	АктивироватьПоиск();
КонецПроцедуры


#Область ОбщаяОбласть
&НаКлиенте
Процедура ОткрытьФормуВыбор(ИмяФормы,СтруктураПараметры)
	
	АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(СтруктураПараметры,Новый УникальныйИдентификатор);
	_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
	ОткрытьФорму("Обработка.СХК_МобильныйСклад.Форма."+ИмяФормы, _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//ОткрытьФорму("ВнешняяОбработка.СХК_МобильныйСклад.Форма."+ИмяФормы, _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
#КонецОбласти


#Область ВыборОрдера
&НаКлиенте
Процедура QRОрдераИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Рез = ПоискОрдерПриИзмененииНаСервере(Текст);
	Если Рез <> Ложь Тогда
		Если ПолучитьСтатусСборкиОрдера(Рез) И ОрдерРазмещен(Рез) = 0 Тогда
			ВывестиВопрос(Текст);
		ИначеЕсли ПолучитьСтатусСборкиОрдера(Рез) И ОрдерРазмещен(Рез) >= 1 Тогда   
			СтруктураПараметры = Новый Структура;
			СтруктураПараметры.Вставить("ДокументОрдер",Рез);
			ОткрытьФормуВыбор("ФормаРазместитьОрдер",СтруктураПараметры);
			
		Иначе
			СписокКнопок = Новый СписокЗначений;
			СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Собрать");
			СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Разместить");
			
			ВывестиВопросСобратьРазместить(Текст,СписокКнопок);
	КонецЕсли;
	
	Иначе
		Сообщить("Не нашел");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ВывестиВопросСобратьРазместить(ДокНомер,СписокКнопок)
      ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаОтветаНаВопросОрдер",
	  				ЭтотОбъект,
					Новый Структура("Ссылка", ДокНомер, Истина)), "Собрать/Разместить ордер?",СписокКнопок,10);	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросОрдер(Значение, ДопПараметры) Экспорт 

	Если Значение = КодВозвратаДиалога.Да Тогда
	    СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("Ссылка",ПоискОрдерПриИзмененииНаСервере(ДопПараметры.Ссылка));
		ОткрытьФормуВыбор("Ордер",СтруктураПараметры); 
	ИначеЕсли Значение = КодВозвратаДиалога.Нет Тогда
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("ДокументОрдер",ПоискОрдерПриИзмененииНаСервере(ДопПараметры.Ссылка));
		ОткрытьФормуВыбор("ФормаРазместитьОрдер",СтруктураПараметры);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСтатусСборкиОрдера(ДокументОрдер) 
	Возврат СХК_ТСДСклад.ПоискСХКСписание(ДокументОрдер); 	
КонецФункции


&НаСервере
Функция ОрдерРазмещен(ДокументОрдер)
	
	Возврат СХК_ТСДСклад.ПоискОрдераЯчейки(ДокументОрдер).Количество();	
	
КонецФункции


	
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)  
	
	Рез = ПоискОрдерПриИзмененииНаСервере(Элемент.ТекущиеДанные.Номер);
	Если Рез <> Ложь Тогда 
		Если ПолучитьСтатусСборкиОрдера(Рез) И ОрдерРазмещен(Рез) = 0 Тогда
			ВывестиВопрос(Элемент.ТекущиеДанные.Номер);
		ИначеЕсли ПолучитьСтатусСборкиОрдера(Рез) И ОрдерРазмещен(Рез) >= 1 Тогда   
			СтруктураПараметры = Новый Структура;
			СтруктураПараметры.Вставить("ДокументОрдер",Рез);
			ОткрытьФормуВыбор("ФормаРазместитьОрдер",СтруктураПараметры);
			
		Иначе
			СписокКнопок = Новый СписокЗначений;
			СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Собрать");
			СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Разместить");
			
			ВывестиВопросСобратьРазместить(Элемент.ТекущиеДанные.Номер,СписокКнопок);
	КонецЕсли;
	Иначе
		Сообщить("Не нашел");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////
&НаКлиенте 
Процедура ВывестиВопрос(ДокНомер)
	
	//@skip-check undefined-function
	Ответ = Вопрос("Разместить ордер ?",//"Ордер собран",//"Разместить ордер ?",
	РежимДиалогаВопрос.ДаНетОтмена,
	0, // таймаут в секундах
	КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
	"Разместить ордер в ячейке" // (необ.) заголовок
	//"По данному ордеру все собрано !!!"
	);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		//ЭтаФорма.Закрыть();
		Отбор = Новый Структура;
		Отбор.Вставить("ДокументОрдер",ПоискОрдерПриИзмененииНаСервере(ДокНомер));
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		//@skip-check notify-description-to-server-procedure
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщенияВопроса", ЭтаФорма);
		ОткрытьФорму("Обработка.СХК_МобильныйСклад.Форма.ФормаРазместитьОрдер", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщенияВопроса(Значение, ДопПараметры) Экспорт 
					
КонецПроцедуры


#КонецОбласти


&НаСервере
Функция ПоискОрдерПриИзмененииНаСервере(Номер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РасходныйОрдерНаТовары.Номер = &Номер";
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ЭтотОбъект.ПериодДата)-30*86400);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ЭтотОбъект.ПериодДата)+10*86400);
	Запрос.УстановитьПараметр("Номер", Номер);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()=1 Тогда
		Пока Рез.Следующий() Цикл
			Ссылка = Рез.Ссылка;
			Прервать;
		КонецЦикла;
	Иначе
		Ссылка = Ложь;
	КонецЕсли;
	
	Возврат Ссылка;
	
КонецФункции



&НаКлиенте
Процедура ОбработатьЗакрытиеФормыНовыйЗаказ(Значение, ДопПараметры) Экспорт
	ЭтаФорма.ОбновитьОтображениеДанных();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтаФорма.Элементы.QRОрдера.РедактированиеТекста = Истина;
	АктивироватьПоиск();
	ПодключитьОбработчикОжидания("АктивироватьПоиск",5,Истина);
КонецПроцедуры  




&НаКлиенте
Процедура АктивироватьПоиск() 
	ОчиститьШКСервер(); 
	Элементы.QRОрдера.ОбновитьТекстРедактирования();
	Элементы.QRОрдера.Видимость = Ложь;
	Элементы.QRОрдера.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.QRОрдера; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
	ЗаполнитьСписок();
КонецПроцедуры 

&НаСервере
Процедура ОчиститьШКСервер()
	QRОрдера = "";
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок()
	
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала",НачалоДня(ЭтотОбъект.ПериодДата-30*86400));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",КонецДня(ЭтотОбъект.ПериодДата));
	Список.Параметры.УстановитьЗначениеПараметра("Склад",Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции")); 
	Список.Параметры.УстановитьЗначениеПараметра("СкладЦК",Справочники.Склады.НайтиПоНаименованию("ЦК Цех Комплектации")); 

КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()

	ЭтаФорма.Элементы.QRОрдера.РедактированиеТекста = Истина;
	АктивироватьПоиск();

КонецПроцедуры






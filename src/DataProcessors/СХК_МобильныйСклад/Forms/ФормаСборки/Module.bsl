
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);

	Если СтруктураПараметров.Ссылка <> "" Тогда
    	ЗаполнитьИнформацию(СтруктураПараметров.НомерСтроки,
    						СтруктураПараметров.ШКУпаковки,
    						СтруктураПараметров.Номенклатура,
    						СтруктураПараметров.СерияНоменклатуры,
    						СтруктураПараметров.Упаковка,
    						СтруктураПараметров.Ссылка);
	Иначе
		Сообщить("Не удалось создать документ отгрузки");	
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьИнформацию(НомСтроки,ПШКУпаковки,ПНоменклатура,ПСерияНоменклатуры,ПУпаковка,Док) 

	ДокСборка = Док;
	Собрано = 0;

	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",ПНоменклатура);
	Отбор.Вставить("Серия",ПСерияНоменклатуры);
	Отбор.Вставить("Упаковка",ПУпаковка);
	
	ТТовары = Док.ДокОснования.ОтгружаемыеТовары.Выгрузить();
	Строки = ТТовары.НайтиСтроки(Отбор);
	
	Если Строки.Количество() >=1 Тогда 
		Для счетчика = 0 По Строки.Количество()-1 Цикл
			Если Строки[счетчика].Действие <> Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать Тогда

				ТоварыРасп = Док.ТоварыПоРаспоряжениям.Выгрузить();
				СтрокиРасп = ТоварыРасп.НайтиСтроки(Отбор);
				Для стрСч = 0 По СтрокиРасп.Количество()-1 Цикл					
					Если СтрокиРасп[стрСч].Собран = Ложь Тогда
						ШКУпаковки = ПШКУпаковки;
						Номенклатура = СтрокиРасп[стрСч].Номенклатура;
						Серия = СтрокиРасп[стрСч].Серия;
						Количество = СтрокиРасп[стрСч].Количество;
						КоличествоУпаковок = СтрокиРасп[стрСч].КоличествоУпаковок;
						Упаковка = СтрокиРасп[стрСч].Упаковка;
		
						СобТовары = Док.СобранныеТовары.Выгрузить();
						СобОтбор = Новый Структура;
						СобОтбор.Вставить("Номенклатура",ПНоменклатура);
						СобОтбор.Вставить("Серия",ПСерияНоменклатуры);
						СобОтбор.Вставить("ШКУпаковки",ПШКУпаковки);
						СобСтроки = СобТовары.НайтиСтроки(СобОтбор);
						
						КолСобрано = 0;
						Для сч=0 По СобСтроки.Количество()-1 Цикл
							КолСобрано = КолСобрано + СобСтроки[сч].Количество;
						КонецЦикла;
		
						Собрано = КолСобрано;
						
						Доступно.Параметры.УстановитьЗначениеПараметра("Номенклатура",ПНоменклатура);
						Доступно.Параметры.УстановитьЗначениеПараметра("Серия",Строка(ПСерияНоменклатуры)); 
						
						Если Количество = Собрано Тогда
							ЭтаФорма.Элементы.ГруппаСборка.Видимость = Ложь;	
							ЭтаФорма.Элементы.ГруппаСообщение.Видимость = Истина;	
							ЭтаФорма.Элементы.Декорация1.Заголовок = Строка(СтрокиРасп[стрСч].Номенклатура) + " собрана полностью";
						КонецЕсли;
					Иначе
						ЭтаФорма.Элементы.ГруппаСборка.Видимость = Ложь;	
						ЭтаФорма.Элементы.ГруппаСообщение.Видимость = Истина;	
						ЭтаФорма.Элементы.Декорация1.Заголовок = Строка(Строки[стрСч].Номенклатура) + " собрана полностью";
					КонецЕсли;
				КонецЦикла;
				
			Иначе
					ЭтаФорма.Элементы.ГруппаСборка.Видимость = Ложь;	
					ЭтаФорма.Элементы.ГруппаСообщение.Видимость = Истина;	
					ЭтаФорма.Элементы.Декорация1.Заголовок = Строка(Строки[0].Номенклатура) + " данную позицию не отгружать";
				
			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры   


&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры


&НаКлиенте
Процедура ЯчейкаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если ВыборЯчейки(Текст) = Истина Тогда
		ЭтаФорма.Элементы.ШК.Доступность = Истина;
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ШК;
		# Если МобильныйКлиент Тогда
			НачатьРедактированиеЭлемента();
		#КонецЕсли

	Иначе
		ОткрытьФормуСообщения("Товара нет в этой ячейке");	
	КонецЕсли;
	
КонецПроцедуры  

&НаСервере
Функция ВыборЯчейки(Текст) 

	Ош = Истина;
	
	Я = Справочники.СХК_СкладЯчейки.НайтиПоРеквизиту("ШтрихКод",СокрЛП(Текст));
	Если Я.Пустая() = Ложь Тогда 
		ЭтаФорма.ЯчейкаВыбор = Я;
		ДоступноЯчейка = ПроверитьЯчейку();
		Если ДоступноЯчейка>=1 Тогда
        	Ош = Истина;
		Иначе
			Ош = Ложь;
		КонецЕсли;
	Иначе
		ЭтаФорма.ЯчейкаВыбор = Справочники.СХК_СкладЯчейки.ПустаяСсылка();
		Ош = Ложь;
	КонецЕсли;
	
	Возврат Ош; 
	
КонецФункции

&НаСервере
Функция ПроверитьЯчейку()
	Ош = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК Остаток,
	               |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
	               |ИЗ
	               |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	               |ГДЕ
	               |	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	               |	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
	               |	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка И СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток >= &Остаток "; 
	Запрос.УстановитьПараметр("Серия",Строка(ЭтаФорма.Серия));
	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.Номенклатура);
	Запрос.УстановитьПараметр("Ячейка",ЭтаФорма.ЯчейкаВыбор);  
	Запрос.УстановитьПараметр("Остаток",1);  
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда  
		Ош = Рез.Остаток;
	ИначеЕсли ЭтаФорма.Номенклатура.Наименование = "Поддон евро 1,2х0,8 м (б/у)" Тогда
		Ош = ЭтаФорма.Количество;	
	Иначе
		
	КонецЕсли;
	
	Возврат Ош;
	
	
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтаФорма.Элементы.Ячейка.РедактированиеТекста = Истина;
	АктивироватьПоиск();
	//ПодключитьОбработчикОжидания("АктивироватьПоиск",5,Истина);
КонецПроцедуры  

&НаКлиенте
Процедура АктивироватьПоиск() 
	ОчиститьЯчейкаСервер(); 
	Элементы.Ячейка.ОбновитьТекстРедактирования();
	Элементы.Ячейка.Видимость = Ложь;
	Элементы.Ячейка.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.Ячейка; 
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 

&НаСервере
Процедура ОчиститьЯчейкаСервер()
	Ячейка = "";
КонецПроцедуры


&НаКлиенте
Процедура ШКИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если ПроверкаНаЧисло(Текст) = Истина Тогда
		ОткрытьФормуСообщения("Отсканируйте QR");
	Иначе
		Мас = Новый Массив;
		Если СтрНайти(Текст, ";") = 0 Тогда
			Если СокрЛП(Строка(Текст)) = СокрЛП(Строка(ЭтаФорма.Серия)) Тогда
				ОткрытьФормуФормаСканШК(Текст);
			ИначеЕсли СокрЛП(Строка(Текст)) = "Z00000000000001" Тогда 
				мМас = Новый Массив;
				мМас.Добавить("");
				мМас.Добавить("Z00000000000001");
				ПроверитьДобавитьСборку(мМас);	
			Иначе
				ОткрытьФормуСообщения("Отсканируйте правильный QR");
			КонецЕсли;
			
			//Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
			//ПоказатьПредупреждение(Оповещение,"Отсканируйте палетный лист",10,"Внимание!!!");
		Иначе
			Мас = Разложить(Текст,";");
			Если Мас.Количество() = 2 Тогда
				ПроверитьДобавитьСборку(Мас);
			Иначе
				Попытка
					ПроверитьДобавитьСборкуПалет(Мас);
				Исключение
				    ОткрытьФормуСообщения("Отсканируйте правильный QR");
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
 КонецПроцедуры 

/////////////////// +Сканирование палетного листа
&НаКлиенте
Процедура ПроверитьДобавитьСборкуПалет(Мас)
	Если СокрЛП(Строка(Мас[1])) = СокрЛП(Строка(ЭтаФорма.Серия)) Тогда  
		//Сообщить("1");
		Кол = ПолучитьКоличествоСканПалет(Мас);
		Если ТИПЗНЧ(Кол) = ТИП("Число") и Кол >=1 Тогда
		//Сообщить("2");

			НШк = ПолучитьШК(Мас[3]);
			ДВСбор =  ДобавитьВСборкуПалет(ЭтаФорма.Номенклатура,Мас[1],НШк,ЭтаФорма.ЯчейкаВыбор,Кол); 
			Если ДВСбор = 0 Тогда
				ОткрытьФормуСообщения("Количество привышает, отсканируйте другую упаковку");
			ИначеЕсли ДВСбор = 1 Тогда
				Доступно.Параметры.УстановитьЗначениеПараметра("Номенклатура",ЭтаФорма.Номенклатура);
				Доступно.Параметры.УстановитьЗначениеПараметра("Серия",Строка(ЭтаФорма.Серия)); 
			ИначеЕсли ДВСбор = 3 Тогда
				ЭтаФорма.Закрыть();
			КонецЕсли;
			
		Иначе
			ОткрытьФормуСообщения(Кол);//"Не хватает товара, измените упаковку");
		КонецЕсли;
	Иначе
		ОткрытьФормуСообщения("Серия не верна");//"Не хватает товара, измените упаковку");
	КонецЕсли;

	ЭтаФорма.Элементы.ШК.Доступность = Истина;
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ШК;
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьШК(наименованиеШК)
	
	ош = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Расш1_РегистрШтрихЭтикетка.Штрихкод КАК Штрихкод,
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура КАК Номенклатура,
	|	Расш1_РегистрШтрихЭтикетка.Характеристика КАК Характеристика,
	|	Расш1_РегистрШтрихЭтикетка.Упаковка КАК Упаковка
	|ИЗ
	|	РегистрСведений.Расш1_РегистрШтрихЭтикетка КАК Расш1_РегистрШтрихЭтикетка
	|ГДЕ
	|	Расш1_РегистрШтрихЭтикетка.Номенклатура = &Номенклатура
	|	И Расш1_РегистрШтрихЭтикетка.Упаковка.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Наименование",наименованиеШК);
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		ош =  Рез.Штрихкод;
	КонецЕсли;
	
	Возврат ош;
	
КонецФункции

&НаСервере
Функция ПолучитьКоличествоСканПалет(Мас)
	Ош = 0;  
	
	Попытка
		ДокЭтапа = Документы.ЭтапПроизводства2_2.ПолучитьСсылку(Новый УникальныйИдентификатор(Мас[0])) ;
		ЗапросПалетник = Новый Запрос;
		ЗапросПалетник.Текст = "ВЫБРАТЬ
		|	СХК_ВыпускПоЭтапу.Период КАК Период,
		|	СХК_ВыпускПоЭтапу.ЭтапПроизводства КАК ЭтапПроизводства,
		|	СХК_ВыпускПоЭтапу.СкладПолучатель КАК СкладПолучатель,
		|	СХК_ВыпускПоЭтапу.Количество КАК Количество,
		|	СХК_ВыпускПоЭтапу.Статус КАК Статус,
		|	СХК_ВыпускПоЭтапу.Помещение КАК Помещение,
		|	СХК_ВыпускПоЭтапу.Упаковка КАК Упаковка,
		|	СХК_ВыпускПоЭтапу.НомерСтрокиДок КАК НомерСтрокиДок
		|ИЗ
		|	РегистрСведений.СХК_ВыпускПоЭтапу КАК СХК_ВыпускПоЭтапу
		|ГДЕ
		|	СХК_ВыпускПоЭтапу.ЭтапПроизводства = &ЭтапПроизводства
		|	И СХК_ВыпускПоЭтапу.НомерСтрокиДок = &НомерСтрокиДок";
		ЗапросПалетник.УстановитьПараметр("ЭтапПроизводства",ДокЭтапа.Ссылка);
		ЗапросПалетник.УстановитьПараметр("НомерСтрокиДок",Число(Мас[2]));  
		
		РезультатЗапроса = ЗапросПалетник.Выполнить().Выбрать();
		
		Если РезультатЗапроса.Следующий() Тогда
			КоличествоПоПалету = РезультатЗапроса.Количество;	
		КонецЕсли;
		
	Исключение
		
		ош =  "При сканировании произошла ошибка";
		
	Конецпопытки;
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК Остаток,
	|	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
	|ИЗ
	|	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	|ГДЕ
	|	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	|	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
	|	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка И СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток >= &Остаток "; 
	Запрос.УстановитьПараметр("Серия",Строка(Мас[1]));
	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.Номенклатура);
	Запрос.УстановитьПараметр("Ячейка",ЭтаФорма.ЯчейкаВыбор);  
	Запрос.УстановитьПараметр("Остаток",КоличествоПоПалету);  
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
    	Ош = КоличествоПоПалету;
	Иначе
		Ош = "В этой ячейке нет товара или не хватает количества";	
	КонецЕсли;
	
	Возврат Ош;
	
	
КонецФункции


// 0 - Ошибка
// 1- Все норм
// 3- Собрано
&НаСервере
Функция ДобавитьВСборкуПалет(Номен,Сер,Штрих,Яч,Кол)
	Рез = 1;
	
	Д = ЭтаФорма.ДокСборка.ПолучитьОбъект();
	
	Отбор = Новый Структура;
	Отбор.Вставить("НомерСтроки",ЭтаФорма.СтрокаДокумента);
	
	ТТовары = Д.ТоварыПоРаспоряжениям.Выгрузить();
	Строки = ТТовары.НайтиСтроки(Отбор);

	ОтборС = Новый Структура;
	ОтборС.Вставить("НомерСтрокиТовара",ЭтаФорма.СтрокаДокумента);

	СобТовары = Д.СобранныеТовары.Выгрузить();
	СобСтроки = СобТовары.НайтиСтроки(ОтборС);
	
	КолДок = Строки[0].Количество; 
	
	К = 0;
	Для сч=0 По СобСтроки.Количество()-1 Цикл
		К = К + СобСтроки[сч].Количество;
	КонецЦикла;

	К = К + Кол;	
	
	Уп = ПолучитьКоэф(ЭтаФорма.Номенклатура,Штрих); 
	
	Если КолДок >= К И Строки[0].Собран = Ложь Тогда 
		
		Т = Д.СобранныеТовары.Добавить();
		Т.Номенклатура = ЭтаФорма.Номенклатура;
		Т.Серия = ЭтаФорма.Серия;

		Т.Количество = Кол;
		Попытка
			Т.КоличествоУпаковок = Кол/Уп.Числитель; 
			Т.Упаковка = Уп;
		Исключение
			Т.КоличествоУпаковок = Кол/ЭтаФорма.Серия.СХК_Упаковка.Числитель;
			Т.Упаковка = ЭтаФорма.Серия.СХК_Упаковка;
		КонецПопытки;			
		
		Т.Ячейка = ЭтаФорма.ЯчейкаВыбор;
		Т.СтрокаДокумента = ЭтаФорма.СтрокаДокумента;
		
		Если КолДок  = К Тогда
			//Строки[0].Собран = Истина;
			Если Д.ТоварыПоРаспоряжениям.Количество()>=1 Тогда 
				Д.ТоварыПоРаспоряжениям[ЭтаФорма.СтрокаДокумента-1].Собран = Истина; 
				//Д.ТоварыПоРаспоряжениям.Сортировать("Собран Возр");
			Иначе
				Д.ТоварыПоРаспоряжениям[0].Собран = Истина;
			КонецЕсли;
			Рез = 3; 
		Иначе
			Рез = 1;	
		КонецЕсли;
		Д.Записать(РежимЗаписиДокумента.Проведение);
		ЭтаФорма.Собрано = К;
		
	Иначе
		Рез = 0;	
	КонецЕсли;
	
	
	Возврат Рез; 
	
КонецФункции


/////////////////// -Сканирование палетного листа

&НаКлиенте
Функция ПроверитьДобавитьСборку(Мас)
	Если СокрЛП(Строка(Мас[0])) = СокрЛП(Строка(ЭтаФорма.Серия)) Тогда
		Кол = ПолучитьКоличествоСкан(Мас);
		Если ТИПЗНЧ(Кол) = ТИП("Число") и Кол >=1 Тогда
			ДВСбор =  ДобавитьВСборку(ЭтаФорма.Номенклатура,Мас[0],Мас[1],ЭтаФорма.ЯчейкаВыбор,Кол); 
			Если ДВСбор = 0 Тогда
				ОткрытьФормуСообщения("Количество привышает, отсканируйте другую упаковку");
			ИначеЕсли ДВСбор = 1 Тогда
				Доступно.Параметры.УстановитьЗначениеПараметра("Номенклатура",ЭтаФорма.Номенклатура);
				Доступно.Параметры.УстановитьЗначениеПараметра("Серия",Строка(ЭтаФорма.Серия)); 
			ИначеЕсли ДВСбор = 3 Тогда
				ЭтаФорма.Закрыть();
			КонецЕсли;
			
		Иначе
			ОткрытьФормуСообщения(Кол);//"Не хватает товара, измените упаковку");
		КонецЕсли;
	Иначе
		ОткрытьФормуСообщения("Серия не верна");//"Не хватает товара, измените упаковку");
	КонецЕсли;

	ЭтаФорма.Элементы.ШК.Доступность = Истина;
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ШК;
	# Если МобильныйКлиент Тогда
		НачатьРедактированиеЭлемента();
	#КонецЕсли
	
КонецФункции

// Добавляет товар в сборку и обновляет состояние документа.
//
// Параметры:
//   Номен - <Тип> - Номенклатура добавляемого товара
//   Сер - <Тип> - Серия добавляемого товара
//   Штрих - Строка - Штрих-код упаковки
//   Яч - <Тип> - Ячейка хранения
//   Кол - <Тип> - Количество добавляемого товара
//
// Возвращаемое значение:
//   Число - Результат операции: 0 - Ошибка, 1 - Успешно, 3 - Товар собран полностью

// 0 - Ошибка
// 1- Все норм
// 3- Собрано
&НаСервере
Функция ДобавитьВСборку(Номен,Сер,Штрих,Яч,Кол)
	Рез = 1;
	
	ДСборки = ДокСборка.ПолучитьОбъект(); // ДокументСсылка.СХК_СписаниеЯчейки;	
	
	ОтборТПР = Новый Структура;
	ОтборТПР.Вставить("Номенклатура",Номенклатура);
	ОтборТПР.Вставить("Серия",Серия);
	ОтборТПР.Вставить("Упаковка",Упаковка);
	ТоварыТПР = ДСборки.ТоварыПоРаспоряжениям.Выгрузить();
	СтрокиТПР = ТоварыТПР.НайтиСтроки(ОтборТПР); 
	

	ОтборС = Новый Структура;
	ОтборС.Вставить("ШКУпаковки",ШКУпаковки);
	ОтборС.Вставить("Серия",Серия);

	СобТовары = ДСборки.СобранныеТовары.Выгрузить();
	СобСтроки = СобТовары.НайтиСтроки(ОтборС);
	
	КолДок = СтрокиТПР[0].Количество; 
	
	КолСобрано = 0;
	Для сч=0 По СобСтроки.Количество()-1 Цикл
		КолСобрано = КолСобрано + СобСтроки[сч].Количество;
	КонецЦикла;

	Если Штрих = "Z00000000000001" Тогда
		КолСобрано = КолСобрано + 1;	
	Иначе
		УпШтрих = ПолучитьКоэф(Номенклатура,Штрих); 
		КолСобрано = КолСобрано + УпШтрих.Числитель;
	КонецЕсли;
	

	Если КолДок >= КолСобрано И СтрокиТПР[0].Собран = Ложь Тогда 
		
		ТабСборки = ДСборки.СобранныеТовары.Добавить();
		ТабСборки.Номенклатура = Номенклатура;
		ТабСборки.Серия = Серия;

		Если Штрих = "Z00000000000001" Тогда
			ТабСборки.Количество = 1;	
		Иначе
			ТабСборки.Количество = УпШтрих.Числитель;
		КонецЕсли;
		
		ТабСборки.КоличествоУпаковок = 1;
		ТабСборки.Упаковка = УпШтрих;
		ТабСборки.Ячейка = ЯчейкаВыбор;
		ТабСборки.ШКУпаковки = ШКУпаковки;
		
		Если КолДок  = КолСобрано Тогда
			Если ДСборки.ТоварыПоРаспоряжениям.Количество()>=1 Тогда 
				ДСборки.ТоварыПоРаспоряжениям[СтрокиТПР[0].НомерСтроки-1].Собран = Истина; 
			Иначе
				ДСборки.ТоварыПоРаспоряжениям[0].Собран = Истина;
			КонецЕсли;
			Рез = 3; 
		Иначе
			Рез = 1;	
		КонецЕсли;
		ДСборки.Записать(РежимЗаписиДокумента.Проведение);
		ЭтаФорма.Собрано = КолСобрано;
		
	Иначе
		Рез = 0;	
	КонецЕсли;
	
	
	Возврат Рез; 
	
КонецФункции

&НаСервере
Функция ПолучитьКоличествоСкан(Мас)
	Ош = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток КАК Остаток,
	               |	СХК_ТоварыНаСкладеОстатки.Ячейка КАК Ячейка
	               |ИЗ
	               |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки КАК СХК_ТоварыНаСкладеОстатки
	               |ГДЕ
	               |	СХК_ТоварыНаСкладеОстатки.Серия = &Серия
	               |	И СХК_ТоварыНаСкладеОстатки.Номенклатура = &Номенклатура
	               |	И СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка И СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток >= &Остаток "; 
	Запрос.УстановитьПараметр("Серия",Строка(Мас[0]));
	Запрос.УстановитьПараметр("Номенклатура",ЭтаФорма.Номенклатура);
	Запрос.УстановитьПараметр("Ячейка",ЭтаФорма.ЯчейкаВыбор);  
	Запрос.УстановитьПараметр("Остаток",1);  
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда 
		Коэф = ПолучитьКоэф(ЭтаФорма.Номенклатура,Мас[1]); 
		Если ТипЗНЧ(Коэф.Числитель) = ТИП("Число") и Коэф.Числитель > 0 тогда
			Если Рез.Остаток >= Коэф.Числитель Тогда
				Ош = Коэф.Числитель;
			Иначе
				Ош = "Не хватает товара, измените упаковку";	
			КонецЕсли;
		Иначе
			Ош = "При сканировании произошла ошибка";	
		КонецЕсли;
	ИначеЕсли Мас[1] = "Z00000000000001" Тогда
		Ош = 1;
	Иначе
		Ош = "В этой ячейке нет товара";	
	КонецЕсли;
	
	Возврат Ош;
	
	
КонецФункции


&НаСервере
Функция ПолучитьКоэф(Номен,Штр) 
	Ош = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ШтрихкодыНоменклатуры.Упаковка КАК Упаковка
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	               |	И ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
 	Запрос.УстановитьПараметр("Номенклатура",Номен);
	Запрос.УстановитьПараметр("Штрихкод",Штр);

	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда 
		Ош = Рез.Упаковка;
	КонецЕсли;
	
	Возврат Ош;

КонецФункции



&НаКлиенте
Процедура ОткрытьФормуФормаСканШК(Штр) 
		Отбор = Новый Структура;
		Отбор.Вставить("Штрих",Штр);
		Отбор.Вставить("Серия",ЭтаФорма.Серия);
		Отбор.Вставить("Номенклатура",ЭтаФорма.Номенклатура);
		Отбор.Вставить("Ячейка",ЭтаФорма.ЯчейкаВыбор);
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщенияСканШК", ЭтаФорма);
		ОткрытьФорму("Обработка.СХК_МобильныйСклад.Форма.ФормаСканШК", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщенияСканШК(Значение, ДопПараметры) Экспорт 
	Если Значение.Ош = Истина Тогда 
		Мас = Новый Массив;
		Мас.Добавить(Значение.Серия);
		Мас.Добавить(Значение.Штр);
		ПроверитьДобавитьСборку(Мас);
	Иначе
		ОткрытьФормуСообщения(Строка(Значение.Ошибка));	
	КонецЕсли;
	
	//	ПроверитьСерию(Значение.СерияНоменклатуры);
	//	Ош = ДобавитьИзменитьТЧТовары(Значение.Количество,
	//	Значение.Номенклатура,
	//	Значение.СерияНоменклатуры,
	//	Значение.СерияНоменклатуры) ; 
	//	Если ТипЗнч(Ош) = Тип("Структура") Тогда  
	//		ОткрытьФормуСтрокиЗаказа(Ош);
	//	ИначеЕсли ТипЗнч(Ош) = Тип("Строка") Тогда
	//		ОткрытьФормуСообщения(Ош);
	//	КонецЕсли;
	//КонецЕсли;
	//ОбновитьТЧДокСервер();						
КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьФормуСообщения(Сообщение) 
	Отбор = Новый Структура;
	Отбор.Вставить("Ошибка",Строка(Сообщение));
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(Отбор,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСообщения", ЭтаФорма);
		ОткрытьФорму("Обработка.СХК_МобильныйСклад.Форма.ФормаСообщений", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСообщения(Значение, ДопПараметры) Экспорт 
						
КонецПроцедуры


&НаСервере
Функция ПроверкаНаЧисло(НашаСтрокаДляРазбора) Экспорт
	Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(НашаСтрокаДляРазбора) = Тип("Строка") Тогда
			Если НашаСтрокаДляРазбора = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ПМ = Число(НашаСтрокаДляРазбора);
		Исключение
			Возврат Ложь;
		КонецПопытки;
		Возврат Истина;
	КонецЕсли;
КонецФункции 


//////////////////////
Функция Разложить(Знач Стр, Разделитель = ";") Экспорт
	
	Список = Новый Массив();
	Длина = СтрДлина(Разделитель);
	
	Стр = СокрЛП(Стр);
	Поз = Найти(Стр, Разделитель);
	
	Пока 0 < Поз Цикл
		Список.Добавить(СокрП(Лев(Стр, Поз-1)));
		
		Стр = СокрЛ(Сред(Стр, Поз+Длина));
		Поз = Найти(Стр, Разделитель);
	КонецЦикла;
	
	Список.Добавить(Стр);
	
	Возврат Список;
	
КонецФункции


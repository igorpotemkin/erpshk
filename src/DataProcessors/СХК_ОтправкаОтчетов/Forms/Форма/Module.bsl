
&НаСервере
Процедура СформироватьНаСервере()
	ДокументРезультат=новый ТабличныйДокумент();
	
	СКД=Отчеты.МаркетингПродажи.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки=СКД.НастройкиПоУмолчанию;
	ДатаНачала=Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала");
	ДатаНачала.Значение=НачалоМесяца(ТекущаяДата());
	ДатаОкончания=Настройки.ПараметрыДанных.Элементы.Найти("ДатаОкончания");
	ДатаОкончания.Значение=КонецДня(ТекущаяДата());
 
	 	Расшифровка = Новый ДанныеРасшифровкиКомпоновкиДанных;
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;    
		
        //Передаем в макет компоновки схему, настройки и данные расшифровки
        МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, Расшифровка);    
        ВнешниеПараметры = Новый Структура;    
		
        //Выполним компоновку с помощью процессора компоновки
        ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		
		ТаблицаВеб = НаборВеб(ДатаНачала,ДатаОкончания);
		//
		ВнешниеНаборыДанных = Новый Структура("ТаблицаВеб", ТаблицаВеб);

        ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных, Расшифровка);    
		
        //Выводим результат в табличный документ
        ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
        ПроцессорВывода.УстановитьДокумент(ДокументРезультат);    
        ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);    	 
		
		ДокументРезультат.Записать("c:\temp\моржа.xls",ТипФайлаТабличногоДокумента.XLS);

КонецПроцедуры

&НаСервере
Функция НаборВеб(ДатаНачала,ДатаОкончания)  
	
	
	//ДатаНачала = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаНачала"); 
	//ДатаОкончания = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОкончания"); 
	 
	//
	

	Таб = Новый ТаблицаЗначений; 
	//Таб.Колонки.Добавить("День");
	Таб.Колонки.Добавить("Бренд");
	Таб.Колонки.Добавить("Номенклатура");  
	Таб.Колонки.Добавить("СуммаВыручки");
	Таб.Колонки.Добавить("КоличествоПродано");   
	Таб.Колонки.Добавить("Канал");
	Таб.Колонки.Добавить("КаналНаменование"); 
	Таб.Колонки.Добавить("ЗаказКлиента");
	Таб.Колонки.Добавить("Партнер");
	//Таб.Колонки.Добавить("ПКатегория");


	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
|	ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот КАК КоличествоОборот,
|	ВыручкаИСебестоимостьПродажОбороты.СуммаВыручкиОборот КАК СуммаВыручкиОборот,
|	ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры.Номенклатура.Марка КАК АналитикаУчетаНоменклатурыНоменклатураМарка,
|	ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры.Номенклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
|	ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаПоПартнерам.Партнер КАК АналитикаУчетаПоПартнерамПартнер
|ИЗ
|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты КАК ВыручкаИСебестоимостьПродажОбороты
|ГДЕ
|	ВыручкаИСебестоимостьПродажОбороты.ЗаказКлиента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания"; 
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала.Значение);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания.Значение);
	//Запрос.УстановитьПараметр("Сторно",Ложь); 
	//Запрос.УстановитьПараметр("ХозяйственнаяОперация",Перечисления.ХозяйственныеОперации.СторноРеализации);  
	//Запрос.УстановитьПараметр("ХозяйственнаяОперация2",Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	//Запрос.УстановитьПараметр("ЗаказКлиента",Тип("ДокументСсылка.ЗаказКлиента"));
	Рез = Запрос.Выполнить().Выбрать();

	//Пока Рез.Следующий() Цикл
	//	Сообщить(Рез.АналитикаУчетаПоПартнерамПартнер.ДополнительныеРеквизиты[2].Значение.Наименование);	
	//	
	//КонецЦикла;
	
	
	 
	
	//ТабИтог = Новый ТаблицаЗначений; 
	//ТабИтог.Колонки.Добавить("Онлайн");
	//ТабИтог.Колонки.Добавить("Офлайн");  
	//
	//Результат = Запрос.Выполнить().Выбрать();
	//Пока Результат.Следующий() Цикл
	//	Попытка
	//		Если Результат.АналитикаУчетаПоПартнерамПартнер.ДополнительныеРеквизиты[2].Значение.Наименование <> "" Тогда  
	//			Т = ТабИтог.Добавить();
	//			Если Результат.АналитикаУчетаПоПартнерамПартнер.ДополнительныеРеквизиты[2].Значение.Наименование = "E.comerce" Тогда
	//				Т.Онлайн = Результат.СуммаВыручкиОборот ; 
	//			Иначе
	//				Т.Офлайн = Результат.СуммаВыручкиОборот ;	
	//			КонецЕсли;
	//		КонецЕсли;
	//	Исключение
	//	КонецПопытки;
	//КонецЦикла;   
	////
	////ВнешниеНаборыДанных = Новый Структура("ТабИтог", ТабИтог);
	//////ВнешниеНаборыДанных.Вставить("ТабИтог", ТабИтог);
	//Онлайн = ТабИтог.Итог("Онлайн"); 
	//Офлайн = ТабИтог.Итог("Офлайн"); 
	//ИтогОнОф = Онлайн + Офлайн;
	//
	Рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		Попытка

		Если Рез.АналитикаУчетаПоПартнерамПартнер.ДополнительныеРеквизиты[2].Значение.Наименование <> "" Тогда
				Т = Таб.Добавить();
		Т.Бренд = Рез.АналитикаУчетаНоменклатурыНоменклатураМарка;   
		Т.Номенклатура = Рез.АналитикаУчетаНоменклатурыНоменклатура ;
		
		Т.СуммаВыручки = Рез.СуммаВыручкиОборот ; 
		Т.КоличествоПродано = Рез.КоличествоОборот ;
		Если Рез.АналитикаУчетаПоПартнерамПартнер.ДополнительныеРеквизиты[2].Значение.Наименование = "E.comerce" Тогда
			Т.Канал = "Онлайн" ;  
			//Т.ПВыручка = Окр(Рез.СуммаВыручкиОборот /Онлайн * 100,2); 
			//Т.ПКатегория =0;//Окр(Рез.СуммаВыручкиОборот /ИтогОнОф * 100,2);

		Иначе
			Т.Канал = "Offline";
			//Т.ПВыручка = Окр(Рез.СуммаВыручкиОборот /Офлайн * 100, 2);
			//Т.ПКатегория = 0;//Окр(Рез.СуммаВыручкиОборот /ИтогОнОф * 100,2);
		КонецЕсли;
		Т.КаналНаменование = Рез.АналитикаУчетаПоПартнерамПартнер.ДополнительныеРеквизиты[2].Значение.Наименование;
		Т.Партнер = Рез.АналитикаУчетаПоПартнерамПартнер;
				
		КонецЕсли;
	Исключение   
		//Сообщить(Рез.ЗаказКлиентаПартнер);
		КонецПопытки;
		//Сообщить(Рез.ЗаказКлиентаПартнер);	
	КонецЦикла;
	
	
	
	Возврат Таб;	
КонецФункции   


&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры


&НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.ДатаПоступления = ТекущаяДата();
	
	ЗаполнитьСкладПоУмолчанию() ;
	СкладПриИзмененииНаСервере();
	ЗаполнитьРаспоряженияНаПоступление();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСкладПоУмолчанию()
	
	СтруктураЗаполнения = Новый Структура("Склад");
	ОбщегоНазначенияУТ.ОбработкаЗаполнения(СтруктураЗаполнения, Неопределено, Неопределено);
	Склад = СтруктураЗаполнения.Склад;
	
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		ЭтаФорма.Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Справочники.Склады.НайтиПоНаименованию("СМ Склад сырья и материалов"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииНаСервере()
	Элементы.СостояниеПоступленияФильтр.СписокВыбора.Очистить();
	Элементы.СостояниеПоступленияФильтр.СписокВыбора.Добавить("", НСтр("ru = 'Все';
	|en = 'All'"));
	Элементы.СостояниеПоступленияФильтр.СписокВыбора.Добавить("ОжидаетсяПриемка", НСтр("ru = 'Ожидается приемка';
	|en = 'Receiving is expected'"));
	Элементы.СостояниеПоступленияФильтр.СписокВыбора.Добавить("Перепоставка", НСтр("ru = 'Перепоставка';
	|en = 'Overdelivery'"));
	Элементы.СостояниеПоступленияФильтр.СписокВыбора.Добавить("ОжидаетсяОформлениеНакладных", НСтр("ru = 'Ожидается оформление накладных';
	|en = 'Invoice registration is expected'"));
	СостояниеПоступленияФильтр = "ОжидаетсяПриемка";

КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	СкладПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьРаспоряженияНаПоступление()
	
	Если Не ЗначениеЗаполнено(Склад) Тогда
		РаспоряженияНаПоступление.Очистить();
		Возврат;
	КонецЕсли;
	
	Если Не Пользователи.ЭтоПолноправныйПользователь(Неопределено) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Ссылка
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка = &Склад";
		
		Запрос.УстановитьПараметр("Склад", Склад);
		
		Если Запрос.Выполнить().Пустой() Тогда
			РаспоряженияНаПоступление.Очистить();
			Возврат;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыКПоступлениюОстаткиТекущие.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлениюОстаткиТекущие.Отправитель КАК Отправитель,
	|	ТоварыКПоступлениюОстаткиТекущие.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлениюОстаткиТекущие.Характеристика КАК Характеристика,
	|	ТоварыКПоступлениюОстаткиТекущие.Назначение КАК Назначение,
	|	ТоварыКПоступлениюОстаткиТекущие.Склад КАК Склад,
	|	ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток КАК КОформлениюОрдеровОстаток,
	|	ТоварыКПоступлениюОстаткиТекущие.КОформлениюПоступленийПоОрдерамОстаток КАК КОформлениюПоступленийПоОрдерамОстаток,
	|	ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток КАК ПринимаетсяОстаток,
	|	ТоварыКПоступлениюОстаткиТекущие.ХозяйственнаяОперация КАК ХозяйственнаяОперацияДляФильтра
	|ПОМЕСТИТЬ ТоварыКПоступлениюОстаткиТекущие
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(, Склад = &Склад) КАК ТоварыКПоступлениюОстаткиТекущие
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад,
	|	ДокументПоступления,
	|	Отправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюОрдеровОбороты.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюОрдеровОбороты.Характеристика КАК Характеристика,
	|	ТоварыКОформлениюОрдеровОбороты.Назначение КАК Назначение,
	|	ТоварыКОформлениюОрдеровОбороты.Склад КАК Склад,
	|	ТоварыКОформлениюОрдеровОбороты.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКОформлениюОрдеровОбороты.Отправитель КАК Отправитель,
	|	ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровОборот КАК КОформлениюОрдеровОборот,
	|	ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход КАК КОформлениюОрдеровПриход,
	|	ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровРасход КАК КОформлениюОрдеровРасход,
	|	ТоварыКОформлениюОрдеровОбороты.ПринимаетсяОборот КАК ПринимаетсяОборот,
	|	ТоварыКОформлениюОрдеровОбороты.ПринимаетсяПриход КАК ПринимаетсяПриход,
	|	ТоварыКОформлениюОрдеровОбороты.ПринимаетсяРасход КАК ПринимаетсяРасход
	|ПОМЕСТИТЬ ТоварыКОформлениюОрдеровОбороты
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , , &ФильтрОборотов) КАК ТоварыКОформлениюОрдеровОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад,
	|	ДокументПоступления,
	|	Отправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлениюОстаткиНаДату.Отправитель КАК Отправитель,
	|	ТоварыКПоступлениюОстаткиНаДату.Номенклатура КАК Номенклатура,
	|	ТоварыКПоступлениюОстаткиНаДату.Характеристика КАК Характеристика,
	|	ТоварыКПоступлениюОстаткиНаДату.Назначение КАК Назначение,
	|	МИНИМУМ(ТоварыКПоступлениюОстаткиНаДату.Серия) КАК Серия,
	|	ТоварыКПоступлениюОстаткиНаДату.Склад КАК Склад,
	|	ТоварыКПоступлениюОстаткиНаДату.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	СУММА(ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток) КАК КОформлениюОрдеровОстаток,
	|	МАКСИМУМ(ТоварыКПоступлениюОстаткиНаДату.КОформлениюПоступленийПоОрдерамОстаток) КАК КОформлениюПоступленийПоОрдерамОстаток,
	|	СУММА(ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток) КАК ПринимаетсяОстаток
	|ПОМЕСТИТЬ ТоварыКПоступлениюОстаткиНаДату
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(
	|			&ДатаПоступления,
	|			(Номенклатура, Характеристика, Назначение, Склад, ДокументПоступления, Отправитель, ХозяйственнаяОперация) В
	|				(ВЫБРАТЬ
	|					ФильтрТоваровКПоступлению.Номенклатура,
	|					ФильтрТоваровКПоступлению.Характеристика,
	|					ФильтрТоваровКПоступлению.Назначение,
	|					ФильтрТоваровКПоступлению.Склад,
	|					ФильтрТоваровКПоступлению.ДокументПоступления,
	|					ФильтрТоваровКПоступлению.Отправитель,
	|					ФильтрТоваровКПоступлению.ХозяйственнаяОперацияДляФильтра КАК ХозяйственнаяОперация
	|				ИЗ
	|					ТоварыКПоступлениюОстаткиТекущие КАК ФильтрТоваровКПоступлению)) КАК ТоварыКПоступлениюОстаткиНаДату
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКПоступлениюОстаткиНаДату.Характеристика,
	|	ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления,
	|	ТоварыКПоступлениюОстаткиНаДату.Номенклатура,
	|	ТоварыКПоступлениюОстаткиНаДату.Отправитель,
	|	ТоварыКПоступлениюОстаткиНаДату.Склад,
	|	ТоварыКПоступлениюОстаткиНаДату.ХозяйственнаяОперация,
	|	ТоварыКПоступлениюОстаткиНаДату.Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Склад,
	|	ДокументПоступления,
	|	Отправитель,
	|	ХозяйственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Распоряжение КАК Распоряжение,
	|	ВложенныйЗапрос.Отправитель КАК Отправитель,
	|	ВложенныйЗапрос.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ВложенныйЗапрос.Номер) КАК Номер,
	|	МАКСИМУМ(ВложенныйЗапрос.Дата) КАК Дата,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерВходящегоДокумента) КАК НомерВходящегоДокумента,
	|	МАКСИМУМ(ВложенныйЗапрос.ДатаВходящегоДокумента) КАК ДатаВходящегоДокумента,
	|	МИНИМУМ(ВложенныйЗапрос.Перепоставка) КАК Перепоставка,
	|	МИНИМУМ(ВложенныйЗапрос.Состояние) КАК Состояние,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ВПроцессеПриемки)
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ОжидаетсяПриемка)
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.Перепоставка)
	|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 4
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ОжидаетсяОформлениеНакладных)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияПоступленияТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК СостояниеПоступления,
	|	ВложенныйЗапрос.ТипДокумента КАК ТипДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Распоряжение,
	|		ТоварыКПоступлениюОстаткиНаДату.Отправитель КАК Отправитель,
	|		ТоварыКПоступлениюОстаткиНаДату.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Номер КАК СТРОКА(11))
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.ДоговорыКонтрагентов).Номер КАК СТРОКА(11))
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """")
	|		КОНЕЦ КАК Номер,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Дата
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.ДоговорыКонтрагентов).Дата
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1, 1, 1))
	|		КОНЕЦ КАК Дата,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|					ИЛИ ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА """"
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.НомерПервичногоДокумента, """")
	|		КОНЕЦ КАК НомерВходящегоДокумента,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|					ИЛИ ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			ИНАЧЕ ЕСТЬNULL(РеестрДокументов.ДатаПервичногоДокумента, ДАТАВРЕМЯ(1, 1, 1))
	|		КОНЕЦ КАК ДатаВходящегоДокумента,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Наименование
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления КАК Справочник.ДоговорыКонтрагентов).Наименование
	|			КОГДА &УсловиеИспользованияХозяйственнойОперацииРеестра
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(РеестрДокументов.ХозяйственнаяОперация)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТИПЗНАЧЕНИЯ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления))
	|		КОНЕЦ КАК ТипДокумента,
	|		ВЫБОР
	|			КОГДА ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток - ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток < 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК Перепоставка,
	|		ВЫБОР
	|			КОГДА &УсловиеСостояниеВПроцессеПриемки
	|				ТОГДА 1
	|			КОГДА &УсловиеСостояниеОжидаетсяПриемка
	|				ТОГДА 2
	|			КОГДА &УсловиеСостояниеПерепоставка
	|				ТОГДА 3
	|			КОГДА ЕСТЬNULL(ТоварыКПоступлениюОстаткиНаДату.КОформлениюПоступленийПоОрдерамОстаток, 0) <> 0
	|				ТОГДА 4
	|			КОГДА &УсловиеСостояниеДопустимоеОтклонение
	|				ТОГДА 6
	|			ИНАЧЕ 404
	|		КОНЕЦ КАК Состояние
	|	ИЗ
	|		ТоварыКПоступлениюОстаткиНаДату КАК ТоварыКПоступлениюОстаткиНаДату
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПоступлениюОстаткиТекущие КАК ТоварыКПоступлениюОстаткиТекущие
	|			ПО ТоварыКПоступлениюОстаткиНаДату.Номенклатура = ТоварыКПоступлениюОстаткиТекущие.Номенклатура
	|				И ТоварыКПоступлениюОстаткиНаДату.Характеристика = ТоварыКПоступлениюОстаткиТекущие.Характеристика
	|				И ТоварыКПоступлениюОстаткиНаДату.Назначение = ТоварыКПоступлениюОстаткиТекущие.Назначение
	|				И ТоварыКПоступлениюОстаткиНаДату.Отправитель = ТоварыКПоступлениюОстаткиТекущие.Отправитель
	|				И ТоварыКПоступлениюОстаткиНаДату.Склад = ТоварыКПоступлениюОстаткиТекущие.Склад
	|				И ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления = ТоварыКПоступлениюОстаткиТекущие.ДокументПоступления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКОформлениюОрдеровОбороты КАК ТоварыКОформлениюОрдеровОбороты
	|			ПО ТоварыКПоступлениюОстаткиНаДату.Номенклатура = ТоварыКОформлениюОрдеровОбороты.Номенклатура
	|				И ТоварыКПоступлениюОстаткиНаДату.Характеристика = ТоварыКОформлениюОрдеровОбороты.Характеристика
	|				И ТоварыКПоступлениюОстаткиНаДату.Назначение = ТоварыКОформлениюОрдеровОбороты.Назначение
	|				И ТоварыКПоступлениюОстаткиНаДату.Отправитель = ТоварыКОформлениюОрдеровОбороты.Отправитель
	|				И ТоварыКПоступлениюОстаткиНаДату.Склад = ТоварыКОформлениюОрдеровОбороты.Склад
	|				И ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления = ТоварыКОформлениюОрдеровОбороты.ДокументПоступления
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|			ПО ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления = РеестрДокументов.Ссылка
	|				И (НЕ РеестрДокументов.ДополнительнаяЗапись)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДоговорыКонтрагентов.Ссылка,
	|		ДоговорыКонтрагентов.Партнер,
	|		ДоговорыКонтрагентов.ХозяйственнаяОперация,
	|		ВЫРАЗИТЬ(ДоговорыКонтрагентов.Номер КАК СТРОКА(11)),
	|		ДоговорыКонтрагентов.Дата,
	|		"""",
	|		ДАТАВРЕМЯ(1, 1, 1),
	|		ДоговорыКонтрагентов.Наименование,
	|		ЛОЖЬ,
	|		5
	|	ИЗ
	|		Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|	ГДЕ
	|		ДоговорыКонтрагентов.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных)
	|		И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|		И НЕ ДоговорыКонтрагентов.ПометкаУдаления) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.Дата >= &ВлДата
	|	&Распоряжение
	//|	И ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.Распоряжение) = ТИП(Документ.ЗаказПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Распоряжение,
	|	ВложенныйЗапрос.Отправитель,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.ТипДокумента
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ВложенныйЗапрос.Состояние) В (&УсловиеПоСостоянию)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	
	Запрос.УстановитьПараметр("ВлДата",НачалоГода(ЭтаФорма.ДатаПоступления));  
	Если ЭтаФОрма.ТолькоЗаказ = Истина Тогда
		Распоряжение = "";
	Иначе
		Распоряжение = "И (ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.Распоряжение) = ТИП(Документ.ЗаказПоставщику) ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.Распоряжение) = ТИП(Документ.ПриобретениеТоваровУслуг))";
	КонецЕсли;
	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&Распоряжение", Распоряжение);
	
	
	УсловиеИспользованияХозяйственнойОперацииРеестра = "ТИПЗНАЧЕНИЯ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления) = ТИП(Документ.ПрочееОприходованиеТоваров)";
	//++ НЕ УТ
	УсловиеИспользованияХозяйственнойОперацииРеестра = УсловиеИспользованияХозяйственнойОперацииРеестра + "
			|				ИЛИ ТИПЗНАЧЕНИЯ(ТоварыКПоступлениюОстаткиНаДату.ДокументПоступления) = ТИП(Документ.ДвижениеПродукцииИМатериалов)";
	//-- НЕ УТ
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеИспользованияХозяйственнойОперацииРеестра", УсловиеИспользованияХозяйственнойОперацииРеестра);
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		УсловиеСостояниеОжидаетсяПриемка = "ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток > ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины
			|					В (&МерныеТипыЕдиницИзмерений)
			|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход,0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|	И ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеПерепоставка = "ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток < ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины
			|					В (&МерныеТипыЕдиницИзмерений)
			|				ТОГДА - &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход,0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|	И ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеВПроцессеПриемки = "ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток > 0";
		
		УсловиеСостояниеДопустимоеОтклонение = "ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток <= ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(&МерныеТипыЕдиницИзмерений)
			|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход, 0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|		И ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток >= ВЫБОР
			|			КОГДА ТоварыКПоступлениюОстаткиНаДату.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(&МерныеТипыЕдиницИзмерений)
			|				ТОГДА -&ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100
			|					* ЕСТЬNULL(ТоварыКОформлениюОрдеровОбороты.КОформлениюОрдеровПриход, 0)
			|			ИНАЧЕ 0
			|		КОНЕЦ
			|		И ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток = 0";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеОжидаетсяПриемка", 	УсловиеСостояниеОжидаетсяПриемка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеПерепоставка", 		УсловиеСостояниеПерепоставка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеВПроцессеПриемки", 	УсловиеСостояниеВПроцессеПриемки);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеДопустимоеОтклонение",УсловиеСостояниеДопустимоеОтклонение);
		
		ФильтрОборотов =
		"				(Номенклатура, Характеристика, Назначение, Склад, ДокументПоступления, Отправитель) В
		|					(ВЫБРАТЬ
		|						ТоварыКПоступлениюОстаткиТекущие.Номенклатура,
		|						ТоварыКПоступлениюОстаткиТекущие.Характеристика,
		|						ТоварыКПоступлениюОстаткиТекущие.Назначение,
		|						ТоварыКПоступлениюОстаткиТекущие.Склад,
		|						ТоварыКПоступлениюОстаткиТекущие.ДокументПоступления,
		|						ТоварыКПоступлениюОстаткиТекущие.Отправитель
		|					ИЗ
		|						ТоварыКПоступлениюОстаткиТекущие КАК ТоварыКПоступлениюОстаткиТекущие)";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ФильтрОборотов", ФильтрОборотов);
		
	Иначе
		
		УсловиеСостояниеОжидаетсяПриемка = "ТоварыКПоступлениюОстаткиНаДату.КОформлениюОрдеровОстаток > 0
											|	И ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеПерепоставка = "ТоварыКПоступлениюОстаткиТекущие.КОформлениюОрдеровОстаток < 0
											|	И ТоварыКПоступлениюОстаткиТекущие.ПринимаетсяОстаток = 0";
		
		УсловиеСостояниеВПроцессеПриемки = "ТоварыКПоступлениюОстаткиНаДату.ПринимаетсяОстаток > 0";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеПерепоставка", УсловиеСостояниеПерепоставка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеОжидаетсяПриемка", УсловиеСостояниеОжидаетсяПриемка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеВПроцессеПриемки", УсловиеСостояниеВПроцессеПриемки);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеСостояниеДопустимоеОтклонение","ЛОЖЬ");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ФильтрОборотов", "ЛОЖЬ");
		
	КонецЕсли;
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
	Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений",
		Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Если ЗначениеЗаполнено(ДатаПоступления) Тогда
		Запрос.УстановитьПараметр("ДатаПоступления", Новый Граница(КонецДня(ДатаПоступления), ВидГраницы.Включая));
	Иначе
		Запрос.УстановитьПараметр("ДатаПоступления", ДатаПоступления); 
	КонецЕсли;
	
	СостоянияПоступления = Новый Массив;
	
	СоотвествиеСостоянийИндексов = Новый Соответствие;
	
	СоотвествиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ВПроцессеПриемки, 1);
	СоотвествиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ОжидаетсяПриемка, 2);
	СоотвествиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.Перепоставка, 3);
	СоотвествиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ОжидаетсяОформлениеНакладных, 4);
	СоотвествиеСостоянийИндексов.Вставить(Перечисления.СостоянияПоступленияТоваров.ПустаяСсылка(),5);

	Если СостояниеПоступленияФильтр = "" Тогда
		Для Каждого ЗначениеПеречисления Из Перечисления.СостоянияПоступленияТоваров Цикл 
			СостоянияПоступления.Добавить(СоотвествиеСостоянийИндексов.Получить(ЗначениеПеречисления));	
		КонецЦикла;
		СостоянияПоступления.Добавить(СоотвествиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ПустаяСсылка()));
	ИначеЕсли СостояниеПоступленияФильтр = "ВсеКПриемке" Тогда
		СостоянияПоступления.Добавить(СоотвествиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ОжидаетсяПриемка));
		СостоянияПоступления.Добавить(СоотвествиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ВПроцессеПриемки));
		СостоянияПоступления.Добавить(СоотвествиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров.ПустаяСсылка()));
	Иначе
		СостоянияПоступления.Добавить(СоотвествиеСостоянийИндексов.Получить(Перечисления.СостоянияПоступленияТоваров[СостояниеПоступленияФильтр]));
	КонецЕсли;
	
	СостоянияПоступления.Добавить(404);
	
	Запрос.УстановитьПараметр("УсловиеПоСостоянию", СостоянияПоступления);
	
	// Запомним текущую строку таблицы распоряжений
	Если ЗначениеЗаполнено(Элементы.РаспоряженияНаПоступление.ТекущаяСтрока) Тогда
		ТекущаяСтрокаРаспоряженияНаОтгрузку = 
			РаспоряженияНаПоступление.НайтиПоИдентификатору(Элементы.РаспоряженияНаПоступление.ТекущаяСтрока);
		Если ТекущаяСтрокаРаспоряженияНаОтгрузку <> Неопределено Тогда
			ТекущееРаспоряжение = ТекущаяСтрокаРаспоряженияНаОтгрузку.Распоряжение;
		КонецЕсли;
	Иначе
		ТекущееРаспоряжение = Неопределено;
	КонецЕсли;
	
	РаспоряженияНаПоступление.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Восстановим текущую строку
	Если ЗначениеЗаполнено(ТекущееРаспоряжение) Тогда
		Строки = РаспоряженияНаПоступление.НайтиСтроки(Новый Структура("Распоряжение", ТекущееРаспоряжение));
		Если Строки.Количество() > 0 Тогда
			Элементы.РаспоряженияНаПоступление.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоЗаказПриИзменении(Элемент)
	ЗаполнитьРаспоряженияНаПоступление();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоступленияПриИзменении(Элемент)
	ЗаполнитьРаспоряженияНаПоступление();
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПоступленияФильтрПриИзменении(Элемент)
	ЗаполнитьРаспоряженияНаПоступление();
КонецПроцедуры

&НаКлиенте
Процедура РаспоряженияНаПоступлениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)  
	СтандартнаяОбработка = Ложь;

	СсылкаДок = ПолучитьДокумент(Элемент.ТекущиеДанные.Распоряжение);
	//СсылкаДок = Документы.ПриобретениеТоваровУслуг.ПустаяСсылка();
	Если СсылкаДок <> Ложь Тогда   
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтотОбъект);	
 
   		 ПоказатьВопрос(Оповещение,
        	"Начать приемку",
        	РежимДиалогаВопрос.ДаНет,
        	0, // таймаут в секундах
        	КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
        	"Создать ордер" // (необ.) заголовок
    	);    		
	Иначе
		Сообщить("Не нашел");
	КонецЕсли;

КонецПроцедуры    


 &НаКлиенте
Процедура ОбработатьЗакрытиеФормыНовыйЗаказ(Значение, ДопПараметры) Экспорт
	
КонецПроцедуры



&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
       	ПараметрыФормыЗаказа = Новый Структура;
		ПараметрыФормыЗаказа.Вставить("Ссылка",СсылкаДок);
		ПараметрыФормыЗаказа.Вставить("Склад",ЭтаФорма.Склад);
		АдресПередаваемыхПараметров = ПоместитьВоВременноеХранилище(ПараметрыФормыЗаказа,Новый УникальныйИдентификатор);
		_Параметры = новый Структура("Адрес", АдресПередаваемыхПараметров);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНовыйЗаказ", ЭтаФорма);
		ОткрытьФорму("Обработка.СХК_ТСДСырье.Форма.ФормаПОрдер", _Параметры,ЭтаФорма, , , , ОписаниеОповещения,РежимОткрытияОкнаФормы.Независимый);
    КонецЕсли;	
 
КонецПроцедуры


&НаСервере
Функция  ПолучитьДокумент(Док) 
	Возврат Док.Ссылка;	
КонецФункции 


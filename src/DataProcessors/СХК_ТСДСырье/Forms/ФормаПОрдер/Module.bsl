
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	
	Если СтруктураПараметров.Ссылка <> "" Тогда
		ДокСсылка = СтруктураПараметров.Ссылка;  
		ХозяйственнаяОперация = СтруктураПараметров.Ссылка.ХозяйственнаяОперация; 
		Поставщик =СтруктураПараметров.Ссылка.Партнер; 
		Склад =СтруктураПараметров.Склад; 
		//Если ДокСсылка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика Тогда
		Объект.ТабПриемка.Очистить(); 
		Объект.Склад = ДокСсылка.Склад;
		ДатаВхДок = ТекущаяДата();
		Для Каждого стр из ДокСсылка.Товары Цикл
			Т =  Объект.ТабПриемка.Добавить();
			Т.Номенклатура = стр.Номенклатура;
			Т.Характеристика = стр.Характеристика;
			Т.Количество = стр.Количество;
			Т.Упаковка = стр.Упаковка;
			Т.ШтихКод = УстановкаШК(стр.Номенклатура);
			Т.Цена = стр.Цена;
		КонецЦикла;
	КонецЕсли;
	Если Объект.ТабПриемка.Количество() >=1 Тогда
		Для Каждого строка из Объект.ТабПриемка Цикл
			Если строка.Номенклатура.ВидНоменклатуры.ИспользоватьСерии = Ложь Тогда
								
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
	ЭтаФорма.Элементы.ГруппаПриемка.Видимость = Ложь;
	

КонецПроцедуры

&НаСервере
Функция УстановкаШК(Н)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	               |	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура"; 
	Запрос.УстановитьПараметр("Номенклатура",Н);
	//Рез = Запрос.Выполнить();
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПерваяЗапись = Выборка;
	КонецЕсли;  
	
	Попытка
   		Возврат ПерваяЗапись.Штрихкод;
	Исключение
		Возврат "";
	КонецПопытки;

КонецФункции


&НаСервере
Процедура ТабПриемкаВыборНаСервере(Ном,Цена,Кол,Номер) 
	
	ЭтаФорма.Товар = Ном;
	ЭтаФорма.Количество = Кол;
	ЭтаФорма.Цена = Цена; 
	ЭтаФорма.ТекСтрока = Номер;
	ЭтаФорма.СерияНоменклатура = Справочники.СерииНоменклатуры.ПустаяСсылка();
	
	Если Ном.ВидНоменклатуры.ИспользоватьСерии = Ложь Тогда 
		ЭтаФорма.Элементы.ГруппаСерия.Видимость = Ложь;
		ЭтаФорма.Элементы.Принять.Доступность = Истина;
	Иначе  
		ЭтаФорма.Элементы.ГруппаСерия.Видимость = Истина;
		ЭтаФорма.Элементы.Принять.Доступность = Ложь;
		
		Объект.СрокГодности = 0;
		ЭтаФорма.Элементы.СрокГодности.ТолькоПросмотр = Ложь;
		ЭтаФорма.ДатаИзготовления = Дата(1,1,1);
		ЭтаФорма.ГоденДо = Дата(1,1,1); 
	КонецЕсли;
	
	ЭтаФорма.Элементы.ГруппаСписок.Видимость = Ложь;
	ЭтаФорма.Элементы.ГруппаПриемка.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТабПриемкаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТабПриемкаВыборНаСервере(Элемент.ТекущиеДанные.Номенклатура,
							Элемент.ТекущиеДанные.Цена,
							Элемент.ТекущиеДанные.Количество,
							Элемент.ТекущиеДанные.НомерСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискШКИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)  
	
	ПоискШКТест(Текст);
		
КонецПроцедуры  

&НаСервере
Процедура ПоискШКТест(Т)
	Отбор = Новый Структура;
	Отбор.Вставить("ШтихКод",Т);
	Строки = Объект.ТабПриемка.НайтиСтроки(Отбор);
	Если Строки.Количество() = 1 Тогда
		ЭтаФорма.Элементы.ГруппаСписок.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаПриемка.Видимость = Истина;
		ТабПриемкаВыборНаСервере(Строки[0].Номенклатура,
								Строки[0].Цена,
								Строки[0].Количество,
								0);	
	ИначеЕсли Строки.Количество() >= 1 Тогда
		ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
		ЭтаФорма.Элементы.ТабПриемка.ОтборСтрок = Новый ФиксированнаяСтруктура("ШтихКод", Т);
		ЭтаФорма.Элементы.ОтменитьПоиск.Видимость = Истина;
	ИначеЕсли Строки.Количество() = 0 Тогда
		
	Иначе
		
	КонецЕсли;
	
		
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
	ЭтаФорма.Элементы.ГруппаПриемка.Видимость = Ложь;
    ОтменитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура  ОтменитьНаСервере()
	ЭтаФорма.Элементы.ТабПриемка.ОтборСтрок = Неопределено;	
КонецПроцедуры

&НаСервере
Процедура ОтменитьПоискНаСервере()
	ЭтаФорма.Элементы.ТабПриемка.ОтборСтрок = Неопределено;  
	ЭтаФорма.Элементы.ОтменитьПоиск.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоиск(Команда)
	ОтменитьПоискНаСервере();
КонецПроцедуры

&НаСервере
Процедура СрокГодностиПриИзмененииНаСервере()
	ЭтаФорма.Элементы.ГоденДо.ТолькоПросмотр = Ложь;
	ЭтаФорма.Элементы.ДатаИзготовления.ТолькоПросмотр = Ложь;
	ЭтаФорма.Элементы.СрокГодности.ТолькоПросмотр = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиПриИзменении(Элемент)
	СрокГодностиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьСериюНаСервере()
	спр = Справочники.СерииНоменклатуры.СоздатьЭлемент();
	спр.ВидНоменклатуры = Товар.ВидНоменклатуры;
	спр.ГоденДо = ЭтаФорма.ГоденДо; 
	ДатаПроизводства =  ЭтаФорма.ДатаИзготовления;
	спр.ДатаПроизводства = ДатаПроизводства;  
	левСпр = Лев(Строка(Формат(ЭтаФорма.ГоденДо, "ггггММдд")),10);
	левСпр = СтрЗаменить(левСпр,".","");
	спр.Номер = Строка(ЭтаФорма.Префикс) + левСпр;
	спр.Записать();
	ЭтаФорма.СерияНоменклатура = спр.Ссылка; 
	ЭтаФорма.Элементы.Принять.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСерию(Команда)
	СоздатьСериюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПринятьНаСервере() 
	Объект.ТабПриемка[ЭтаФорма.ТекСтрока-1].КоличествоСобрано = 0 ;
	Объект.ТабПриемка[ЭтаФорма.ТекСтрока-1].КоличествоСобрано = ЭтаФорма.Количество;
	Объект.ТабПриемка[ЭтаФорма.ТекСтрока-1].Серия = ЭтаФорма.СерияНоменклатура;
	ЭтаФорма.Элементы.ГруппаСписок.Видимость = Истина;
	ЭтаФорма.Элементы.ГруппаПриемка.Видимость = Ложь;
	ЭтаФорма.Элементы.ТабПриемка.ОтборСтрок = Неопределено;  
	ЭтаФорма.Элементы.ОтменитьПоиск.Видимость = Ложь; 
	
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)
	ПринятьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГоденДоПриИзмененииНаСервере()
	ЭтаФорма.Элементы.СоздатьСерию.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ГоденДоПриИзменении(Элемент)
	ГоденДоПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ЗавершитьНаСервере()
		СоздатьПриходныйОрдер();
        ЭтаФорма.Закрыть();      
		
КонецПроцедуры

&НаСервере
Функция СписокНоменклатуры() 
	
	Мас = Новый Массив;
	
	Для Каждого стр из Объект.ТабПриемка Цикл
		СЗ = Новый Структура;
		СЗ.Вставить("Номенклатура",Строка(стр.Номенклатура.Код));
		СЗ.Вставить("Серия",Строка(стр.Серия));
		СЗ.Вставить("Количество",Строка(стр.Количество));
		Мас.Добавить(СЗ);
	КонецЦикла; 
	
	Возврат Мас;
КонецФункции


&НаСервере
Функция ПроверитьЗаполнениеТаб() 
	Ош = Истина;
	Для Каждого стр из Объект.ТабПриемка Цикл 
		Если стр.Количество <> стр.КоличествоСобрано Тогда 
			Ош = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ош;
КонецФункции


&НаКлиенте
Процедура Завершить(Команда)  
	Если ПроверитьЗаполнениеТаб() Тогда
		ЗавершитьНаСервере();        
	Иначе 
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение,"Не все строки приняты",5,"Внимание!!!");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупреждение(Параметры) Экспорт
	
	
КонецПроцедуры


&НаКлиенте
Процедура СерияНоменклатураПриИзменении(Элемент)
	СерияНоменклатураПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СерияНоменклатураПриИзмененииНаСервере() 
	ЭтаФорма.Элементы.Принять.Доступность = Истина;
КонецПроцедуры

&НаСервере
Процедура ДатаИзготовленияПриИзмененииНаСервере()
	ЭтаФорма.ГоденДо = ДобавитьМесяц(ЭтаФорма.ДатаИзготовления,Объект.СрокГодности); 
	ЭтаФорма.Элементы.СоздатьСерию.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДатаИзготовленияПриИзменении(Элемент)
	ДатаИзготовленияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СрокГодностиПриИзменении1(Элемент)
	СрокГодностиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаНаПоступление",ЭтотОбъект);	
 
   	 ПоказатьВопрос(Оповещение,
        	"Создать поступление",
        	РежимДиалогаВопрос.ДаНет,
        	0, // таймаут в секундах
        	КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
        	"Создать ордер" // (необ.) заголовок
    	);    		

КонецПроцедуры  

&НаКлиенте
Процедура ПослеЗакрытияВопросаНаПоступление(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
    	ОтправитьУведомление();
	КонецЕсли;	
 
КонецПроцедуры    

&НаКлиенте
Функция ПолучитьПрофильПочты() 
	//Создаем профиль либо считываем из справочника 
	Профиль = Новый ИнтернетПочтовыйПрофиль; 
	Профиль.АдресСервераSMTP = "smtp.mail.ru";//Отправитель.АдресСервераSMTP; //"smtp.mail.ru"; 
	Профиль.АдресСервераPOP3 = "pop.mail.ru"; //Отправитель.АдресСервераPOP3; //"pop.mail.ru"; 
	Профиль.ПортPOP3 = 995;//Отправитель.ПортPOP3; //110;
	Профиль.ПортSMTP = 465;//Отправитель.ПортSMTP; //587; 
	Профиль.Пользователь = "1c@smartbar.ru";// 
	Профиль.Пароль = "GrKV5YLckkiM5AsF8Byt";
	Профиль.ПользовательSMTP =  "1c@smartbar.ru";//Отправитель.Email; //"test@mail.ru"; 
	Профиль.ПарольSMTP = "GrKV5YLckkiM5AsF8Byt";//Отправитель.Пароль; //"123456789"; 
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Login;
	Профиль.ИспользоватьSSLPOP3 = Истина;
	Профиль.ИспользоватьSSLSMTP = Истина;  
	//Создаем письмо 
	Возврат Профиль;
КонецФункции


&НаКлиенте
Процедура ОтправитьУведомление()
	М = СоздатьДокументПоступленияТоваровИУслуг();
	
	Почта = Новый ИнтернетПочта; 
	Письмо = Новый ИнтернетПочтовоеСообщение;
	ТекстПисьма = ""+ Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "Дата документа: "+Строка(М[1]) + Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "Номер документа: "+Строка(М[0]) + Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "Контрагент: "+Строка(М[2]) + Символы.ПС; 
	
	
	Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
	//Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
	
	Письмо.Тема = Строка(Строка("Приемка сырья на склад Сырья и материалов")); 
	Письмо.Отправитель = "1c@smartbar.ru"; 
	Письмо.ИмяОтправителя = "Уведомление 1С ЕРП приемка сырья";
	
	
	Письмо.Получатели.Добавить("igor.potemkin33@yandex.ru");
	Письмо.Получатели.Добавить("glbuh@smartbar.ru");
	Письмо.Получатели.Добавить("buh1@smartbar.ru");
	Попытка
		Почта.Подключиться(ПолучитьПрофильПочты()); 
		Почта.Послать(Письмо); 
	Исключение 
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Почта.Отключиться();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПриходныйОрдер()
	Д = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
	Д.Дата = ТекущаяДата();
	Д.Распоряжение = ДокСсылка;
	Д.Отправитель = Поставщик;
	Д.Склад = Склад;
	Д.ДатаВходящегоДокумента = ЭтаФорма.ДатаВхДок; 
	Д.НомерВходящегоДокумента = ЭтаФорма.НомерВхДок;
	Д.ХозяйственнаяОперация = ХозяйственнаяОперация;  
	Д.СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаОтПоставщика; 
	Д.Статус =  Перечисления.СтатусыПриходныхОрдеров.Принят;
	Для Каждого стр из Объект.ТабПриемка Цикл 
		Т = Д.Товары.Добавить();
		Т.ДокументОтгрузки = ДокСсылка;
		Т.Номенклатура = стр.Номенклатура;
		Т.Количество = стр.Количество; 
		Т.КоличествоУпаковок = стр.Количество;
		Если стр.Серия <> Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
			Т.Серия = Справочники.СерииНоменклатуры.НайтиПоНаименованию(стр.Серия).Ссылка;
			Т.СтатусУказанияСерий = 2;
		Иначе
			Т.СтатусУказанияСерий = 0;
		КонецЕсли;
	КонецЦикла;
	Д.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
	
	//СС = Д.Ссылка.ПолучитьОбъект();
	//ПроведениеДокументов.ОбработкаПроведенияДокумента(Д, Ложь);
КонецПроцедуры


&НаСервере
Функция СоздатьДокументПоступленияТоваровИУслуг()  
НовыйДокумент = Документы.ПриобретениеТоваровУслуг.СоздатьДокумент(); 
НовыйДокумент.Заполнить(ЭтаФорма.ДокСсылка);
НовыйДокумент.Дата = ТекущаяДата();
НовыйДокумент.ДатаВходящегоДокумента = ЭтаФорма.ДатаВхДок;
НовыйДокумент.НомерВходящегоДокумента  = ЭтаФорма.НомерВхДок;
НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
 
	Мас = Новый Массив;
	Мас.Добавить(Строка(НовыйДокумент.Ссылка.Номер));
	Мас.Добавить(Строка(НовыйДокумент.Ссылка.Дата));
	Мас.Добавить(Строка(НовыйДокумент.Ссылка.Контрагент));
	Возврат Мас;
КонецФункции


	

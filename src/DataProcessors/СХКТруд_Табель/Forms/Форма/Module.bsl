
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ПериодРаботы.ДатаНачала = Дата("02.06.2025 07:00:00");
	//ПериодРаботы.ДатаОкончания = Дата("08.06.2025 23:59:59");
	ПериодРаботы.ДатаНачала = НачалоНедели(НачалоДня(ТекущаяДата()));
	ПериодРаботы.ДатаОкончания = КонецНедели(КонецДня(ТекущаяДата()));
	ЭтаФорма.Линия1 = Истина;
	ЭтаФорма.Линия2 = Истина;
	ЭтаФорма.Линия3 = Истина;
КонецПроцедуры



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МассивЗУП = ПолучитьМассивЗУП();
	
	Если МассивЗУП <> Неопределено Тогда 
		ЗаполнитьТаблицуСотрудников(МассивЗУП);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьМассивЗУП()
    СтрокаДляОтвета =  Интервал();
	Возврат СХК_СКУДКлиент.ПолучитьМассивЗУП(СтрокаДляОтвета);

КонецФункции


&Насервере
Функция Интервал()
	
	Мас = Новый Массив;
	
	СЗ = Новый Структура;
	СЗ.Вставить("ДатаНачала",Строка(ЭтаФорма.ПериодРаботы.ДатаНачала));
	СЗ.Вставить("ДатаОкончания",Строка(ЭтаФорма.ПериодРаботы.ДатаОкончания));
	Мас.Добавить(СЗ);

	ЗаписьJSON = новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Мас);
	сериализованнаяСтрока = ЗаписьJSON.Закрыть();
	
	возврат сериализованнаяСтрока;
	
	
КонецФункции     

Функция ПростоеЧтениеJSON(Данные)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Данные);  		
	Возврат ПрочитатьJSON(ЧтениеJSON);
	
КонецФункции


&НаСервере
Процедура ЗаполнитьТаблицуСотрудников(МасТаб)
	
	Если ЭтаФорма.Элементы.ГруппаТабель.ТекущаяСтраница.Имя = "СтраницаСкуд" Тогда
		Объект.ТЧТабель.Очистить();
		УдалитьКолонки();
		КроссПериод.Очистить();
		
		Если  МасТаб.Количество() >=1 Тогда
			Для сч=0 по МасТаб.Количество()-1 Цикл
				Т = Объект.ТЧТабель.Добавить();
				Т.ТабНомер = МасТаб[сч].ТабНомер; 
				Т.Должность = МасТаб[сч].ТекущаяДолжность; 
				Т.Сотрудник = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(МасТаб[сч].ФИО); 
				Т.НормаЧасов = МасТаб[сч].НормаЧасов;//*КроссПериод.Количество(); 
				Т.ЧасыСкуд = МасТаб[сч].ЧасыСкуд;
				Т.Скуд = МасТаб[сч].Скуд;
				Т.КолДней = 1;  
				//
				Т = КроссПериод.Добавить();
				Т.День = ПрочитатьДатуJSON(МасТаб[сч].День, ФорматДатыJSON.ISO);
				//
			КонецЦикла;
			
			//
			ТТ = КроссПериод.Выгрузить();
			ТТ.Свернуть("День");
			ТТ.Сортировать("День");
			КроссПериод.Загрузить(ТТ);
			//
			Элементы.ТЧТабель.ФиксацияСлева = 6;
			Т = Объект.ТЧТабель.Выгрузить();
			Т.Свернуть("ТабНомер,Должность,Сотрудник,НормаЧасов,Скуд","ЧасыСкуд,КолДней"); 
			
			Для Каждого стр из Т Цикл
				стр.НормаЧасов = стр.НормаЧасов * стр.КолДней;
			КонецЦикла;
			
			
			Объект.ТЧТабель.Загрузить(Т);
			Объект.ТЧТабель.Сортировать("Должность");
			ДобавитьКолонкуНаСервере();
			ЗаполнитьТабель();	
		КонецЕсли; 
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабель() 

	Запрос = Новый Запрос;  
	Запрос.Текст = "ВЫБРАТЬ
	|	СХКТруд_КТУ.Период КАК Период,
	|	СХКТруд_КТУ.ТабНомер КАК ТабНомер,
	|	СХКТруд_КТУ.Линия КАК Линия,
	|	СХКТруд_КТУ.Часы КАК Часы
	|ИЗ
	|	РегистрСведений.СХКТруд_КТУ КАК СХКТруд_КТУ
	|ГДЕ
	|	СХКТруд_КТУ.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(ПериодРаботы.ДатаНачала));   
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(ПериодРаботы.ДатаОкончания));  
	РезТаб = Запрос.Выполнить().Выгрузить();
	
	Для Каждого стр из РезТаб Цикл
		Если стр.Линия = Перечисления.СХКТруд_Линии.Линия1 Тогда	
			Линия = "ДЛ1_" + Строка(Формат(стр.Период,"ДФ=д"));
		ИначеЕсли стр.Линия = Перечисления.СХКТруд_Линии.Линия2 Тогда	
			Линия = "ДЛ2_" + Строка(Формат(стр.Период,"ДФ=д"));
		ИначеЕсли стр.Линия = Перечисления.СХКТруд_Линии.Линия3 Тогда	
			Линия = "ДЛ3_" + Строка(Формат(стр.Период,"ДФ=д"));
		КонецЕсли;
		
		Отбор = Новый Структура; 
		Отбор.Вставить("ТабНомер",стр.ТабНомер);
		
		Строки = Объект.ТЧТабель.НайтиСтроки(Отбор);
		
		Если Строки.Количество()>=1 Тогда 
			Попытка
				Строки[0][Линия] = стр.Часы;
			Исключение
				
			КонецПопытки;
			
		КонецЕсли;
	КонецЦикла; 
	
	РезТаб.Свернуть("ТабНомер","Часы"); 
	
	
	Для Каждого стр из РезТаб Цикл
		Отбор = Новый Структура; 
		Отбор.Вставить("ТабНомер",стр.ТабНомер);
		
		Строки = Объект.ТЧТабель.НайтиСтроки(Отбор);
		
		Если Строки.Количество()>=1 Тогда 
			Строки[0]["ЧасыФакт"] = стр.Часы;
			Если Строки[0]["ЧасыФакт"] > Строки[0]["НормаЧасов"] Тогда
				Строки[0]["Ошибка"] = Истина;
			Иначе
				Строки[0]["Ошибка"] = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла; 

	
	
КонецПроцедуры 




&НаСервере
Процедура УдалитьКолонки()   
	РеквизитыТаблицы = ПолучитьРеквизиты("Объект.ТЧТабель");
	УдаляемыеРеквизиты = Новый Массив;
	Для Каждого Реквизит из РеквизитыТаблицы Цикл  
		Если Реквизит.Имя <> "НомерСтроки" И 
			Реквизит.Имя <> "ТабНомер" И
			Реквизит.Имя <> "Должность" И
			Реквизит.Имя <> "КоличествоСтрок" И
			Реквизит.Имя <> "Сотрудник" И
			Реквизит.Имя <> "НормаЧасов" И
			Реквизит.Имя <> "ИтогНормаЧасов" И
			Реквизит.Имя <> "ИтогЧасыСКУД" И  
			Реквизит.Имя <> "ИтогЧасыФакт" И  
			Реквизит.Имя <> "Ошибка" И  
			Реквизит.Имя <> "Скуд" И  
			Реквизит.Имя <> "ЧасыФакт" И
			Реквизит.Имя <> "КолДней" И
			Реквизит.Имя <> "ИтогКолДней" И
			Реквизит.Имя <> "ЧасыСКУД" Тогда
			УдаляемыеРеквизиты.Добавить("Объект.ТЧТабель." + Реквизит.Имя);
		КонецЕсли;
		
	КонецЦикла;
	ИзменитьРеквизиты(, УдаляемыеРеквизиты);	
	МасГрупп = Новый Массив; 
	ЭлТабель = Элементы.Найти("ТЧТабель");
	Для сч=0 по ЭлТабель.ПодчиненныеЭлементы.Количество()-1 Цикл
		Если ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельТабНомер" И 
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельНомерСтроки" И
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельДолжность" И
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельСотрудник" И
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельЧасыСКУД" И
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельОшибка" И
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельСкуд" И
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельЧасыФакт" И
			ЭлТабель.ПодчиненныеЭлементы[сч].Имя <> "ТЧТабельНормаЧасов" Тогда 
			
			
			МасГрупп.Добавить(ЭлТабель.ПодчиненныеЭлементы[сч].Имя ); 
			
		КонецЕсли;
	КонецЦикла;
	
	Для счМ = 0 по МасГрупп.Количество()-1 Цикл 
		НайденныйЭлемент = Элементы.Найти(МасГрупп[счМ]);
		Если НЕ НайденныйЭлемент = Неопределено Тогда
			Элементы.Удалить(НайденныйЭлемент);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры


&НаСервере
Процедура ДобавитьКолонкуНаСервере()
	
	Для Каждого стр из КроссПериод Цикл 

		//	
        Группа = Элементы.Добавить("ИмяГруппы"+Строка(Формат(стр.День,"ДФ=д")),Тип("ГруппаФормы"),Элементы.ТЧТабель);
		Группа.Вид = ВидГруппыФормы.ГруппаКолонок;           
		Группа.Заголовок =  Строка(Формат(стр.День,"ДЛФ=Д"));  
		Группа.ОтображатьВШапке = Истина;
        Группа.Группировка = ГруппировкаКолонок.Горизонтальная;  
		Группа.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
	
		КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.Дата);

////    
		Если ЭтаФорма.Линия1 = Истина Тогда
			нРеквизиты = Новый Массив;
			имяСтобец1 = "ДЛ1_" + Строка(Формат(стр.День,"ДФ=д"));
			нРеквизиты.Добавить(Новый РеквизитФормы(имяСтобец1, Новый ОписаниеТипов("Число"), "Объект.ТЧТабель", "1 Этаж", Истина));
			ИзменитьРеквизиты(нРеквизиты);
			
			нЭлемент = Элементы.Добавить(имяСтобец1, Тип("ПолеФормы"), Группа); 
			нЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			нЭлемент.ЦветФона = Новый Цвет(230,230,230);
			нЭлемент.Ширина = 10;
			нЭлемент.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			
			нЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
			нЭлемент.УстановитьДействие("ПриИзменении", "ТаблицаЗначенийНаФормеКолонка"); 
			нЭлемент.ПутьКДанным = "Объект.ТЧТабель."+имяСтобец1; 	
		КонецЕсли;
		
////    
		Если ЭтаФорма.Линия2 = Истина Тогда

			нРеквизиты = Новый Массив;
			имяСтобец2 = "ДЛ2_" + Строка(Формат(стр.День,"ДФ=д"));
			нРеквизиты.Добавить(Новый РеквизитФормы(имяСтобец2, Новый ОписаниеТипов("Число"), "Объект.ТЧТабель", "2 Этаж", Истина));
			ИзменитьРеквизиты(нРеквизиты);
			
			нЭлемент = Элементы.Добавить(имяСтобец2, Тип("ПолеФормы"), Группа); 
			нЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
			нЭлемент.Ширина = 10;
			нЭлемент.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			нЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
			нЭлемент.УстановитьДействие("ПриИзменении", "ТаблицаЗначенийНаФормеКолонка"); 
			нЭлемент.ПутьКДанным = "Объект.ТЧТабель."+имяСтобец2;
		КонецЕсли;
		
			
////        
		Если ЭтаФорма.Линия3 = Истина Тогда

			нРеквизиты = Новый Массив;
			имяСтобец3 = "ДЛ3_" + Строка(Формат(стр.День,"ДФ=д"));
			нРеквизиты.Добавить(Новый РеквизитФормы(имяСтобец3, Новый ОписаниеТипов("Число"), "Объект.ТЧТабель", "Комплект.", Истина));
			ИзменитьРеквизиты(нРеквизиты);
			
			нЭлемент = Элементы.Добавить(имяСтобец3, Тип("ПолеФормы"), Группа); 
			нЭлемент.Вид = ВидПоляФормы.ПолеВвода;                                  
			нЭлемент.ЦветФона = Новый Цвет(197,197,197);                    
			нЭлемент.Ширина = 10;
			нЭлемент.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			нЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
			нЭлемент.УстановитьДействие("ПриИзменении", "ТаблицаЗначенийНаФормеКолонка"); 
			нЭлемент.ПутьКДанным = "Объект.ТЧТабель."+имяСтобец3; 	
		КонецЕсли;
		

	КонецЦикла;
		
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаЗначенийНаФормеКолонка(Элемент)
	РасчитатьЗаписатьФактЧасов(Элементы.ТЧТабель.ТекущиеДанные.ТабНомер,Элементы.ТЧТабель.ТекущиеДанные.Должность,Элементы.ТЧТабель.ТекущиеДанные.Сотрудник,Элемент.Имя,
	Элементы.ТЧТабель.ТекущийЭлемент.Родитель.Заголовок);    
	Если Элементы.ТЧТабель.ТекущиеДанные.Скуд = Ложь Тогда
		МасЧасов = СформироватьЗаписьВСкуд(Элементы.ТЧТабель.ТекущиеДанные.ТабНомер,
											Элементы.ТЧТабель.ТекущийЭлемент.Родитель.Заголовок,
											Элементы.ТЧТабель.ТекущиеДанные[Элемент.Имя]);
		СХК_СКУДКлиент.ОтправитьВСкуд(МасЧасов);
	КонецЕсли;
	
КонецПроцедуры  

&Насервере
Функция СформироватьЗаписьВСкуд(ТабНомер,Дата,Часы)
	
	Мас = Новый Массив;
	
	СЗ = Новый Структура;
	СЗ.Вставить("ТабНомер",Строка(ТабНомер));
	СЗ.Вставить("Дата",Строка(Дата));
	СЗ.Вставить("Часы",Строка(Часы));
	Мас.Добавить(СЗ);

	ЗаписьJSON = новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Мас);
	сериализованнаяСтрока = ЗаписьJSON.Закрыть();
	
	возврат сериализованнаяСтрока;
	
	
КонецФункции     

   



&НаСервере
Процедура РасчитатьЗаписатьФактЧасов(Тномер,Должность,Сотрудник,Имя,текПериод)  
	
	Отбор = Новый Структура;
	ОТбор.Вставить("ТабНомер",Тномер);
	ОТбор.Вставить("Должность",Должность);
	ОТбор.Вставить("Сотрудник",Сотрудник); 
	
	Строки = Объект.ТЧТабель.НайтиСтроки(Отбор); 
	
	Для сч=0 По Строки.Количество()-1 Цикл 
		ЧасыФакт = 0;
		РеквизитыТаблицы = ПолучитьРеквизиты("Объект.ТЧТабель");
		Для Каждого Реквизит из РеквизитыТаблицы Цикл  
			Если Реквизит.Имя <> "НомерСтроки" И 
				Реквизит.Имя <> "ТабНомер" И
				Реквизит.Имя <> "Должность" И
				Реквизит.Имя <> "КоличествоСтрок" И
				Реквизит.Имя <> "Сотрудник" И
				Реквизит.Имя <> "НормаЧасов" И
				Реквизит.Имя <> "КолДней" И
				Реквизит.Имя <> "ИтогКолДней" И
				Реквизит.Имя <> "ИтогНормаЧасов" И
				Реквизит.Имя <> "ИтогЧасыСКУД" И  
				Реквизит.Имя <> "ИтогЧасыФакт" И  
				Реквизит.Имя <> "ЧасыФакт" И
				Реквизит.Имя <> "Ошибка" И
				Реквизит.Имя <> "ЧасыСКУД" Тогда
		    		ЧасыФакт = ЧасыФакт + Строки[сч][Реквизит.Имя]
			КонецЕсли;
			
		КонецЦикла;
		Строки[сч]["ЧасыФакт"] = ЧасыФакт ;
		
		Если Строки[сч]["ЧасыФакт"] > Строки[сч]["НормаЧасов"] Тогда
			Строки[сч]["Ошибка"] = Истина;
		Иначе
			Строки[сч]["Ошибка"] = Ложь;
		КонецЕсли;

			НоваяЗапись = РегистрыСведений.СХКТруд_КТУ.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период = Дата(Строка(текПериод) + " 00:00:00");
			Если Лев(Имя,3) = "ДЛ1" Тогда
				Линия =  Перечисления.СХКТруд_Линии.Линия1;
			ИначеЕсли Лев(Имя,3) = "ДЛ2" Тогда
				Линия =  Перечисления.СХКТруд_Линии.Линия2;
			ИначеЕсли Лев(Имя,3) = "ДЛ3" Тогда
				Линия =  Перечисления.СХКТруд_Линии.Линия3
			КонецЕсли;	
			НоваяЗапись.Линия = Линия;
			НоваяЗапись.ТабНомер = Строки[сч]["ТабНомер"];
			НоваяЗапись.Часы = Строки[сч][Имя];
			НоваяЗапись.Записать(Истина);

	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	МассивЗУП = ПолучитьМассивЗУП();
	ЗаполнитьТаблицуСотрудников(МассивЗУП);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	МассивЗУП = ПолучитьМассивЗУП();
	ЗаполнитьТаблицуСотрудников(МассивЗУП);
КонецПроцедуры

&НаКлиенте
Процедура Линия1ПриИзменении(Элемент)
	МассивЗУП = ПолучитьМассивЗУП();
	ЗаполнитьТаблицуСотрудников(МассивЗУП);
КонецПроцедуры

&НаКлиенте
Процедура Линия2ПриИзменении(Элемент)
	МассивЗУП = ПолучитьМассивЗУП();
	ЗаполнитьТаблицуСотрудников(МассивЗУП);
КонецПроцедуры

&НаКлиенте
Процедура Линия3ПриИзменении(Элемент)
	МассивЗУП = ПолучитьМассивЗУП();
	ЗаполнитьТаблицуСотрудников(МассивЗУП);
КонецПроцедуры  

&НаСервере
Процедура ТестНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(СХК_ВыпускПоЭтапу.Количество) КАК КоличествоФакт,
	|	СХК_ВыпускПоЭтапу.Линия КАК Линия,
	|	СХК_ВыпускПоЭтапу.Период КАК Период,
	|	СХК_ПланПроизводства.Количество КАК КоличествоПлан,
	|	ВЫБОР
	|		КОГДА СУММА(СХК_ВыпускПоЭтапу.Количество) * 100 / СХК_ПланПроизводства.Количество > 80
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Выполнено
	|ИЗ
	|	РегистрСведений.СХК_ВыпускПоЭтапу КАК СХК_ВыпускПоЭтапу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СХК_ПланПроизводства КАК СХК_ПланПроизводства
	|		ПО (СХК_ВыпускПоЭтапу.Линия = СХК_ПланПроизводства.Линия)
	|			И (СХК_ВыпускПоЭтапу.Период = СХК_ПланПроизводства.Период)
	|ГДЕ
	|	СХК_ВыпускПоЭтапу.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	СХК_ВыпускПоЭтапу.Линия,
	|	СХК_ВыпускПоЭтапу.Период,
	|	СХК_ПланПроизводства.Количество
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(ПериодРаботы.ДатаНачала));   
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(ПериодРаботы.ДатаОкончания));  
	
	РезВыпуска = Запрос.Выполнить().Выгрузить(); 
	//////////////////////////////
	
	Запрос = Новый Запрос;  
	Запрос.Текст = "ВЫБРАТЬ
	|	СХКТруд_КТУ.Период КАК Период,
	|	СХКТруд_КТУ.ТабНомер КАК ТабНомер,
	|	СХКТруд_КТУ.Линия КАК Линия,
	|	СХКТруд_КТУ.Часы КАК Часы,
	|	0 КАК Выполнено
	|ИЗ
	|	РегистрСведений.СХКТруд_КТУ КАК СХКТруд_КТУ
	|ГДЕ
	|	СХКТруд_КТУ.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(ПериодРаботы.ДатаНачала));   
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(ПериодРаботы.ДатаОкончания));  
	РезТаб = Запрос.Выполнить().Выгрузить();
	
	
	Для Каждого стр из РезТаб Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Период",стр.Период);
		Отбор.Вставить("Линия",стр.Линия);
		
		Строки = РезВыпуска.НайтиСтроки(Отбор);
		
		Если Строки.Количество()>=1 Тогда
			
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	ТестНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаТабельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница.Имя = "СтраницаСкуд" Тогда 
		МассивЗУП = ПолучитьМассивЗУП();
		ЗаполнитьТаблицуСотрудников(МассивЗУП);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////


&НаСервере
Процедура Расш1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("МП") Тогда // Возврат при получении формы для анализа.
		Объект.Партнер = Параметры.Партнер; 
		Объект.Расш1_РЦ = Справочники.Расш1_РЦ.НайтиПоНаименованию(Параметры.РЦ);
		Объект.Дата = Параметры.Дата;
		Объект.Соглашение = Параметры.Соглашение;
		Объект.Организация = Параметры.Организация;
		Объект.Склад = Параметры.Склад;
		Объект.Валюта = Параметры.Валюта;
		Объект.Статус = Параметры.Статус;
		Объект.Приоритет = Параметры.Приоритет;
		Объект.НалогообложениеНДС = Параметры.НалогообложениеНДС; 
		Объект.НеОтгружатьЧастями = Истина;
		Объект.ДатаОтгрузки = Параметры.Дата;


		Для Каждого стр из Параметры.Товары Цикл 
			
			Номенклатура =Справочники.Номенклатура.НайтиПоКоду(стр.Номенклатура);
			Если СокрЛП(Номенклатура.Код) <> "" Тогда 
				Т = Объект.Товары.Добавить();
				Т.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(стр.Номенклатура); 
				Т.КоличествоУпаковок = Число(стр.КоличествоУпаковок) ; 
				Т.Количество = Число(стр.КоличествоУпаковок) ;
				Т.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.КОбеспечению;
				Т.ВидЦены = Объект.Соглашение.ВидЦен; 
			КонецЕсли;
		КонецЦикла;
		
	    ПартнерПриИзмененииСервер(); 
		Объект.Расш1_МП = Истина;
	КонецЕсли;
	ДоступностьКолонок();
КонецПроцедуры

&НаСервере
Процедура ДоступностьКолонок()
    ТекПользователь = Пользователи.АвторизованныйПользователь(); 
	
	Логистика = Справочники.ГруппыПользователей.НайтиПоНаименованию("Отдел логистики"); 
	МенПрод = Справочники.ГруппыПользователей.НайтиПоНаименованию("Менеджеры по продажам"); 
	Админ = Справочники.ГруппыПользователей.НайтиПоНаименованию("Администраторы"); 
	
	//Для всех
	ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыЦена.Доступность = Ложь;	
	ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыВидЦены.Доступность = Ложь;	

	
	Отбор = Новый Структура;
	Отбор.Вставить("Пользователь",ТекПользователь);
	Строка = Логистика.Состав.НайтиСтроки(Отбор);                               
	Попытка
		Если Объект.Партнер <> Справочники.Партнеры.НайтиПоКоду("ЦБ-ЦБ000164") Тогда
			Если Строка.Количество()>=1 Тогда  
				ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыНоменклатура.Доступность = Ложь;	
				ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыЦена.Доступность = Ложь;	
				ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыКоличествоУпаковок.Доступность = Ложь; 
				ЭтаФорма.Элементы.Товары.ИзменятьСоставСтрок = Ложь;
		//
				ЭтаФорма.Элементы.Товары.КоманднаяПанель.ПодчиненныеЭлементы[0].Доступность = Ложь;
				ЭтаФорма.Элементы.Товары.КоманднаяПанель.ПодчиненныеЭлементы[1].Доступность = Ложь;  
				ЭтаФорма.Элементы.Товары.КонтекстноеМеню.ПодчиненныеЭлементы[0].Доступность = Ложь;
				ЭтаФорма.Элементы.Товары.КонтекстноеМеню.ПодчиненныеЭлементы[1].Доступность = Ложь;
				ЭтаФорма.Элементы.Товары.КонтекстноеМеню.ПодчиненныеЭлементы[2].Доступность = Ложь;
			КонецЕсли; 
		КонецЕсли; 
	Исключение
		
	КонецПопытки;
	
	
	ОтборАдмин = Новый Структура;
	ОтборАдмин.Вставить("Пользователь",ТекПользователь);
	СтрокаАдмин = Админ.Состав.НайтиСтроки(ОтборАдмин);
	Если СтрокаАдмин.Количество()>=1 Тогда  
		ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыЦена.Доступность = Истина;
		ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыВидЦены.Доступность = Истина;	
		ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыКоличествоУпаковок.Доступность = Истина;	
	КонецЕсли;
		
КонецПроцедуры


&НаСервере
Процедура Расш1_Расш1_РЦПриИзмененииПослеНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Расш1_Расш1_РЦПриИзмененииПосле(Элемент)
	Расш1_Расш1_РЦПриИзмененииПослеНаСервере();
КонецПроцедуры  

&НаКлиенте
Процедура Расш1_ПриОткрытииПеред(Отказ)
	Если Объект.Расш1_МП = Истина Тогда
		Объект.Расш1_МП = Ложь;
		Для Каждого стр из Объект.Товары Цикл 
			ТоварыВидЦеныПриОткрытии(стр);				
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура ТоварыВидЦеныПриОткрытии(ТекущаяСтрока)
	
	//ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект));
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Истина));
	СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
	
	//ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

	
	РассчитатьИтоговыеПоказателиЗаказа(ЭтаФорма);
	
	СкидкиНаценкиЗаполнениеКлиент.СброситьФлагСкидкиРассчитаны(ЭтаФорма);
	
КонецПроцедуры


&НаСервере
Процедура Расш1_ИдентификаторыПослеНаСервере()
	//zaitsev@syspod.ru #78486
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	НоменклатураКонтрагентов.Идентификатор КАК Идентификатор,
	//               |	НоменклатураКонтрагентов.Штрихкод КАК Штрихкод,
	//               |	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
	//               |	НоменклатураКонтрагентов.Упаковка КАК Упаковка
	//               |ИЗ
	//               |	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	//               |ГДЕ
	//               |	НоменклатураКонтрагентов.ПометкаУдаления = &ПометкаУдаления
	//               |	И НоменклатураКонтрагентов.Недействителен = &Недействителен";  
	//Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	//Запрос.УстановитьПараметр("Недействителен",Ложь);
	//Запрос.УстановитьПараметр("Владелец",Объект.Партнер);
	//
	//Результат = Запрос.Выполнить();
	//СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	//ТабЗнач = Результат.Выгрузить(СпособОбхода);  
	//zaitsev@syspod.ru 78486	
	Для Каждого стр из Объект.Товары Цикл
		//Отбор = Новый Структура;
		//Отбор.Вставить("Номенклатура",стр.Номенклатура);
		//Отбор.Вставить("Упаковка",стр.Упаковка);
		//Строки = ТабЗнач.НайтиСтроки(Отбор);
		// 
		Если ЗначениеЗаполнено(стр.Номенклатура) тогда 
		Результаты=ПолучитьШтрихкодИСКУ(стр);	
		стр.СХК_ШтрихКод  = Результаты.Штрихкод;
		стр.СХК_SKU  = Результаты.SKU; 
		Если НЕ(ЗначениеЗаполнено(стр.СХК_ШтрихКод) или ЗначениеЗаполнено(стр.СХК_SKU)) тогда
		//Запасная прогонка 
		Строка=стр;
		Строка.Упаковка=стр.Номенклатура.ЕдиницаИзмерения;
		Результаты=ПолучитьШтрихкодИСКУ(Строка);
		стр.СХК_ШтрихКод  = Результаты.Штрихкод;
		стр.СХК_SKU  = Результаты.SKU; 
        КонецЕсли;
		КонецЕсли;  
	КонецЦикла;
	//zaitsev@syspod.ru 78486


	//Для Каждого стр из Объект.Товары Цикл
	//	//Отбор = Новый Структура;
	//	//Отбор.Вставить("Номенклатура",стр.Номенклатура);
	//	//Отбор.Вставить("Упаковка",стр.Упаковка);
	//	//Строки = ТабЗнач.НайтиСтроки(Отбор);
	//	//
	//	Для Каждого Строк Из Строки Цикл
	//		стр.СХК_ШтрихКод  = Строк.Штрихкод;
	//		стр.СХК_SKU  = Строк.Идентификатор; 
	//	КонецЦикла;

	//КонецЦикла;
    //zaitsev@syspod.ru #78486

КонецПроцедуры

//zaitsev@syspod.ru 78486
&НаСервере
Функция ПолучитьШтрихкодИСКУ (стр) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураКонтрагентов.Идентификатор КАК Идентификатор,
		|	НоменклатураКонтрагентов.Штрихкод КАК Штрихкод,
		|	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
		|	НоменклатураКонтрагентов.Ссылка КАК Ссылка,
		|	НоменклатураКонтрагентов.Упаковка КАК Упаковка
		|ИЗ
		|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|ГДЕ
		|	НоменклатураКонтрагентов.Номенклатура = &Номенклатура
		|	И НоменклатураКонтрагентов.Упаковка = &Упаковка
		|	И НоменклатураКонтрагентов.ПометкаУдаления = &ПометкаУдаления
		|	И НоменклатураКонтрагентов.ВладелецНоменклатуры = &ВладелецНоменклатуры";
	
	Запрос.УстановитьПараметр("ВладелецНоменклатуры", Объект.Партнер);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);    
	Запрос.УстановитьПараметр("Номенклатура",стр.Номенклатура);
	Запрос.УстановитьПараметр("Упаковка",стр.Упаковка);

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Результат=Новый Структура;
	Результат.Вставить("Штрихкод","");
	Результат.Вставить("SKU","");
	Если ВыборкаДетальныеЗаписи.Количество()=0 Тогда   
		Возврат Результат;
	КонецЕсли;
	Пока ВыборкаДетальныеЗаписи.Следующий() цикл 
		Результат.Штрихкод=ВыборкаДетальныеЗаписи.Штрихкод;
		Результат.SKU=ВыборкаДетальныеЗаписи.Идентификатор;
		Возврат Результат
	КонецЦикла;
	
КонецФункции
//zaitsev@syspod.ru 78486

&НаКлиенте
Процедура Расш1_ИдентификаторыПосле(Команда)
	Расш1_ИдентификаторыПослеНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура Расш1_ПартнерБезКЛПриИзмененииПосле(Элемент)
	//++ plotnikov@syspod.ru #84483
		Объект.БанковскийСчет = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #84483
КонецПроцедуры

&НаСервере
Функция ПолучитьСчет(Контрагент)
	//++ plotnikov@syspod.ru #84483
	Возврат __СпОбщийМодуль.ЗаполнитьБанковскийСчет(Контрагент);
	//-- plotnikov@syspod.ru #84483
КонецФункции


&НаКлиенте
Процедура Расш1_КонтрагентПриИзмененииПосле(Элемент)
	//++ plotnikov@syspod.ru #84483
		Объект.БанковскийСчет = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #84483
КонецПроцедуры

&НаКлиенте
Процедура Расш1_ДоговорПриИзмененииПосле(Элемент)
	//++ plotnikov@syspod.ru #86606
		Объект.БанковскийСчет = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #86606
КонецПроцедуры

&НаКлиенте
Процедура Расш1_СоглашениеПриИзмененииПосле(Элемент)
	//++ plotnikov@syspod.ru #86606
		Объект.БанковскийСчет = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #86606
КонецПроцедуры

&НаКлиенте
&После("СоглашениеПриИзмененииЗавершение")
Процедура Расш1_СоглашениеПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры)
	//++ plotnikov@syspod.ru #84483
	Объект.БанковскийСчет = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #84483
КонецПроцедуры


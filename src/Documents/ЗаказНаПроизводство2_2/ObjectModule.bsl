
&Перед("ПередЗаписью")
Процедура Расш1_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтотОбъект.ДатаПотребности = Дата(1,1,1) Тогда
		Сообщить("Заполните желаемую дату выпуска");
		Отказ = Истина;
	КонецЕсли;
	

КонецПроцедуры

&Вместо("ОбработкаПроверкиЗаполнения")
Процедура Расш1_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
///
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(СХК_Склад,Дата) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СХК_Этаж");
	КонецЕсли;
///
	ПланируетсяГрафикПроизводства = УправлениеПроизводствомПовтИсп.ИспользуетсяГрафикПроизводства();
	
	ДатаПотребностиОбязательна = ДинамическаяСтруктура И Не ПланируетсяГрафикПроизводства
		ИЛИ Не ДинамическаяСтруктура И РазмещениеВыпуска = Перечисления.СпособыПривязкиОперацийПроизводства.КОкончанию;
		
#Область Шапка	
	
	// Подразделение-диспетчер
	Если ЗначениеЗаполнено(Подразделение) 
		И ПроизводствоСерверПовтИсп.ПараметрыПроизводственногоПодразделения(Подразделение).ПодразделениеДиспетчер <> Истина Тогда
		ТекстОшибки = НСтр("ru = 'Подразделением, ответственным за выполнение заказа, должно быть подразделение-диспетчер';
							|en = 'Dispatching unit should be a business unit responsible for the order fulfillment'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,"Подразделение", "Объект", Отказ);
	КонецЕсли;
	
	// Желаемая дата, начать не ранее, размешение выпуска
	МассивНепроверяемыхРеквизитов.Добавить("ДатаПотребности");
	
	Если Не ДатаПотребностиУказываетсяВСтроках
		И (ДатаПотребностиОбязательна И Не ЗначениеЗаполнено(ДатаПотребности)) Тогда
		ТекстОшибки = НСтр("ru = 'Желаемая дата выпуска не заполнена';
							|en = 'Requested release date is unfilled'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,"ДатаПотребностиНаФорме",, Отказ);
	КонецЕсли;
	
	Если НЕ ДатаПотребностиУказываетсяВСтроках
		И (НачатьНеРанее > ДатаПотребности И ЗначениеЗаполнено(НачатьНеРанее) И ЗначениеЗаполнено(ДатаПотребности)) Тогда
		ТекстОшибки = НСтр("ru = 'Желаемая дата выпуска меньше даты начала производства';
							|en = 'Required release date is earlier than the production start date'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,"ДатаПотребностиНаФорме",, Отказ);
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусыЗаказовНаПроизводство2_2.Формируется Или ДинамическаяСтруктура Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РазмещениеВыпуска");
	КонецЕсли;
	
	// Давальческое производство
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СобственноеПроизводство Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Партнер");
		МассивНепроверяемыхРеквизитов.Добавить("Договор");
	Иначе
		Если ДоговорНеОбязателен Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Договор");
		КонецЕсли;
	КонецЕсли;
	
	// Назначение выходных изделий получаемых в результате разборки должно быть заполнено в давальческой схеме.
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья2_5
			//++ Устарело_Переработка24
			И ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
			//-- Устарело_Переработка24
			И Истина
		ИЛИ НЕ НазначениеУказываетсяВШапкеДокумента() Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НазначениеПродукция");
	КонецЕсли;
	
	// Способ распределения затрат на выходные изделия должен быть заполнен только для заказов
	// с типом процесса "Без спецификаций"
	Если ТипПроизводственногоПроцесса <> Перечисления.ТипыПроизводственныхПроцессов.БезСпецификаций Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособРаспределенияЗатратНаВыходныеИзделия");
	КонецЕсли;

#КонецОбласти	
	
#Область Продукция
	
	// Проверка табличной части "Продукция"

	ЗаголовокТЧ = ПроизводствоКлиентСервер.ЗаголовокТабличнойЧастиПоТипуПроцесса(ТипПроизводственногоПроцесса);
	
	Если Не ЗначениеЗаполнено(Продукция) Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнена табличная часть ""%1""';
										|en = 'Table ""%1"" is not filled in'"), ЗаголовокТЧ);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Продукция",, Отказ);
		Возврат;
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("Продукция");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.Номенклатура");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.Характеристика");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.Склад");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.Подразделение");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.Назначение");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.Спецификация");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.ДатаПотребности");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.ПричинаОтмены");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.КоличествоУпаковок");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.Количество");
	МассивНепроверяемыхРеквизитов.Добавить("Продукция.ДоляСтоимости");
	
	// Детальная проверка строк табличной части "Продукция"
	
	РеквизитыНоменклатуры = Новый Соответствие;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СправочникНоменклатура.Ссылка КАК Номенклатура,
		|	СправочникНоменклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	СправочникНоменклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
		|	СправочникНоменклатура.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
		|	ВЫБОР
		|		КОГДА СправочникНоменклатура.ИспользованиеХарактеристик В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ХарактеристикиИспользуются
		|
		|ИЗ
		|	Справочник.Номенклатура КАК СправочникНоменклатура
		|ГДЕ
		|	СправочникНоменклатура.Ссылка В (&МассивСсылок)");
	Запрос.УстановитьПараметр("МассивСсылок", Продукция.ВыгрузитьКолонку("Номенклатура"));

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИменаРеквизитов		= "ТипНоменклатуры, ХарактеристикиИспользуются, ВестиУчетПоГТД, ПрослеживаемыйТовар";
		ЗначенияРеквизитов	= Новый Структура(ИменаРеквизитов);
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
		РеквизитыНоменклатуры.Вставить(Выборка.Номенклатура, ЗначенияРеквизитов);
	КонецЦикла;
	
	ХарактеристикиИспользуются = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	
	ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД =
		ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД");
	
	ШаблонАдреса = НСтр("ru = 'в строке %1 списка ""%2""';
						|en = 'in line %1 of the ""%2"" list'");
	ШаблонГТД = НСтр("ru = 'В строке %1 списка ""%2"" выбрана номенклатура, для которой ведется учет по ГТД.
		|При включенной опции ""Запретить оформление операций с импортными товарами без номеров ГТД"" выбор такой номенклатуры запрещен.';
		|en = 'Items with CCD records are selected in line %1 of the %2 list. 
		|you cannot select such products while the ""Prohibit registration of operations with imported goods without CCD numbers"" option is enabled.'");
	
	Для Каждого Строка Из Продукция Цикл
		
		АдресОшибки = СтрШаблон(ШаблонАдреса, Строка.НомерСтроки, ЗаголовокТЧ);
		
		// Проверка заполнения колонки "Номенклатура"
		Если Строка.Номенклатура.Пустая() Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Номенклатура""';
									|en = 'Column ""Items"" is not filled in'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Номенклатура");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки,ЭтотОбъект,Поле,,Отказ);
			Продолжить;
		КонецЕсли;
		
		// Проверка правильности выбора изделий при учете по ГТД
		Если Не Строка.Номенклатура.Пустая()
			И ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
			И РеквизитыНоменклатуры[Строка.Номенклатура].ВестиУчетПоГТД = Истина
			И Не РеквизитыНоменклатуры[Строка.Номенклатура].ПрослеживаемыйТовар = Истина
			И (РеквизитыНоменклатуры[Строка.Номенклатура].ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
				ИЛИ РеквизитыНоменклатуры[Строка.Номенклатура].ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара) Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонГТД,
				Строка.НомерСтроки,
				ЗаголовокТЧ);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Номенклатура");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,ЭтотОбъект, Поле,,Отказ);
			
		КонецЕсли;
		
		// Проверка заполнения колонки "Характеристика"
		Если ХарактеристикиИспользуются И РеквизитыНоменклатуры[Строка.Номенклатура].ХарактеристикиИспользуются
			И Строка.Характеристика.Пустая() Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Характеристика""';
									|en = 'Column ""Variant"" is not filled in'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Характеристика");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки,ЭтотОбъект,Поле,, Отказ);
			
		КонецЕсли;
		
		// Проверка заполнения колонки "Назначение"
		Если (ХозяйственнаяОперация = ДавальческаяСхемаКлиентСервер.ХозяйственнаяОперацияДоговора()
				//++ Устарело_Переработка24
				Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
				//-- Устарело_Переработка24
				Или Ложь)
			И Не НазначениеУказываетсяВШапкеДокумента()
			И Не Строка.Отменено
			И Не РеквизитыНоменклатуры[Строка.Номенклатура].ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара
			И Строка.Назначение.Пустая() Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Назначение""';
									|en = 'Column ""Assignment"" is not filled in'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Назначение");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки,ЭтотОбъект,Поле,, Отказ);
			
		КонецЕсли;
		
		// Проверка заполнения колонок "Склад" и "Подразделение"
		Если РеквизитыНоменклатуры[Строка.Номенклатура].ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Работа Тогда
			
			Если Строка.СписатьНаРасходы Тогда
				
				Если Строка.Подразделение.Пустая() Тогда
					
					ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Подразделение""';
											|en = 'Column ""Business unit"" is not filled in'");
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Подразделение");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки,ЭтотОбъект,Поле,, Отказ);
					
				КонецЕсли;
			Иначе
				
				Если Строка.Склад.Пустая() Тогда
					
					ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Склад""';
											|en = 'Column ""Warehouse"" is not filled in'");
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Склад");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки,ЭтотОбъект,Поле,, Отказ);
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если ТипПроизводственногоПроцесса <> Перечисления.ТипыПроизводственныхПроцессов.Сборка
				И ТипПроизводственногоПроцесса <> Перечисления.ТипыПроизводственныхПроцессов.БезСпецификаций Тогда
				
				ТекстСообщения = НСтр("ru = 'Не допускается указание работы';
										|en = 'It is not allowed to specify work'");
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Номенклатура");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки,ЭтотОбъект,Поле,,Отказ);
				
			ИначеЕсли Строка.Подразделение.Пустая() Тогда
				
				ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Подразделение""';
										|en = 'Column ""Business unit"" is not filled in'");
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Подразделение");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки, ЭтотОбъект, Поле,, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Проверка заполнения колонки "Количество"
		Если Строка.Количество = 0 И Не Строка.Отменено Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Количество""';
									|en = 'Column ""Quantity"" is not filled in'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Количество");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки, ЭтотОбъект, Поле,, Отказ);
		КонецЕсли;
			
		// Причина отмены обязательна для заполнения в строках без признака Отменено
		Если Строка.Отменено И Не ЗначениеЗаполнено(Строка.ПричинаОтмены) Тогда
			ТекстСообщения = НСтр("ru = 'Необходимо указать причину отмены';
									|en = 'Cancellation reason is required'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "ПричинаОтмены");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки, ЭтотОбъект, Поле,, Отказ);
		КонецЕсли;
		
		// Проверка заполнения колонки "Спецификация"
		Если ДинамическаяСтруктура И Строка.Спецификация.Пустая() И Не Статус = Перечисления.СтатусыЗаказовНаПроизводство2_2.Формируется Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Спецификация""';
									|en = 'Column ""BOM"" is not filled in'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "Спецификация");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки, ЭтотОбъект, Поле,, Отказ);
		КонецЕсли;

		// Проверка заполнения колонки "Дата потребности"
		Если ДатаПотребностиУказываетсяВСтроках И ДатаПотребностиОбязательна И Не ЗначениеЗаполнено(Строка.ДатаПотребности) Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Желаемая дата""';
									|en = 'The ""Requested date"" column is not filled'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "ДатаПотребности");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки, ЭтотОбъект, Поле,, Отказ);
		КонецЕсли;
		
		// Проверка соответствия дат "Начать не ранее" и "Дата потребности"
		Если ДатаПотребностиУказываетсяВСтроках И НачатьНеРанее > Строка.ДатаПотребности И ЗначениеЗаполнено(НачатьНеРанее) И ЗначениеЗаполнено(Строка.ДатаПотребности) Тогда
			ТекстСообщения = НСтр("ru = 'Желаемая дата выпуска меньше даты начала производства';
									|en = 'The required release date is earlier than the production start date'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "ДатаПотребности");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки, ЭтотОбъект, Поле,, Отказ);
		КонецЕсли;
		
		// Проверка заполнения колонки "Доля стоимости"
		Если ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.БезСпецификаций
			И ПроизводствоСервер.ТребуетсяЗаполнитьДолюСтоимости(ЭтотОбъект, Строка) Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Доля стоимости""';
									|en = 'Column ""Cost share"" is not filled in'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Строка.НомерСтроки, "ДоляСтоимости");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + " " + АдресОшибки, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СобственноеПроизводство
			И (ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья2_5")
				//++ Устарело_Переработка24
				Или ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоИзДавальческогоСырья")
				//-- Устарело_Переработка24
				Или Ложь) Тогда
		ПроверитьДавальческиеНазначенияВТЧПродукция(Отказ); // нужна проверка указания давальческих назначений.
	КонецЕсли;
 	
	ПараметрыВыбораСтатейИАналитик = Документы.ЗаказНаПроизводство2_2.ПараметрыВыбораСтатейИАналитик(ЭтотОбъект);
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ИмяТЧ = "Продукция";
	НоменклатураСервер.ПроверитьОкруглениеКоличества(ЭтотОбъект, Отказ, ПараметрыПроверки);

#КонецОбласти	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ЗаказНаПроизводство2_2Локализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

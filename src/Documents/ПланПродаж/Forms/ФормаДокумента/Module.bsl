

&НаСервере
Процедура Расш1_ВидПланаПриИзмененииПослеНаСервере() 
	//Объект.Товары.Очистить();
	Для Каждого стр из Объект.СЗНоменклатура Цикл
		Т = ЭтаФорма.ТоварыПоПериодам.Добавить();
		Т.Номенклатура = стр.Номенклатура;
	КонецЦикла;
	Объект.СЗНоменклатура.Очистить();
		
КонецПроцедуры


&НаКлиенте
Процедура Расш1_ВидПланаПриИзмененииПосле(Элемент)
	Если Объект.СЗНоменклатура.Количество() > 0  Тогда
		Расш1_ВидПланаПриИзмененииПослеНаСервере();
	КонецЕсли;
	
КонецПроцедуры

 


// Параметры:
// 	ТаблицаПериоды см. Планирование.ТаблицаПериоды
// 	ПересчитыватьИтоговыеПоказатели - Булево - Описание
&НаСервере    
&Вместо ("ОбновитьСтруктуруКроссТаблицы")
Процедура СХК_ОбновитьСтруктуруКроссТаблицы(ТаблицаПериоды, ПересчитыватьИтоговыеПоказатели = Истина)
	
	КоличествоПериодов = ТаблицаПериоды.НайтиСтроки(Новый Структура("Активная", Истина)).Количество();
	ЭтоОдинПериод = КоличествоПериодов = 1;
	
	Элементы.ТоварыДатаОтгрузки.СписокВыбора.Очистить();
	Для каждого Период Из ТаблицаПериоды Цикл
		Если НЕ Период.Активная Тогда
			Продолжить;
		КонецЕсли; 
		Элементы.ТоварыДатаОтгрузки.СписокВыбора.Добавить(НачалоДня(Период.ДатаНачала), Период.Заголовок);
	КонецЦикла; 
	
	Элементы.ТоварыЦена.Видимость = Объект.ПланироватьПоСумме;
	Элементы.ТоварыСумма.Видимость = Объект.ПланироватьПоСумме;
	
	Элементы.ТоварыПоПериодамКоличествоУпаковок.Видимость = НЕ ЭтоОдинПериод;
	
	Элементы.ТоварыПоПериодамЦена.Видимость = Объект.ПланироватьПоСумме И НЕ ЭтоОдинПериод;
	Элементы.ТоварыПоПериодамСумма.Видимость = Объект.ПланироватьПоСумме И НЕ ЭтоОдинПериод;
	Элементы.ГруппаИтоги.Видимость = Объект.ПланироватьПоСумме;
	
	Если Не Объект.КроссТаблица
		Или ЭтоОдинПериод Тогда
		ИтогоПоСтрокеКолонке = "";
	КонецЕсли;
	
	Элементы.КомментарийКЯчейке.Видимость = Объект.КроссТаблица И НЕ ЭтоОдинПериод;
	Элементы.ЯчейкаОтменена.Видимость = Объект.КроссТаблица И НЕ ЭтоОдинПериод;
		
	Если НЕ Объект.КроссТаблица 
		И Не ИспользуютсяПланируемыеОстатки Тогда
		ЗначениеВРеквизитФормы(ТаблицаПериоды,"Периоды");
		СохранитьНовыйПериодСервер();
		ОбновитьПризнакЗамещения();
		Возврат;
	Иначе
		ОбновитьПризнакЗамещения(Истина);
	КонецЕсли;
	
	ПараметрыВывода = Новый Структура;
	ПараметрыВывода.Вставить("ИмяРеквизитаКроссТаблицы", "ТоварыПоПериодам");
	ПараметрыВывода.Вставить("ЭлементФормыКроссТаблицы", "ТоварыПоПериодам");
	ПараметрыВывода.Вставить("ТаблицаПериодов", ТаблицаПериоды);
	ПараметрыВывода.Вставить("Периодичность", Объект.Периодичность);
	ПараметрыВывода.Вставить("Поля", Новый Массив());
	ПараметрыВывода.Вставить("СоздаватьГруппуПериода", НЕ ЭтоОдинПериод И Объект.ПланироватьПоСумме);
	
	Если НЕ ЭтоОдинПериод Тогда
		Планирование.ДобавитьПолеКроссТаблицыГруппаКомментарияСКартинкой(ПараметрыВывода);
	КонецЕсли; 

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "СХК_Подключаемый_ПриИзмененииКоличества");
	Планирование.ДобавитьПолеКроссТаблицыКоличество(
		ПараметрыВывода, 
		Истина, 
		НЕ ЭтоОдинПериод, 
		Объект.ПланироватьПоСумме ИЛИ ЭтоОдинПериод, 
		СтруктураДействий);

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "Подключаемый_ПриИзмененииЦены");
	Планирование.ДобавитьПолеКроссТаблицыЦена(
		ПараметрыВывода, 
		Объект.ПланироватьПоСумме, 
		Ложь, 
		СтруктураДействий);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "Подключаемый_ПриИзмененииСуммы");
	Планирование.ДобавитьПолеКроссТаблицыСумма(ПараметрыВывода, Объект.ПланироватьПоСумме И ЭтоОдинПериод, СтруктураДействий);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "Подключаемый_ПриИзмененииОтменено");
	Планирование.ДобавитьПолеКроссТаблицыОтменено(ПараметрыВывода, ЭтоОдинПериод, СтруктураДействий);
	
	СтруктураДействий = Новый Структура;
	Планирование.ДобавитьПолеКроссТаблицыЗамещен(ПараметрыВывода, ЭтоОдинПериод И Объект.Замещающий, СтруктураДействий);
	Планирование.ДобавитьПолеКроссТаблицыЗамещенКЗаказу(ПараметрыВывода, Ложь, СтруктураДействий);

	Если ЭтоОдинПериод Тогда
		Планирование.ДобавитьПолеКроссТаблицыГруппаКомментарияСКартинкой(ПараметрыВывода);
	КонецЕсли;
//
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "СХК_Подключаемый_ПриИзмененииКоличестваНеделя");
	Планирование.ДобавитьПолеКроссТаблицыКоличествоНеделя(
		ПараметрыВывода, 
		Истина, 
		НЕ ЭтоОдинПериод, 
		Объект.ПланироватьПоСумме ИЛИ ЭтоОдинПериод, 
		СтруктураДействий,1);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "СХК_Подключаемый_ПриИзмененииКоличестваНеделя");
	Планирование.ДобавитьПолеКроссТаблицыКоличествоНеделя(
		ПараметрыВывода, 
		Истина, 
		НЕ ЭтоОдинПериод, 
		Объект.ПланироватьПоСумме ИЛИ ЭтоОдинПериод, 
		СтруктураДействий,2);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "СХК_Подключаемый_ПриИзмененииКоличестваНеделя");
	Планирование.ДобавитьПолеКроссТаблицыКоличествоНеделя(
		ПараметрыВывода, 
		Истина, 
		НЕ ЭтоОдинПериод, 
		Объект.ПланироватьПоСумме ИЛИ ЭтоОдинПериод, 
		СтруктураДействий,3);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "СХК_Подключаемый_ПриИзмененииКоличестваНеделя");
	Планирование.ДобавитьПолеКроссТаблицыКоличествоНеделя(
		ПараметрыВывода, 
		Истина, 
		НЕ ЭтоОдинПериод, 
		Объект.ПланироватьПоСумме ИЛИ ЭтоОдинПериод, 
		СтруктураДействий,4);
//
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПриИзменении", "Подключаемый_ПриИзмененииКомментария");
	//СтруктураДействий.Вставить("ПриИзменении", "СХК_Подключаемый_ПриИзмененииКоличестваНеделя");
	Планирование.ДобавитьПолеКроссТаблицыКомментарий(ПараметрыВывода, ЭтоОдинПериод, СтруктураДействий);
	
	Если Объект.ЗаполнятьПоФормуле Тогда
		ДобавитьПоляИзДопПараметров(ПараметрыВывода);
	КонецЕсли;
	
	Планирование.СХК_ОбновитьСтруктуруВыводаКроссТаблицы(ЭтаФорма, ПараметрыВывода);
	
	ЗначениеВРеквизитФормы(ТаблицаПериоды,"Периоды");
	
	УстановитьУсловноеОформление();
	УстановитьУсловноеОформлениеКроссТаблицы();
	
	Если ПересчитыватьИтоговыеПоказатели Тогда
		РассчитатьИтоговыеПоказатели(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

//
&НаСервере 
&Вместо ("ПараметрыПреобразованияКроссТаблицы")
Функция СХК_ПараметрыПреобразованияКроссТаблицы()

	ТаблицаПериоды = РеквизитФормыВЗначение("Периоды", Тип("ТаблицаЗначений"));
	
	СтруктураРеквизитовПериода = Новый Структура("ДатаНачала","ДатаОтгрузки");
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Количество_","КоличествоУпаковок"); 
	СтруктураРеквизитов.Вставить("КоличествоНеделя1_","КоличествоНеделя1");
	СтруктураРеквизитов.Вставить("КоличествоНеделя2_","КоличествоНеделя2");
	СтруктураРеквизитов.Вставить("КоличествоНеделя3_","КоличествоНеделя3");
	СтруктураРеквизитов.Вставить("КоличествоНеделя4_","КоличествоНеделя4");
	СтруктураРеквизитов.Вставить("Цена_","Цена");
	СтруктураРеквизитов.Вставить("Сумма_","Сумма");
	СтруктураРеквизитов.Вставить("Отменено_","Отменено");
	СтруктураРеквизитов.Вставить("Замещен_","Замещен");
	СтруктураРеквизитов.Вставить("ЗамещенКЗаказу_","ЗамещенКЗаказу");
	СтруктураРеквизитов.Вставить("Комментарий_","Комментарий");
	//СтруктураРеквизитов.Вставить("РасшИД","РасшИД");
	
	Если Объект.ЗаполнятьПоФормуле Тогда
		ДобавитьРеквизитыИзДопПараметров(СтруктураРеквизитов);
	КонецЕсли;
	
	ПоляГруппировки = "Номенклатура, Характеристика, Назначение, Упаковка, Склад, Партнер, Соглашение";
	
	СтруктураИтоговыхРеквизитов = Новый Структура;
	СтруктураИтоговыхРеквизитов.Вставить("КоличествоУпаковок", "КоличествоУпаковок");
	СтруктураИтоговыхРеквизитов.Вставить("Сумма", "Сумма");
	
	ПараметрыПреобразования = Новый Структура;
	ПараметрыПреобразования.Вставить("ТаблицаПериоды",              ТаблицаПериоды);
	ПараметрыПреобразования.Вставить("Периодичность",               Объект.Периодичность);
	ПараметрыПреобразования.Вставить("СтруктураРеквизитовПериода",  СтруктураРеквизитовПериода);
	ПараметрыПреобразования.Вставить("СтруктураРеквизитов",         СтруктураРеквизитов);
	ПараметрыПреобразования.Вставить("ПоляГруппировки",             ПоляГруппировки);
	ПараметрыПреобразования.Вставить("СтруктураИтоговыхРеквизитов", СтруктураИтоговыхРеквизитов);
	
	Возврат ПараметрыПреобразования;

КонецФункции

//
&НаКлиенте 
//&Вместо ("Подключаемый_ПриИзмененииКоличества")
Процедура СХК_Подключаемый_ПриИзмененииКоличества(Элемент)
	
	СтрокаТоваров = Элементы.ТоварыПоПериодам.ТекущиеДанные;
	
	ПриИзмененииКоличестваСуммыСтроки(Объект, ЭтаФорма, СтрокаТоваров);
	
	Если Объект.ЗаполнятьПоФормуле Тогда
		ПриИзмененииКоличестваОтклонение(СтрокаТоваров);
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрокаТоваров, СтруктураДействий, КэшированныеЗначения);
	
	РассчитатьИтоговыеПоказатели(ЭтаФорма, Ложь);
	
	ТоварыПоПериодамПриАктивизацииЯчейки(Элементы.ТоварыПоПериодам);
	
КонецПроцедуры

&НаКлиенте
Процедура СХК_Подключаемый_ПриИзмененииКоличестваНеделя(Элемент)
	СтрокаТоваров = Элементы.ТоварыПоПериодам.ТекущиеДанные;
	СХК_ПриИзмененииКоличестваНеделяСтроки(Объект, ЭтаФорма, СтрокаТоваров,Элемент.Имя);
	СХК_Подключаемый_ПриИзмененииКоличества(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Расш1_ЗаполнитьИдПосле(Команда)
	ЗаполнитьИдентификаторыСервер();
КонецПроцедуры


&НаСервере 
Процедура ЗаполнитьИдентификаторыСервер()
	Для Каждого стр из ЭтаФорма.ТоварыПоПериодам Цикл
		ИД = ПолучитьИД(стр.Номенклатура);
		Если ИД <> "" Тогда
			стр.Идентификатор = ИД;
		Иначе
			стр.Идентификатор = ПолучитьШК(стр.Номенклатура);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьШК(Номен)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
	Запрос.УстановитьПараметр("Номенклатура",Номен);
	Рез = Запрос.Выполнить().Выбрать();
	штрих = "";
	Пока Рез.Следующий() Цикл 
		штрих = Рез.Штрихкод;
	КонецЦикла; 
	Возврат штрих;	
КонецФункции 

&НаСервере 
Функция ПолучитьИД(Номен)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураКонтрагентов.ВладелецНоменклатуры КАК ВладелецНоменклатуры,
	               |	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
	               |	НоменклатураКонтрагентов.Идентификатор КАК Идентификатор
	               |ИЗ
	               |	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	               |ГДЕ
	               |	НоменклатураКонтрагентов.ВладелецНоменклатуры = &ВладелецНоменклатуры
	               |	И НоменклатураКонтрагентов.Номенклатура = &Номенклатура";  
	
	Запрос.УстановитьПараметр("ВладелецНоменклатуры",Объект.Партнер);
	Запрос.УстановитьПараметр("Номенклатура",Номен);
	Рез = Запрос.Выполнить().Выбрать();	
	Идентификатор = "";
	Пока Рез.Следующий() Цикл 
		Идентификатор = Рез.Идентификатор;
	КонецЦикла;
	
		
	Возврат Идентификатор;	
КонецФункции

//&Вместо ("ПриИзмененииКоличестваСуммыСтроки")
&НаКлиентеНаСервереБезКонтекста
Процедура СХК_ПриИзмененииКоличестваНеделяСтроки(Объект, Форма, СтрокаТоваров,Преф) 
	
	Пр = СтрЗаменить(Преф,"ТоварыПоПериодамКоличествоНеделя1_","");
	Пр = СтрЗаменить(Пр,"ТоварыПоПериодамКоличествоНеделя2_","");
	Пр = СтрЗаменить(Пр,"ТоварыПоПериодамКоличествоНеделя3_","");
	Пр = СтрЗаменить(Пр,"ТоварыПоПериодамКоличествоНеделя4_","");
	
	СтрокаТоваров["Количество_"+Пр]  = Число(СтрокаТоваров["КоличествоНеделя1_"+Пр]) + Число(СтрокаТоваров["КоличествоНеделя2_"+Пр]) +
										Число(СтрокаТоваров["КоличествоНеделя3_"+Пр]) + Число(СтрокаТоваров["КоличествоНеделя4_"+Пр]);

КонецПроцедуры 
  

&НаСервере
Процедура Расш1_ПересчитатьПослеНаСервере()

	ПересчитатьИтоговыеПоказатели(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Расш1_ПересчитатьПосле(Команда)
	Расш1_ПересчитатьПослеНаСервере();
КонецПроцедуры
  

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьИтоговыеПоказатели(Форма, РассчитыватьСтроки = Истина)

	Объект = Форма.Объект;
	
	Если НЕ Объект.КроссТаблица Тогда
	
		Объект.СуммаДокумента = 0;
		Если Объект.ПланироватьПоСумме Тогда
			
			НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Отменено", Ложь));
			Для каждого СтрокаТЧ Из НайденныеСтроки Цикл
				
				Объект.СуммаДокумента = Объект.СуммаДокумента + СтрокаТЧ.Сумма;
				
			КонецЦикла;
		
		КонецЕсли;
		
		Возврат;
	
	КонецЕсли;
	
	Товары = Форма.ТоварыПоПериодам;
	
	Форма["КоличествоУпаковок"] = 0;
	Объект.СуммаДокумента = 0;
	
	ПрефиксКолонкиКоличество = "ТоварыПоПериодам" + "Количество_";
	ПрефиксКолонкиСумма      = "ТоварыПоПериодам" + "Сумма_";
	
	Для каждого СтрокаПериода Из Форма.Периоды Цикл
		Если НЕ СтрокаПериода.Активная Тогда
			Продолжить;
		КонецЕсли;
		
		Форма[ПрефиксКолонкиКоличество + СтрокаПериода.ИмяКолонки] = 0;
		Форма[ПрефиксКолонкиСумма + СтрокаПериода.ИмяКолонки] = 0;
		
	КонецЦикла;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий);
	КэшированныеЗначения = Неопределено;
	
	Для каждого СтрокаТЧ Из Товары Цикл
		Если РассчитыватьСтроки Тогда
			СтрокаТЧ.КоличествоУпаковок = 0;
			СтрокаТЧ.Сумма = 0;
			Цена = Неопределено;
		КонецЕсли;
		
		КолонкиЦенДляОбновления = Новый Массив;
		
		Для каждого СтрокаПериода Из Форма.Периоды Цикл
			Если НЕ СтрокаПериода.Активная Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаТЧ["Замещен_"+ СтрокаПериода.ИмяКолонки] = СтрокаПериода.Замещен;
			СтрокаТЧ["ЗамещенКЗаказу_"+ СтрокаПериода.ИмяКолонки] = СтрокаПериода.ЗамещенКЗаказу;
			
			Если РассчитыватьСтроки Тогда
				
				Если Цена = Неопределено
					И СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки] <> 0 Тогда
					Цена = СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки];
				ИначеЕсли Цена <> СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки] И СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки] <> 0 Тогда
					Цена = 0;
				ИначеЕсли Цена <> СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки] 
					И СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки] = 0 
					И СтрокаТЧ["Количество_" + СтрокаПериода.ИмяКолонки] = 0 Тогда
					КолонкиЦенДляОбновления.Добавить(СтрокаПериода.ИмяКолонки);
				КонецЕсли;
				
				Если СтрокаТЧ["Отменено_" + СтрокаПериода.ИмяКолонки] Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТЧ["Количество_" + СтрокаПериода.ИмяКолонки] =  СтрокаТЧ["КоличествоНеделя1_" + СтрокаПериода.ИмяКолонки]+ СтрокаТЧ["КоличествоНеделя2_" + СтрокаПериода.ИмяКолонки]+ СтрокаТЧ["КоличествоНеделя3_" + СтрокаПериода.ИмяКолонки]+ СтрокаТЧ["КоличествоНеделя4_" + СтрокаПериода.ИмяКолонки];
				СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.КоличествоУпаковок + СтрокаТЧ["Количество_" + СтрокаПериода.ИмяКолонки] ;
				//СтрокаТЧ["Сумма_" + СтрокаПериода.ИмяКолонки] = СтрокаТЧ["Количество_" + СтрокаПериода.ИмяКолонки] * СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки];
				СтрокаТЧ["Сумма_" + СтрокаПериода.ИмяКолонки] = СтрокаТЧ["Количество_" + СтрокаПериода.ИмяКолонки] * СтрокаТЧ["Цена_" + СтрокаПериода.ИмяКолонки];
				СтрокаТЧ.Сумма = СтрокаТЧ.Сумма + СтрокаТЧ["Сумма_" + СтрокаПериода.ИмяКолонки];
			КонецЕсли;
			
			Если СтрокаТЧ["Отменено_" + СтрокаПериода.ИмяКолонки] Тогда
				Продолжить;
			КонецЕсли;
			
			Форма[ПрефиксКолонкиКоличество + СтрокаПериода.ИмяКолонки] = Форма[ПрефиксКолонкиКоличество + СтрокаПериода.ИмяКолонки] + СтрокаТЧ["Количество_" + СтрокаПериода.ИмяКолонки];
			Форма[ПрефиксКолонкиСумма + СтрокаПериода.ИмяКолонки] = Форма[ПрефиксКолонкиСумма + СтрокаПериода.ИмяКолонки] + СтрокаТЧ["Сумма_" + СтрокаПериода.ИмяКолонки];
			
		КонецЦикла;
		
		Форма["КоличествоУпаковок"] = Форма["КоличествоУпаковок"] + СтрокаТЧ["КоличествоУпаковок"];
		Объект.СуммаДокумента = Объект.СуммаДокумента + СтрокаТЧ["Сумма"];
		
		Если РассчитыватьСтроки Тогда
			СтрокаТЧ["Цена"] = Цена;
			Если Цена <> Неопределено И Цена > 0 Тогда
				Для каждого КолонкаЦеныДляОбновления Из КолонкиЦенДляОбновления Цикл
					СтрокаТЧ["Цена_" + КолонкаЦеныДляОбновления] = Цена; 
				КонецЦикла;
			КонецЕсли;
			
			#Если Клиент Или ТолстыйКлиентУправляемоеПриложение Тогда
				ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураДействий, КэшированныеЗначения);
			#КонецЕсли
		КонецЕсли;
		
		ПланированиеКлиентСервер.УстановитьПредставлениеФормулы(Форма, СтрокаТЧ);
		
	КонецЦикла;
	
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		Если РассчитыватьСтроки Тогда
			ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, КэшированныеЗначения);
		КонецЕсли;
	#КонецЕсли 
	
КонецПроцедуры

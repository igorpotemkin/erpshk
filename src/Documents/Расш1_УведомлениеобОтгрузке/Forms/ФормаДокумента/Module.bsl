
&НаКлиенте
Процедура РазбитьСтроку(Команда)
	ТаблицаФормы  = Элементы.Товары;
	ДанныеТаблицы = Объект.Товары;

	//20230628 не выполнялся пересчет табличной части
	//СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаСуммы(
	//	"Количество, Сумма, СуммаНДС, СуммаСНДС",
	//	Неопределено, "КоличествоУпаковок");
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаСуммы(
		"Количество, Сумма, СуммаНДС, СуммаСНДС",
		"КоличествоУпаковок",Неопределено);
//-
	Если ТаблицаФормы.ТекущиеДанные <> Неопределено Тогда
		ОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьСтруктуруПересчетаСуммы(СтруктураПересчетаСуммы, ТаблицаФормы.ТекущиеДанные);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СтруктураПересчетаСуммы", СтруктураПересчетаСуммы);
		
	РаботаСТабличнымиЧастямиКлиент.РазбитьСтроку(ДанныеТаблицы, ТаблицаФормы,
		Новый ОписаниеОповещения("РазбитьСтрокуЗавершение", ЭтотОбъект, ДополнительныеПараметры));
	
	//ОбщегоНазначенияУТКлиент.РазбитьСтрокуТЧ(
	//	ДанныеТаблицы,
	//	ТаблицаФормы,
	//	Новый ОписаниеОповещения("РазбитьСтрокуЗавершение", ЭтотОбъект, ДополнительныеПараметры));
	 Элементы.Товары.ТекущиеДанные.Паллета = Неопределено;
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста	
Функция ЗависимыеРеквизиты()
	
	Возврат Новый Структура(
		"БезВозвратнойТары",
		"Сумма,СуммаНДС,СуммаСНДС");
	
КонецФункции
	
&НаКлиенте
Процедура РазбитьСтрокуЗавершение(НоваяСтрока, ДополнительныеПараметры) Экспорт 
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	Если НоваяСтрока <> Неопределено Тогда
		
		ОбработкаТабличнойЧастиКлиентСервер.ДобавитьСтрокуДляПересчетаСуммы(ДополнительныеПараметры.СтруктураПересчетаСуммы, ТекущаяСтрока);
		ОбработкаТабличнойЧастиКлиентСервер.ДобавитьСтрокуДляПересчетаСуммы(ДополнительныеПараметры.СтруктураПересчетаСуммы, НоваяСтрока);
		ОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммы(ДополнительныеПараметры.СтруктураПересчетаСуммы);
		
		//СтруктураДействий = Новый Структура;
		//СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", 
		//	Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
		//		Объект.РеализацияПоЗаказам,
		//		Объект.ТребуетсяЗалогЗаТару));
		//СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
		//
		//ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		//ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
		//
		//ПродажиКлиентСервер.РассчитатьИтоговыеПоказателиРеализации(ЭтаФорма);
		
	КонецЕсли;
		
	//УстановитьВидимостьРеквизитовОплаты(ЭтаФорма);

		
		
КонецПроцедуры

&НаСервере
Процедура КомандаСформироватьSSCCНаСервере(ДанныеФормы,Номенклатура,КоличествоУпаковок)
	Спр = ДанныеФормыВЗначение(ДанныеФормы, Тип("СправочникОбъект.Расш1_Паллеты")); 

	Спр = Справочники.Расш1_Паллеты.СоздатьЭлемент();
	Спр.ТипУпаковки = Справочники.Расш1_ТипыУпаковки.НайтиПоКоду("201"); 
	Спр.Длина = Спр.ТипУпаковки.Длина;
	Спр.Ширина = Спр.ТипУпаковки.Ширина;
	Спр.Высота = Спр.ТипУпаковки.Высота;
	Спр.ВесБруттоУпаковки = Спр.ТипУпаковки.ВесУпаковки+ (Номенклатура.ВесЧислитель * КоличествоУпаковок/Номенклатура.ВесЗнаменатель);
	Спр.ВесНеттоУпаковки = Номенклатура.ВесЧислитель * КоличествоУпаковок/Номенклатура.ВесЗнаменатель;
	Спр.УстановитьНовыйКод();
	//Спр.Записать();
	Упаковка = Спр.ТипУпаковки.КодУпаковки; 
	Массив = Новый Массив(18);
	Массив[0] = Число(Упаковка);	
	Массив[10] = 0;
	Массив[11] = 0; 
	Массив[12] = 0;
	Массив[13] = 0; 
	Массив[14] = 0;
	Массив[15] = 0; 
	Массив[16] = 0;
	Массив[17] = 0; 
		
		
	НомерПлательщика=Формат(4630017469994,"ЧГ="); 
		
	Для Индекс = 1 по 9 Цикл
		Массив[Индекс]=Число(Лев(НомерПлательщика,1));
		НомерПлательщика=Сред(НомерПлательщика,2,СтрДлина(НомерПлательщика)-1);
	КонецЦикла;
		
		
	НомерПаллеты=Формат(спр.Код,"ЧЦ=2; ЧВН=");
			
	Для Индекс = (17-СтрДлина(НомерПаллеты)) по 17-1 Цикл
		Массив[Индекс]=Число(Лев(НомерПаллеты,1));
		НомерПаллеты=Сред(НомерПаллеты,2,СтрДлина(НомерПаллеты)-1);
	КонецЦикла;
		
	СуммаЧетных=0;
	СуммаНечетных=0;
		
	Для Индекс = 0 по 17-1 Цикл
		Если Индекс%2=0 Тогда
			СуммаЧетных=СуммаЧетных+Массив[Индекс];
		Иначе
			СуммаНечетных=СуммаНечетных+Массив[Индекс];
		КонецЕсли;	
	КонецЦикла;

	КонтрольноеЧисло=10-(СуммаЧетных*3+СуммаНечетных)%10;
	Если КонтрольноеЧисло=10 Тогда
		Массив[17]=0;
	Иначе
		Массив[17]=КонтрольноеЧисло;
	КонецЕсли;

		
	Код=0;
	
	Для Индекс = 0 по 17 Цикл
		  Код=Код+Массив[Индекс]*Pow(10, 17-Индекс);
	КонецЦикла;	
	  
	Если Число(Упаковка)=0 Тогда
	  ШтрихКод="0"+Строка(Формат(Код,"ЧГ=")); 
	Иначе	   
	  ШтрихКод=Строка(Формат(Код,"ЧГ="));
	КонецЕсли;
	Спр.Наименование = ШтрихКод;
	Спр.Записать();
	ЗначениеВДанныеФормы(спр,ДанныеФормы);	    
КонецПроцедуры

&НаКлиенте
Процедура КомандаСформироватьSSCC(Команда)
	Перем Спр;
	Если Элементы.Товары.ТекущиеДанные.Паллета.Пустая() Тогда
	    Форма = ПолучитьФорму("Справочник.Расш1_Паллеты.Форма.ФормаЭлемента");
		ДанныеФормы = Форма.Объект; 
		КомандаСформироватьSSCCНаСервере(ДанныеФормы,Элементы.Товары.ТекущиеДанные.Номенклатура,Элементы.Товары.ТекущиеДанные.КоличествоУпаковок); // Заполняем документ на сервере
		Элементы.Товары.ТекущиеДанные.Паллета = ДанныеФормы.Ссылка;
	КонецЕСли;
	СсылкаНаЭлементСправочника = Элементы.Товары.ТекущиеДанные.Паллета;
	ПараметрыФормы = Новый Структура("Ключ", СсылкаНаЭлементСправочника);
	ОткрытьФорму("Справочник.Расш1_Паллеты.ФормаОбъекта", ПараметрыФормы);
	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиНаСервере(ПутьКФайлам)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеСведения.Значение КАК Значение
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	 ДополнительныеСведения.Свойство.Имя = &Имя";
	Запрос.УстановитьПараметр("Имя", "ПутьКФайламОбмена");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПутьКФайлам = Выборка.Значение;
	Иначе
		Сообщить("Не указан путь к файлам в доп.сведениях организации");
		ПутьКФайлам = "";
	КонецЕсли;
	Если ЗначениеЗаполнено(ПутьКФайлам) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДополнительныеСведения.Объект КАК Объект,
		               |	ДополнительныеСведения.Значение КАК Значение
		               |ИЗ
		               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               |ГДЕ
		               |	ДополнительныеСведения.Свойство.Имя = &Имя и ДополнительныеСведения.Объект = &объект";
		Запрос.УстановитьПараметр("Имя", "GLN_Партнер");
		Запрос.УстановитьПараметр("Объект", Объект.ДокументРеализации.партнер);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ПутьКФайлам= ПутьКФайлам + "\" + СокрЛП(Выборка.Значение)+"\OUT\";
			Запрос.УстановитьПараметр("Имя", "ПапкаСПодтверждениями");
			Запрос.УстановитьПараметр("Объект", Объект.ДокументРеализации.партнер);
			ВыборкаП = Запрос.Выполнить().Выбрать();
			Если ВыборкаП.Следующий() Тогда
				ПутьКФайлам= ПутьКФайлам + СокрЛП(ВыборкаП.Значение)+"\";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры



&НаСервере
Процедура ПолучитьДанныеРеализации(ДокРеализация)
	ДокРеализация = Новый Структура;
	ДокРеализация.Вставить("Номер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.ДокументРеализации.Номер));
	ДокРеализация.Вставить("Дата", Объект.ДокументРеализации.Дата);
	ДокРеализация.Вставить("НомерДоговора", Объект.ДокументРеализации.Договор.Номер);
	ДокРеализация.Вставить("НомерЗаказа", Объект.ДокументРеализации.ЗаказКлиента.НомерПоДаннымКлиента);
	ДокРеализация.Вставить("ДатаЗаказа", Объект.ДокументРеализации.ЗаказКлиента.ДатаПоДаннымКлиента);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		               |	ДополнительныеСведения.Объект КАК Объект,
		               |	ДополнительныеСведения.Значение КАК Значение
		               |ИЗ
		               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               |ГДЕ
		               |	ДополнительныеСведения.Свойство.Имя = &Имя и ДополнительныеСведения.Объект = &объект";
	Запрос.УстановитьПараметр("Имя", "GLN_Партнер");
	Запрос.УстановитьПараметр("Объект", Объект.ДокументРеализации.партнер);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДокРеализация.Вставить("ILN_Партнер", Выборка.Значение);
	КонецЕСли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		               |	ДополнительныеСведения.Объект КАК Объект,
		               |	ДополнительныеСведения.Значение КАК Значение
		               |ИЗ
		               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               |ГДЕ
		               |	ДополнительныеСведения.Свойство.Имя = &Имя и ДополнительныеСведения.Объект = &объект";
	Запрос.УстановитьПараметр("Имя", "GLN_Контрагент");
	Запрос.УстановитьПараметр("Объект", Объект.ДокументРеализации.Грузополучатель);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДокРеализация.Вставить("ILN_Грузополучатель", Выборка.Значение);
	КонецЕСли;


КонецПроцедуры

&НаСервере
Процедура ПолучитьСтрокуДокумент(НомерСтроки, СтрДокСтруктура)
	Стрдок = Объект.Товары[НомерСтроки-1];
	СтрДокСтруктура = Новый Структура;
	СтрДокСтруктура.Вставить("НомерСтроки", СтрДок.НомерСтроки);
	СтрДокСтруктура.Вставить("ТипУпаковки", СтрДок.Паллета.ТипУпаковки.Код);
	СтрДокСтруктура.Вставить("СерийныйНомер", СтрДок.Паллета.Наименование);
	СтрДокСтруктура.Вставить("ВесУпаковкиНетто", СтрДок.Паллета.ВесНеттоУпаковки);
	СтрДокСтруктура.Вставить("ВесУпаковкиБрутто", СтрДок.Паллета.ВесБруттоУпаковки);
	СтрДокСтруктура.Вставить("Длина", СтрДок.Паллета.Длина);
	СтрДокСтруктура.Вставить("Ширина", СтрДок.Паллета.Ширина);
	СтрДокСтруктура.Вставить("Высота", СтрДок.Паллета.Высота);
КонецПроцедуры


&НаСервере
Процедура ПолучитьСтрокуДокументПродукт(НомерСтроки, СтрДокСтруктура)
	Стрдок = Объект.Товары[НомерСтроки-1];
	СтрДокСтруктура = Новый Структура;
	Запрос = Новый ЗАпрос;
	Запрос.Текст = "ВЫБРАТЬ
	|НоменклатураПоставщиков.Артикул КАК Артикул
	|ИЗ
	|Справочник.НоменклатураКонтрагентов КАК НоменклатураПоставщиков
	|ГДЕ
	|НоменклатураПоставщиков.Номенклатура = &Номенклатура
	|И НоменклатураПоставщиков.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Номенклатура", СтрДок.Номенклатура);
	Запрос.УстановитьПараметр("Владелец", Объект.ДокументРеализации.Партнер);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтрДокСтруктура.Вставить("КодТоварапокупателя", Выборка.Артикул);	
	Иначе
		СтрДокСтруктура.Вставить("КодТоварапокупателя", "");	
	КонецЕсли;
	
	Запрос = Новый ЗАпрос;
	Запрос.Текст = "ВЫБРАТЬ
	|ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
	Запрос.УстановитьПараметр("Номенклатура", СтрДок.Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтрДокСтруктура.Вставить("ШтрихКод", Выборка.ШтрихКод);	
	Иначе
		СтрДокСтруктура.Вставить("ШтрихКод", "");	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		               |	ДополнительныеСведения.Объект КАК Объект,
		               |	ДополнительныеСведения.Значение КАК Значение
		               |ИЗ
		               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               |ГДЕ
		               |	ДополнительныеСведения.Свойство.Имя = &Имя и ДополнительныеСведения.Объект = &объект";
	Запрос.УстановитьПараметр("Имя", "ШтВКоробкеНоменклатура");
	Запрос.УстановитьПараметр("Объект", СтрДок.Номенклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоВЕдинице = 0;
	Если Выборка.Следующий() Тогда
		СтрДокСтруктура.Вставить("ШтукВКоробе", Выборка.Значение);
		КоличествоВЕдинице = Выборка.Значение;
	Иначе
		СтрДокСтруктура.Вставить("ШтукВКоробе", "");
	КонецЕСли;

	Запрос.УстановитьПараметр("Имя", "МассаШтБруттоНоменклатура");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтрДокСтруктура.Вставить("МассаШтБрутто", Выборка.Значение);
	Иначе
		СтрДокСтруктура.Вставить("МассаШтБрутто", 0);
	КонецЕСли;
	Если ТипЗнч(СтрДок.СтавкаНДС) = Тип("СправочникСсылка.СтавкиНДС") Тогда
		СтрДокСтруктура.Вставить("СтавкаНДС", СтрДок.СтавкаНДС.Ставка);
	Иначе		
		Если СтрДок.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
			СтрДокСтруктура.Вставить("СтавкаНДС", "20.00");
		ИначеЕсли СтрДок.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
			СтрДокСтруктура.Вставить("СтавкаНДС", "18.00");
		ИначеЕсли СтрДок.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
			СтрДокСтруктура.Вставить("СтавкаНДС", "10.00");
		ИначеЕсли СтрДок.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
			СтрДокСтруктура.Вставить("СтавкаНДС", "0.00");
		КонецЕСли;
	КонецЕсли;
	Если Объект.ДокументРеализации.ЦенаВключаетНДС Тогда
		СтрДокСтруктура.Вставить("ЦенаСНДС", СтрДок.Цена);
		СтрДокСтруктура.Вставить("ЦенаБезНДС", (СтрДок.СУммаСНДС - СтрДок.СУммаНДС)/СтрДок.КоличествоУпаковок);
	Иначе
		СтрДокСтруктура.Вставить("ЦенаБезНДС", СтрДок.Цена);
		СтрДокСтруктура.Вставить("ЦенаСНДС", (СтрДок.СУммаСНДС)/СтрДок.КоличествоУпаковок);
	КонецЕСли;
	Если Не КоличествоВЕдинице = 0 Тогда
		СтрДокСтруктура.Вставить("КоличествоКоробов", СтрДок.КоличествоУпаковок/КоличествоВЕдинице)
	Иначе
		СтрДокСтруктура.Вставить("КоличествоКоробов", 0)
	КонецЕсли;
	ЕСли СтрДок.Номенклатура.ВесЗнаменатель = 0 Тогда
		СтрДокСтруктура.Вставить("МассаШтНетто", 0);
	Иначе
		СтрДокСтруктура.Вставить("МассаШтНетто", СтрДок.Номенклатура.ВесЧислитель/СтрДок.Номенклатура.ВесЗнаменатель);
	КонецЕСли;
	СтрДокСтруктура.Вставить("ЗаказанноеКоличество", Объект.ДокументРеализации.ЗаказКлиента.Товары[СтрДок.КодСтрокиЗаказа-1].КоличествоУпаковок);	
КонецПроцедуры


&НаКлиенте
Процедура СформироватьФайлВыгрузки(Команда)
	Если ЗначениеЗаполнено(Объект.ФайлВыгрузки) Тогда
		Сообщить("Файл уже сформирован.");	
	Иначе
		путьКФайлам = "";
		ЗаполнитьНастройкиНаСервере(ПутьКФайлам);
		
		ДокРеализация = Новый Структура;
		ПолучитьДанныеРеализации(ДокРеализация);
		
		
		НаимФайла = ПутьКФайлам + "DESADV"+Формат(ТекущаяДата(),"ДФ=ггггММддччммсс")+ДокРеализация.НомерЗаказа + ".xml";
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(НаимФайла);
	
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ЗаписьXML.ЗаписатьНачалоЭлемента("Document-DespatchAdvice");
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdvice-Header");

		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdviceNumber");
		ЗаписьXML.ЗаписатьТекст(ДокРеализация.Номер);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdviceDate");
		ЗаписьXML.ЗаписатьТекст(Формат(ДокРеализация.Дата,"ДФ=гггг-ММ-дд"));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdviceTime");
		ЗаписьXML.ЗаписатьТекст(Формат(ДокРеализация.Дата,"ДФ=ЧЧ:мм"));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("EstimatedDeliveryDate");
		ЗаписьXML.ЗаписатьТекст(Формат(объект.ДатаОтгрузки,"ДФ=гггг-ММ-дд"));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("EstimatedDeliveryTime");
		ЗаписьXML.ЗаписатьТекст(Формат(Объект.ДатаОтгрузки,"ДФ=ЧЧ:мм"));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("BuyerOrderNumber");
		ЗаписьXML.ЗаписатьТекст(ДокРеализация.НомерЗаказа);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("BuyerOrderDate");
		ЗаписьXML.ЗаписатьТекст(Формат(ДокРеализация.ДатаЗаказа,"ДФ=гггг-ММ-дд"));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ContractNumber");
	    ЗаписьXML.ЗаписатьТекст(ДокРеализация.НомерДоговора);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Currency");
		ЗаписьXML.ЗаписатьТекст("RUR");
		ЗаписьXML.ЗаписатьКонецЭлемента();
	
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdvice-Parties");
		ЗаписьXML.ЗаписатьНачалоЭлемента("Buyer");
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ILN");
	    ЗаписьXML.ЗаписатьТекст(ДокРеализация.ILN_Партнер);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Seller");
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ILN");
	    ЗаписьXML.ЗаписатьТекст("4630017469994");
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("CodeByBuyer");
		ЗаписьXML.ЗаписатьТекст("3300000108");
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DeliveryPoint");
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ILN");
	    ЗаписьXML.ЗаписатьТекст(ДокРеализация.ILN_Грузополучатель);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdvice-Consignment");
		Для Каждого Стр Из Объект.Товары Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("Packing-Sequence");	
			СтрДок = Новый Структура;
			ПолучитьСтрокуДокумент(Стр.НомерСтроки, СтрДок);
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageId");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.НомерСтроки,"ЧРД=.; ЧГ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageType");
			ЗаписьXML.ЗаписатьТекст(СтрДок.ТипУпаковки);
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("SerialNumber");
			ЗаписьXML.ЗаписатьТекст(СтрДок.СерийныйНомер);
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageWeight");
			ЗаписьXML.ЗаписатьТекст(формат(СтрДок.ВесУпаковкиНетто,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageGrossWeight");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.ВесУпаковкиБрутто,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageHeight");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.Высота,"ЧРД=.; ЧГ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
        
        	ЗаписьXML.ЗаписатьНачалоЭлемента("PackageLength");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.Длина,"ЧРД=.; ЧГ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
        
            ЗаписьXML.ЗаписатьНачалоЭлемента("PackageWidth");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.Ширина,"ЧРД=.; ЧГ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
        
   			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
		
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdvice-Lines");
		
		Для Каждого Стр Из Объект.Товары Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("Line");
			СтрДок = Новый Структура;
			ПолучитьСтрокуДокументПродукт(Стр.НомерСтроки, СтрДок);
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Line-Item");
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("LineNumber");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.НомерСтроки,"ЧРД=.; ЧГ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("OrderLineNumber");
			ЗаписьXML.ЗаписатьТекст(Строка(Стр.кодСтрокиЗаказа));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("EAN");
			ЗаписьXML.ЗаписатьТекст(СтрДок.ШтрихКод);
			ЗаписьXML.ЗаписатьКонецЭлемента();

   			ЗаписьXML.ЗаписатьНачалоЭлемента("BuyerItemCode");
			ЗаписьXML.ЗаписатьТекст(СтрДок.КодТоварапокупателя);
			ЗаписьXML.ЗаписатьКонецЭлемента();

   			ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchedQuantity");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.КоличествоУпаковок,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

   			ЗаписьXML.ЗаписатьНачалоЭлемента("OrderedQuantity");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.ЗаказанноеКоличество,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchedUnitPacksize");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.ШтукВКоробе,"ЧДЦ=3; ЧРД=.; ЧГ="));   
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("UnitOfMeasure");
			ЗаписьXML.ЗаписатьТекст("PCE");   
			ЗаписьXML.ЗаписатьКонецЭлемента();

   			ЗаписьXML.ЗаписатьНачалоЭлемента("ItemDescription");
			ЗаписьXML.ЗаписатьТекст(Строка(Стр.Номенклатура));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("UnitNetPrice");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.ЦенаБезНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("UnitGrossPrice");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.ЦенаСНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("TaxAmount");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.СуммаНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("NetAmount");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.СуммаСНДС - Стр.СуммаНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

   			ЗаписьXML.ЗаписатьНачалоЭлемента("GrossAmount");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.СуммаСНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

   			ЗаписьXML.ЗаписатьНачалоЭлемента("TaxRate");
			ЗаписьXML.ЗаписатьТекст(Строка(СтрДок.СтавкаНДС)); 
			ЗаписьXML.ЗаписатьКонецЭлемента();

   			ЗаписьXML.ЗаписатьНачалоЭлемента("CountryOfOriginCode");
			ЗаписьXML.ЗаписатьТекст("RU"); 
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("ProductsExpiry");
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("ProductExpiry");

			ЗаписьXML.ЗаписатьНачалоЭлемента("ProductPackageId");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.НомерСтроки,"ЧРД=.; ЧГ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("ProductExpiryDate");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.СрокГодности,"ДФ=гггг-ММ-дд"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("ProductionDate");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.ДатаПроизводства,"ДФ=гггг-ММ-дд"));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("ProductQuantity");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.КоличествоУпаковок,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Line-Parties");
			ЗаписьXML.ЗаписатьНачалоЭлемента("Manufacturer");
			ЗаписьXML.ЗаписатьНачалоЭлемента("Name");
			ЗаписьXML.ЗаписатьТекст("ОАО Собинский хлебокомбинат");
			ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Line-Measurements");

			ЗаписьXML.ЗаписатьНачалоЭлемента("GrossWeight");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.МассаШтБрутто,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("NetVolume");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.МассаШтНетто,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("StorageTemperature");
			ЗаписьXML.ЗаписатьТекст(Стр.ТемпературныйРежим);
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("Package-Reference");
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageId");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.НомерСтроки,"ЧРД=.; ЧГ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Quantity");
			ЗаписьXML.ЗаписатьТекст(Формат(Стр.КоличествоУпаковок,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("NumberOfUnitsInPackage");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.КоличествоКоробов,"ЧДЦ=0"));
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьКонецЭлемента();


			ЗаписьXML.ЗаписатьНачалоЭлемента("Line-Packages");

			ЗаписьXML.ЗаписатьНачалоЭлемента("Package");
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageType");
			ЗаписьXML.ЗаписатьТекст("PF");
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageQuantity");
			ЗаписьXML.ЗаписатьТекст(Формат(СтрДок.КоличествоКоробов,"ЧДЦ=3; ЧРД=.; ЧГ="));
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("PackageUnitOfMeasure");
			ЗаписьXML.ЗаписатьТекст("PA");
			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьКонецЭлемента();

			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
		
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("DespatchAdvice-Summary");

		ИтогСуммаСНДС = Объект.Товары.Итог("СуммаСНДС");
		ИтогКоличество = Объект.Товары.Итог("КоличествоУпаковок");
		ИтогСуммаНДС = Объект.Товары.Итог("СуммаНДС");
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("TotalAmount");
		ЗаписьXML.ЗаписатьТекст(Формат(ИтогСуммаСНДС - ИтогСуммаНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("TotalQuantity");
		ЗаписьXML.ЗаписатьТекст(Формат(ИтогКоличество,"ЧДЦ=2; ЧРД=.; ЧГ="));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("TotalGrossAmount");
		ЗаписьXML.ЗаписатьТекст(Формат(ИтогСуммаСНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("TotalTaxAmount");
		ЗаписьXML.ЗаписатьТекст(Формат(ИтогСуммаНДС,"ЧДЦ=2; ЧРД=.; ЧГ="));
		ЗаписьXML.ЗаписатьКонецЭлемента();

		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
			
		ЗаписьXML.Закрыть();	
		
		Объект.ФайлВыгрузки =НаимФайла;
		
		ЭтотОбъект.Записать();
	КонецЕСли;
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()
	ТаблДокум = Новый  ТабличныйДокумент;
	
    Макет = Документы.Расш1_УведомлениеобОтгрузке.ПолучитьМакет("Макет_ИнформационныйЛист"); 
	Макет.Автомасштаб = Истина;
	
	ТаблДокум.Очистить(); 
		
	Если Объект.Товары.Количество()>=1 Тогда
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Организация =   Объект.ДокументРеализации.Организация;
		Шапка.Параметры.Партнер	 = Объект.ДокументРеализации.Грузополучатель; 
		Шапка.Параметры.Адрес	 = Объект.ДокументРеализации.АдресДоставки; 
		Шапка.Параметры.ДатаНомер	 = "№ " + Строка(Объект.ДокументРеализации.ЗаказКлиента.НомерПоДаннымКлиента) +" от " + Строка(Формат(Объект.ДокументРеализации.ЗаказКлиента.ДатаПоДаннымКлиента, "ДЛФ=Д")) ; 
		Шапка.Параметры.Партнер	 = Объект.ДокументРеализации.Грузополучатель;
		Шапка.Параметры.ДатаРЦ		 = Формат(Объект.ДатаОтгрузки, "ДЛФ=Д");
		ТаблДокум.Вывести(Шапка); 
		Строка = Макет.ПолучитьОбласть("Строка");
		Для Каждого стр из Объект.Товары Цикл
			Строка.Параметры.Номенклатура = стр.Номенклатура;
			Строка.Параметры.Осг = Формат(стр.СрокГодности, "ДЛФ=Д"); 
			Строка.Параметры.КолШтПод = стр.КоличествоУпаковок;
			Попытка
				Если стр.Упаковка <> 0 Тогда
					Строка.Параметры.КолКорПод = Цел(стр.КоличествоУпаковок/стр.Упаковка);
				КонецЕсли;
				
			Исключение 
				    Строка.Параметры.КолКорПод = 0 ;
			КонецПопытки;
			
           	ТаблДокум.Вывести(Строка);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблДокум; 
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
		ПечатнаяФорма = ПечатьНаСервере();
    ПечатнаяФорма.Показать();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЕдиницыИзмерения(Ном,Строка)
Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
			               |ИЗ
			               |	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
			               |ГДЕ
			               |	УпаковкиЕдиницыИзмерения.ПометкаУдаления = &ПометкаУдаления
			               |	И УпаковкиЕдиницыИзмерения.Владелец = &Владелец"; 
			Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
			Запрос.УстановитьПараметр("Владелец",Ном);
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Список = Новый СписокЗначений; 
	Список.Очистить();
	Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));	
	ЭтаФорма.ТекущийЭлемент.ПодчиненныеЭлементы.Уп.СписокВыбора.ЗагрузитьЗначения(Список.ВыгрузитьЗначения());
		
КонецПроцедуры

&НаКлиенте
Процедура ТоварыУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыУпаковкаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыУпНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	//ЗаполнитьЕдиницыИзмерения(Ном,Строка)
КонецПроцедуры





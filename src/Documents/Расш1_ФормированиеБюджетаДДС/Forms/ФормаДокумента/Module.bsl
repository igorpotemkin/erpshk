
&НаСервере
Процедура Команда1НаСервере()
	Объект.СтатьиДвиженияДС.Очистить();
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	СтатьиДвиженияДенежныхСредств.Ссылка КАК СтатьяДДС,
	//			   |    СтатьиДвиженияДенежныхСредств.Ссылка Как Родитель,
	//               |	0 КАК Сумма
	//               |ИЗ
	//               |	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
	//               |ИТОГИ ПО
	//               |	родитель Иерархия";
	Запрос.Текст = 
			"ВЫБРАТЬ
			|    СтатьиДвиженияДенежныхСредств.Ссылка КАК СтатьяДДС,
			|	 0 КАК Сумма,
			|	 СтатьиДвиженияДенежныхСредств.ЭтоГруппа Как ЭтоГруппа
			|ИЗ
			|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
			|ГДЕ
			|    НЕ  СтатьиДвиженияДенежныхСредств.ЭтоГруппа
			|УПОРЯДОЧИТЬ ПО
			|    СтатьиДвиженияДенежныхСредств.ЭтоГруппа,
			|    СтатьяДДС
			|ИТОГИ ПО
			|    СтатьяДДС ТОЛЬКО ИЕРАРХИЯ
			|АВТОУПОРЯДОЧИВАНИЕ";
	ПромДерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(ПромДерево, "ДеревоЗначений");
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	Команда1НаСервере();
КонецПроцедуры

&НаСервере
Функция ТаблицаВДерево(ДокОбъект, НаименованиеТабличнойЧастиДокумента, КлючСвязи = NULL, ЭлементРодитель = NULL) Экспорт	
	//ПОДГОТОВКА КОЛОНОК ДЕРЕВА
	КолонкиТаблицы = ДокОбъект.Метаданные().ТабличныеЧасти[НаименованиеТабличнойЧастиДокумента].Реквизиты;
	ДеревоЗначений2 = Новый ДеревоЗначений;
	Для каждого Кол из КолонкиТаблицы Цикл
		Если Кол.Имя = "НомерСтроки" ИЛИ Кол.Имя = "КлючСвязи" Тогда
			Продолжить;
		Иначе
			ДеревоЗначений2.Колонки.Добавить(Кол.Имя, Новый ОписаниеТипов(Кол.Тип));
		КонецЕсли;
	КонецЦикла;//ДеревоЗначений.Строки.Очистить();
	
	Если КлючСвязи = NULL И ЭлементРодитель = NULL Тогда
		//ПЕРВЫЙ ВЫЗОВ ПРОЦЕДУРЫ (КОРНЕВЫЕ ЭЛЕМЕНТЫ)
		ИсточникВыборки = ДеревоЗначений2.Строки;
		КлючСвязи = 0; // ЭЛЕМЕНТ ВЕРХНЕГО УРОВНЯ ИМЕЕТ НОМЕР СТРОКИ РОДИТЕЛЯ 0 (ОБЯЗАТЕЛЬНЫЙ РЕКВИЗИТ)
	Иначе
		//ВНУТРЕННИЙ ВЫЗОВ ПРОЦЕДУРЫ (ПОДЧИНЕННЫЕ ЭЛЕМЕНТЫ)
		ИсточникВыборки = ЭлементРодитель.Строки;
	КонецЕсли;
	Фильтр = Новый Структура("КлючСвязи", КлючСвязи);
	М = ДокОбъект[НаименованиеТабличнойЧастиДокумента].НайтиСтроки(Фильтр);
	Если М.Количество() = 0 Тогда
		Возврат ДеревоЗначений2;
	КонецЕсли;
	Для каждого Стр из М Цикл
		Элемент = ИсточникВыборки.Добавить();
		Для каждого Кол из КолонкиТаблицы Цикл
			Если Кол.Имя = "НомерСтроки" ИЛИ Кол.Имя = "КлючСвязи" Тогда
				Продолжить;
			Иначе
				Элемент[Кол.Имя] = Стр[Кол.Имя];
			КонецЕсли;
		КонецЦикла;
		ТаблицаВДерево(ДокОбъект, НаименованиеТабличнойЧастиДокумента, Стр.НомерСтроки, Элемент); //ДОБАВЛЕНИЕ ПОДЧИНЁННЫХ ЭЛЕМЕНТОВ В ДЕРЕВО
	КонецЦикла;
	ПересчитатьВсеДерево(ДеревоЗначений2);
	Возврат ДеревоЗначений2;
КонецФункции

&НаСервере
 Процедура ПересчитатьВсеДерево(дз_стр)
      

    	для каждого стр из дз_стр.Строки Цикл
      

    		Если стр.строки.количество()>0 тогда
      

    			ПересчитатьВсеДерево(стр);
      

    		Иначе
      

    			ПересчетСуммДерева(стр);
      

    			прервать;
      

    		КонецЕсли;
      

    	КонецЦикла;
      

    Конецпроцедуры

&НаСервере
Процедура ПересчетСуммДерева(ТекСтрока)
      

    	Родитель=ТекСтрока.Родитель;
      

    	Если Родитель=Неопределено Тогда
      

    		Возврат;
      

    	КонецЕсли;
      

    	родитель.Сумма=родитель.Строки.Итог("Сумма");
      

    	
      

    	ПересчетСуммДерева(Родитель);
      

    КонецПроцедуры

&НаСервере
Процедура ДеревоВТаблицу(ДокОбъект, ДеревоЗначений, НаименованиеТабличнойЧастиДокумента, СтрокаДерева = NULL, КлючСвязи = NULL) Экспорт
	Если СтрокаДерева = NULL И КлючСвязи = NULL Тогда
		//ПЕРВЫЙ ВЫЗОВ ПРОЦЕДУРЫ (КОРНЕВЫЕ ЭЛЕМЕНТЫ)
		ПервыйВызов = Истина;
		ДокОбъект[НаименованиеТабличнойЧастиДокумента].Очистить();
		ИсточникВыборки = ДеревоЗначений.Строки;
		КлючСвязи = 0; // ЭЛЕМЕНТ ВЕРХНЕГО УРОВНЯ ИМЕЕТ НОМЕР СТРОКИ РОДИТЕЛЯ 0 (ОБЯЗАТЕЛЬНЫЙ РЕКВИЗИТ)
	Иначе
		//ВНУТРЕННИЙ ВЫЗОВ ПРОЦЕДУРЫ (ПОДЧИНЕННЫЕ ЭЛЕМЕНТЫ)
		ПервыйВызов = Ложь;
		ИсточникВыборки = СтрокаДерева.Строки;
	КонецЕсли;
	Для каждого Стр из ИсточникВыборки Цикл
		НС = ДокОбъект[НаименованиеТабличнойЧастиДокумента].Добавить();
		Для каждого Кол из ДокОбъект.Метаданные().ТабличныеЧасти[НаименованиеТабличнойЧастиДокумента].Реквизиты Цикл
			Если Кол.Имя = "КлючСвязи" Тогда
				НС.КлючСвязи = КлючСвязи
			ИначеЕсли Кол.Имя = "НомерСтроки" Тогда
				Продолжить;
			Иначе 
				НС[Кол.Имя] = Стр[Кол.Имя];
			КонецЕсли;
		КонецЦикла;
		Если НЕ Стр.Строки.Количество() = 0 Тогда
			ДеревоВТаблицу(ДокОбъект,,НаименованиеТабличнойЧастиДокумента, Стр, НС.НомерСтроки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура КомандаТаблицуВДеревоНаСервере()
	Дерево = ТаблицаВДерево(РеквизитФормыВЗначение("Объект"), "СтатьиДвиженияДС");//Товары - имя табличной части
	ЗначениеВРеквизитФормы(Дерево, "ДеревоЗначений");//ДеревоЗначений - реквизит формы с типом дерево значений
	Элементы.ДеревоЗначений.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КомандаТаблицуВДеревоНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаДеревоВТаблицуНаСервере()
	Объект.СтатьиДвиженияДС.Очистить();
	ДОбъект = РеквизитФормыВЗначение("Объект");
	ДеревоВТаблицу(ДОбъект, РеквизитФормыВЗначение("ДеревоЗначений"), "СтатьиДвиженияДС");
	ЗначениеВРеквизитФормы(ДОбъект, "Объект");
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	КомандаДеревоВТаблицуНаСервере()
КонецПроцедуры

&НаСервере
Функция ОтказатьРедактировать(Статья)
	Возврат Статья.ЭтоГруппа;	
КонецФункции

&НаКлиенте
Процедура ДеревоЗначенийПередНачаломИзменения(Элемент, Отказ)
	Отказ = ОтказатьРедактировать(Элемент.ТекущиеДанные.СтатьяДДС)
КонецПроцедуры

&НаСервере
Процедура ДеревоЗначенийСумма(СтрокаДереваЗначений)
		Если СтрокаДереваЗначений.Уровень() = 0 Тогда
			СтрокаРодитель = СтрокаДереваЗначений;
		Иначе
			СтрокаРодитель = СтрокаДереваЗначений.Родитель;
		КонецЕсли;
		СуммаВсего = 0;
		Для Каждого Строка Из СтрокаРодитель.Строки Цикл
			СуммаВсего = СуммаВсего + Строка.Сумма;
		КонецЦикла;
		СтрокаРодитель.Сумма = СуммаВсего;
		Если СтрокаРодитель.Сумма <> 0 и СтрокаРодитель.Уровень() <> 0 Тогда
			ДеревоЗначенийСумма(СтрокаРодитель);
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция РассчитатьРодителя(Родитель)
    Строки = Родитель.ПолучитьЭлементы();
    Сумма = 0;
    Для каждого Стр из Строки Цикл 
        Сумма = Сумма + стр.Сумма;
    КонецЦикла;
    Возврат Сумма;
КонецФункции

&НаСервере
Процедура ДеревоЗначенийСуммаПриИзмененииНаСервере()
		тДерево = РеквизитФормыВЗначение("ДеревоЗначений");
		Для Каждого СтрокаДереваЗначений из тДерево.Строки Цикл
			ДеревоЗначенийСумма(СтрокаДереваЗначений)
		КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗначенийСуммаПриИзменении(Элемент)
	//ДеревоЗначенийСуммаПриИзмененииНаСервере();
	СтрокаТабличнойЧасти = Элементы.ДеревоЗначений.ТекущиеДанные;
	Родитель = СтрокаТабличнойЧасти.ПолучитьРодителя();
	Пока Родитель <> Неопределено Цикл
    	Если Родитель <> Неопределено Тогда
        	КоличествоРодителя = РассчитатьРодителя(Родитель);
        	Родитель.Сумма = КоличествоРодителя;
			Родитель = Родитель.ПолучитьРодителя();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



&НаСервере
Процедура Расш1_СформироватьУведомлениеПослеНаСервере(ДанныеФормы)
	Док = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.Расш1_УведомлениеобОтгрузке")); 

	Док = Документы.Расш1_УведомлениеобОтгрузке.СоздатьДокумент();
	Док.ДокументРеализации  = Объект.Ссылка;
	Док.Товары.Загрузить(Объект.Товары.Выгрузить());     
	Док.дата = ТекущаяДата();
	Для Каждого Стр Из Док.Товары Цикл
		СтрНайд = Объект.ЗаказКлиента.Товары.Найти(Стр.КодСтроки, "КодСтроки");
		Если СтрНайд <> Неопределено Тогда
			Стр.КодСтрокиЗаказа = СтрНайд.НомерСтроки;
		КонецЕсли;
		Стр.СрокГодности = Стр.Серия.ГоденДо;
		Стр.ТемпературныйРежим = "25";
		Если ЗначениеЗаполнено(Стр.Серия.ДатаПроизводства) Тогда
			Стр.ДатаПроизводства = Стр.Серия.ДатаПроизводства;
		Иначе
			Если Стр.Номенклатура.ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.Месяц Тогда
				Стр.ДатаПроизводства = ДобавитьМесяц(Стр.Серия.ГоденДо, -Стр.Номенклатура.СрокГодности);
			ИначеЕсли Стр.Номенклатура.ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.Год Тогда
				Стр.ДатаПроизводства = ДобавитьМесяц(Стр.Серия.ГоденДо, -Стр.Номенклатура.СрокГодности * 12);
			ИначеЕсли Стр.Номенклатура.ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.Сутки Тогда
				Стр.ДатаПроизводства = Стр.Серия.ГоденДо - Стр.Номенклатура.СрокГодности*24*60*60;
			КонецЕсли;
		КонецЕсли;
				
		
	КонецЦикла;
    ЗначениеВДанныеФормы(Док,ДанныеФормы);
КонецПроцедуры

&НаСервере	
Функция ПолучитьСсылку()
	Запрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	Расш1_УведомлениеобОтгрузке.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Расш1_УведомлениеобОтгрузке КАК Расш1_УведомлениеобОтгрузке
	|ГДЕ
	|	Расш1_УведомлениеобОтгрузке.ДокументРеализации = &ДокументРеализации";
	Запрос.УстановитьПараметр("ДокументРеализации", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Документы.Расш1_УведомлениеобОтгрузке.ПустаяСсылка();	
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Расш1_СформироватьУведомлениеПосле(Команда)
	ЕСли Объект.Ссылка.Пустая() Тогда
		Сообщить("Необходимо сначала записать документ реализации.");	
	Иначе	
		СсылкаНаОбъект = ПолучитьСсылку();
		Если СсылкаНаОбъект.Пустая() Тогда
	    	Форма = ПолучитьФорму("Документ.Расш1_УведомлениеобОтгрузке.ФормаОбъекта");
			ДанныеФормы = Форма.Объект; 
			Расш1_СформироватьУведомлениеПослеНаСервере(ДанныеФормы); // Заполняем документ на сервере
			КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
			Форма.Открыть();
		Иначе
			ПоказатьЗначение(,СсылкаНаОбъект);
		КонецЕСли;
	КонецЕсли;
	
КонецПроцедуры

&наСервере
Функция ЕстьОригиналДокумента()
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыДокументов.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
	|ГДЕ
	|	СтатусыДокументов.Организация = &Организация
	|	И СтатусыДокументов.Документ = &Документ";
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Документ", объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.Статус = Перечисления.СтатусыДокументовПоступления.ОригиналПолучен Тогда
			Возврат истина;
		Иначе Возврат ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции

&НаКлиенте
Процедура Расш1_ПриОткрытииПосле(Отказ)
	ПолученОригинал = ЕстьОригиналДокумента();
	Элементы.ПолученОригинал.Видимость = Истина;
   Расш1_СХК_ТКПриИзмененииПослеНаСервере();
   Расш1_СХК_СдизПриИзмененииПослеНаСервере()
КонецПроцедуры

&НаСервере
Процедура Расш1_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	Запись = РегистрыСведений.СтатусыДокументов.СоздатьМенеджерЗаписи();//.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Документ.Установить(ТекущийОбъект.Ссылка);
	//НаборЗаписей.Прочитать();
	//НаборЗаписей.Очистить();
	
	
	Запись.Организация = ТекущийОбъект.Организация;
	Запись.Документ = ТекущийОбъект.Ссылка;
	Если ПолученОригинал Тогда
		Запись.Статус = Перечисления.СтатусыДокументовПоступления.ОригиналПолучен;
	Иначе
		Запись.Статус = Перечисления.СтатусыДокументовПоступления.ОригиналНеПолучен;
	КонецЕсли;
	Запись.Записать(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Расш1_СХК_ТКПриИзмененииПосле(Элемент)
	Расш1_СХК_ТКПриИзмененииПослеНаСервере();
КонецПроцедуры

&НаСервере
Процедура Расш1_СХК_ТКПриИзмененииПослеНаСервере()
	Если Объект.СХК_ТК = Истина Тогда
		ЭтаФорма.Элементы.ГруппаТК.Видимость = Истина;
	Иначе
		ЭтаФорма.Элементы.ГруппаТК.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Расш1_СХК_СдизПриИзмененииПосле(Элемент)
	Расш1_СХК_СдизПриИзмененииПослеНаСервере();
КонецПроцедуры 

&НаСервере 
Процедура Расш1_СХК_СдизПриИзмененииПослеНаСервере()
	Если Объект.СХК_Сдиз = Истина Тогда
		ЭтаФорма.Элементы.ГруппаДатаНомерСДИЗ.Видимость = Истина;
	Иначе
		ЭтаФорма.Элементы.ГруппаДатаНомерСДИЗ.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура Расш1_СХК_ДопТоварКоличествоПриИзмененииПосле(Элемент)
	ПересчитатьСтроку(ЭтаФорма.Элементы.СХК_ДопТовар.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Расш1_СХК_ДопТоварЦенаПриИзмененииПосле(Элемент)
	ПересчитатьСтроку(ЭтаФорма.Элементы.СХК_ДопТовар.ТекущаяСтрока);
КонецПроцедуры  

&НаСервере 
Процедура ПересчитатьСтроку(Т)
	Объект.СХК_ДопТовар[Т].Сумма = Объект.СХК_ДопТовар[Т].Количество * Объект.СХК_ДопТовар[Т].Цена;				
КонецПроцедуры

&НаСервере
Функция ПолучитьСчет(Контрагент)
	//++ plotnikov@syspod.ru #84483
	Возврат __СпОбщийМодуль.ЗаполнитьБанковскийСчет(Контрагент);
	//-- plotnikov@syspod.ru #84483
КонецФункции

&НаКлиенте
Процедура Расш1_ПартнерПриИзмененииПосле(Элемент)
	//++ plotnikov@syspod.ru #84483
	Объект.БанковскийСчетОрганизации = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #84483
КонецПроцедуры

&НаКлиенте
Процедура Расш1_КонтрагентПриИзмененииПосле(Элемент)
	//++ plotnikov@syspod.ru #84483
	Объект.БанковскийСчетОрганизации = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #84483
КонецПроцедуры

&НаСервере
Функция Расш1_ТоварыНоменклатураПриИзмененииПослеСервер(СтруктураДанных)
	//++ plotnikov@syspod.ru #84866
	Возврат __СпОбщийМодуль.ПодтянутьШтрихкод(СтруктураДанных);	
	//-- plotnikov@syspod.ru #84866
КонецФункции

&НаКлиенте
Функция ПолучитьСтурктуруИзменения(ТекущиеДанные)
	//++ plotnikov@syspod.ru #84866
	СтруктураДанных = Новый Структура();
	СтруктураДанных.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
	СтруктураДанных.Вставить("Упаковка", ТекущиеДанные.Упаковка);
	
	Возврат СтруктураДанных;
	//-- plotnikov@syspod.ru #84866
КонецФункции

 &НаСервере
 Функция ПолучитьПроверкуКлиента(док)
 	Проверка = __СпОбщийМодуль.ПолучитьПроверкуКлиента(док);
	Возврат Проверка;
 КонецФункции

&НаКлиенте
 Процедура Расш1_СоглашениеПриИзмененииПосле(Элемент)
	 //++ plotnikov@syspod.ru #84483
	Объект.БанковскийСчетОрганизации = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #84483
 КонецПроцедуры

&НаКлиенте
 Процедура Расш1_ДоговорПриИзмененииПосле(Элемент)
	 //++ plotnikov@syspod.ru #84483
	Объект.БанковскийСчетОрганизации = ПолучитьСчет(Объект.Контрагент);
	//-- plotnikov@syspod.ru #84483
 КонецПроцедуры









&НаСервере
Процедура Тест()
	Просмотр = "P:\_up\promo\000000001\файл1.txt";
	
КонецПроцедуры


&НаКлиенте
Процедура СоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыВыбораСоглашения = ПродажиКлиент.ПараметрыНачалаВыбораСоглашенияСКлиентом();
	
	ПараметрыВыбораСоглашения.Элемент                     = Элемент;
	ПараметрыВыбораСоглашения.Партнер                     = Объект.Партнер;
	ПараметрыВыбораСоглашения.Документ                    = Объект.Соглашение;
	ПараметрыВыбораСоглашения.ДатаДокумента               = Объект.Дата;
	ПараметрыВыбораСоглашения.ДанныеФормыСтруктура        = Объект;
	
	// ЭлектронноеВзаимодействие.СервисEDI	
	Если Не РедактированиеРеквизитовEDIКлиентСервер.РеквизитДоступенДляРедактирования(ЭтотОбъект, "Поставщик") Тогда
		ПараметрыВыбораСоглашения.Организация = Объект.Организация;
	КонецЕсли;
	
	Если Не РедактированиеРеквизитовEDIКлиентСервер.РеквизитДоступенДляРедактирования(ЭтотОбъект, "Покупатель") Тогда
		ПараметрыВыбораСоглашения.Контрагент = Объект.Контрагент;
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.СервисEDI
	
	ПродажиКлиент.НачалоВыбораСоглашенияСКлиентом(ПараметрыВыбораСоглашения, СтандартнаяОбработка);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор = Пользователи.ТекущийПользователь(); 
		Объект.Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН","3309000717"); 
		Объект.Статус = "Создан";
		
		Если Объект.ТипПромо = "" Тогда
			Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое;
			ЗаполнитьФактПромо();
			ЗаполнитьПоказателиНеЦен();
		КонецЕсли;
        ЗаполнитьСогласоватьПриСоздании();

		ИзменитьДоступностьДат();
			
	КонецЕсли;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ПроверитьДоступность();
	КонецЕсли;
	
	ЗаполнитьСписокНП(Справочники.Партнеры.ПустаяСсылка()); 
	
		
КонецПроцедуры  

 &НаСервере
 Процедура ЗаполнитьСогласоватьПриСоздании() 
	 Объект.Согласовать.Очистить();
		П5 = "";   
	
	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое Тогда
		П1 = Справочники.Пользователи.НайтиПоНаименованию("Борунов Даниил Леонидович");
	ИначеЕсли Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое Тогда
		П1 = Справочники.Пользователи.НайтиПоНаименованию("Кулакова Яна");
	Иначе
		П1 = Справочники.Пользователи.НайтиПоНаименованию("Борунов Даниил Леонидович");
		П5 = Справочники.Пользователи.НайтиПоНаименованию("Кулакова Яна");
	КонецЕсли  ;
	
	
	П2 = Справочники.Пользователи.НайтиПоНаименованию("Пьянов Руслан Михайлович");
	П3 = Справочники.Пользователи.НайтиПоНаименованию("Подчиненова Нелли Александровна");
	П4 = Справочники.Пользователи.НайтиПоНаименованию("Буланова Юлия Евгеньевна");
	
	Попытка
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = П1  ;
		Т.ЭлПочта = П1.КонтактнаяИнформация[0].АдресЭП;
	Исключение 
		
	КонецПопытки;
	
	Попытка
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = П2  ;
		Т.ЭлПочта = П2.КонтактнаяИнформация[0].АдресЭП;
	Исключение 
		
	КонецПопытки;
	
	Попытка
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = П3  ;
		Т.ЭлПочта = П3.КонтактнаяИнформация[0].АдресЭП;
	Исключение  
		
	КонецПопытки;
	
	Попытка
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = П4  ;
		Т.ЭлПочта = П4.КонтактнаяИнформация[0].АдресЭП;
	Исключение  
		
	КонецПопытки;
	
	Если П5 <> "" Тогда
		Попытка
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = П5  ;
		Т.ЭлПочта = П5.КонтактнаяИнформация[0].АдресЭП;
		Исключение  
			
		КонецПопытки; 
	КонецЕсли; 
 		 
 КонецПроцедуры
 
&НаСервере
Процедура ПроверитьДоступность()
	ТекПользователь = Пользователи.ТекущийПользователь();
	//проверяем статус документа  СтатусПромоДокумента
	Если Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован ИЛИ 
		Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование ИЛИ
		Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НеСогласован Тогда//ИЛИ  
		
		ЭтаФорма.Элементы.Статус.Доступность = Ложь; 
		ЭтаФорма.Элементы.Старт.Доступность = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль1.ТолькоПросмотр = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль3.Доступность = Ложь;
		ЭтаФорма.Элементы.Файлы1.ИзменятьСоставСтрок = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль5.Доступность = Ложь;
		
		
	КонецЕсли;
	
	
	Если Объект.Автор <> ТекПользователь Тогда 
						ЭтаФорма.Элементы.Согласовать.Доступность = Ложь;
			ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;

		Для Каждого стр из Объект.Согласовать Цикл
			Если стр.Пользователь = ТекПользователь Тогда
			ЭтаФорма.Элементы.Согласовать.Доступность = Истина;
			ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Истина;
			ЭтаФорма.Элементы.Записать.Доступность = Ложь;
			ЭтаФорма.Элементы.Провести.Доступность = Ложь;
			ЭтаФорма.Элементы.Закрыть.Видимость = Истина; 
			Прервать;
		КонецЕсли; 
		КонецЦикла;
	КонецЕсли;

	Если Объект.Автор = ТекПользователь Тогда
  		ЭтаФорма.Элементы.Согласовать.Доступность = Истина ;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;  
		Если Объект.НоменклатураПромо.Количество()>=1 Тогда
			ЭтаФорма.Элементы.ОчиститьПодбор.Доступность = Истина;	
		КонецЕсли;
		
	КонецЕсли;

	Если Объект.Автор = ТекПользователь И (Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Создан ИЛИ Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.План) Тогда
		
		ЭтаФорма.Элементы.ГруппаКонтроль1.ТолькоПросмотр = Ложь;

		ЭтаФорма.Элементы.Согласовать.Доступность = Истина ;
		ЭтаФорма.Элементы.Согласовать.ТолькоПросмотр = Ложь ;
		
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.ТолькоПросмотр = Ложь;
		
		Если Объект.НоменклатураПромо.Количество()>=1 Тогда
			ЭтаФорма.Элементы.ОчиститьПодбор.Доступность = Истина;	
		КонецЕсли;
		
	КонецЕсли;
	
	
	
	Если Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован ИЛИ 
		
		Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НеСогласован Тогда//ИЛИ  
		
		ЭтаФорма.Элементы.Статус.Доступность = Ложь; 
		ЭтаФорма.Элементы.Старт.Доступность = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль1.ТолькоПросмотр = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль3.Доступность = Ложь;
		ЭтаФорма.Элементы.Файлы1.ИзменятьСоставСтрок = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль5.Доступность = Ложь;
	КонецЕсли;

	Если ТекПользователь.Наименование = "smartbar" ИЛИ ТекПользователь.Наименование = "Пьянов Руслан Михайлович" Тогда
		ЭтаФорма.Элементы.Пересчитать.Видимость = Истина; 
		ЭтаФорма.Элементы.Согласовать.Доступность = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Истина;
		ЭтаФорма.Элементы.ГруппаАдмин.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказателиНеЦен()
	Т = Объект.Показатели.Добавить();
	Т.Показатель = "CPC (цена контакта)";
	Т.Значение = ""; 
	Т = Объект.Показатели.Добавить();
	Т.Показатель = "CTR (процент соотношения числа кликов к числу показов)";
	Т.Значение = "";               
	Т = Объект.Показатели.Добавить();
	Т.Показатель = "OTS (охват аудитории)";
	Т.Значение = "";                  
	Т = Объект.Показатели.Добавить();
	Т.Показатель = "Цель промо (пишем вручную в окошке для заполнения)";
	Т.Значение = "";                  
	Т = Объект.Показатели.Добавить();
	Т.Показатель = "Плановый срок окупаемости промо (данные по итогам расчета трейд-маркетолога)";
	Т.Значение = "";                  
	Т = Объект.Показатели.Добавить();
	Т.Показатель = "Стадия ЖЦТ (стадия жизненного цикла каждого товара - вывод на рынок, рост, зрелость, упадок)";
	Т.Значение = ""; 
	//Т = Объект.Показатели.Добавить();
	//Т.Показатель = "Поле комментария для дополнительной информации (здесь описываем особенности которые входят в промо, например, таргет входит или же есть другие дополнительные опции входящие в промо)";
	//Т.Значение = "";
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьФактПромо()
	Т = Объект.ТЧФактПромо.Добавить();
	Т.Значение = "Фактический прирост товарооборота";
	Т.Показатель = 0; 
	Т = Объект.ТЧФактПромо.Добавить();
	Т.Значение = "Доля затрат в дополнительном товарообороте";
	Т.Показатель = 0;                 
	Т = Объект.ТЧФактПромо.Добавить();
	Т.Значение = "Отклонение от нормы";
	Т.Показатель = 0;                  
	Т = Объект.ТЧФактПромо.Добавить();
	Т.Значение = "Кол-во продукции, отгруженное во время акции";
	Т.Показатель = 0;                  
	Т = Объект.ТЧФактПромо.Добавить();
	Т.Значение = "Вложения в акцию";
	Т.Показатель = 0;                  
	Т = Объект.ТЧФактПромо.Добавить();
	Т.Значение = "Возврат на инвестиции";
	Т.Показатель = 0;
КонецПроцедуры


&НаСервере
Функция ПроверкаПриЗаписи() 
	
	Возврат Истина;	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ПроверкаПриЗаписи() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура Добавить(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		Предупреждение("Документ должен быть записан!");
	Иначе
		ПроверитьСоздатьКаталогЗагрузкаФайлов(Объект.Номер);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура  ПроверитьСоздатьКаталогЗагрузкаФайлов(Номер)
	КаталогНаДиске = Новый Файл("S:\PROMO\"+Номер);
	Если НЕ КаталогНаДиске.Существует() Тогда
		СоздатьКаталог(Строка(КаталогНаДиске.ПолноеИмя));
	КонецЕсли;  
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытия.ПолноеИмяФайла = "";
	//Фильтр = "Текст, *.txt|*.txt";
	//ДиалогОткрытия.Фильтр = Фильтр;
	ДиалогОткрытия.МножественныйВыбор = Истина;
	ДиалогОткрытия.Заголовок = "Выберите файлы"; 

	Если ДиалогОткрытия.Выбрать() Тогда
		МассивВыбранныхФайлов = ДиалогОткрытия.ВыбранныеФайлы;
		Для Каждого ИмяВыбранногоФайла Из МассивВыбранныхФайлов Цикл
			ВыбранныйФайл = Новый Файл(ИмяВыбранногоФайла);
			ПутьКФайлуПриемнику = Строка(КаталогНаДиске.ПолноеИмя) + "\"+ВыбранныйФайл.Имя;
			Попытка
				УдалитьФайлы(Строка(ПутьКФайлуПриемнику));
			Исключение

			КонецПопытки;
			КопироватьФайл(ИмяВыбранногоФайла, ПутьКФайлуПриемнику); 
		КонецЦикла; 
		ЗаполнитьФайлы(Строка(КаталогНаДиске.ПолноеИмя));
	Иначе
		Предупреждение("Нет выбранных файлов!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФайлы(ПутьККаталогу)
	Мас = Новый Массив;
	ФайлыПромо = Новый Массив;
    ФайлыПромо = НайтиФайлы(ПутьККаталогу+"\","*");
	Для Каждого ФайлXLS Из ФайлыПромо Цикл  
		Мас.Добавить(ФайлXLS.Имя);
	КонецЦикла;
	ЗаполнитьСписокФайлов(ПутьККаталогу,Мас);
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСписокФайлов(Путь,Мас)
	Объект.Файлы.Очистить();
	Для сч = 0 по Мас.Количество()-1 Цикл
		Т = Объект.Файлы.Добавить();
		Т.Файл = Мас[сч];
		Т.Путь = Путь+"\"+Мас[сч];
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура Файлы1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ЗапуститьПриложение(Элемент.ТекущиеДанные.Путь);
КонецПроцедуры

&НаКлиенте
Процедура Файлы1ПередУдалением(Элемент, Отказ)
	
	Попытка
		УдалитьФайлы(Элемент.ТекущиеДанные.Путь); 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;  
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНастройки(Команда)
	Отбор = Новый Структура("Автор",  Объект.Автор );
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	//ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНоменклатураПартнера", ЭтотОбъект);
	
	//ОткрытьФорму("Справочник.НоменклатураКонтрагентов.ФормаВыбора", ПараметрыФормы, ОписаниеОповещения );
ОткрытьФорму("Справочник.СХК_НастройкаПромо.ФормаВыбора", ПараметрыФормы, ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНастройкиПромо", ЭтотОбъект));

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыНастройкиПромо(Значение, ДопПараметры) Экспорт
	ЗаполнитьСогласовать(Значение);		
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСогласовать(Сп)
	Объект.Согласовать.Очистить(); 
	Попытка
	Для Каждого стр из Сп.СписокПользователей Цикл
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = стр.СогласующееЛицо;
		Т.ЭлПочта = стр.АдресЭл;
	КонецЦикла;
Исключение
КонецПопытки;

	
КонецПроцедуры

//&НаКлиенте
//Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт

//   //Дополнительные условия если необходимо
//   //Если ДопПараметры = "ПодборРеализации" тогда

//    Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
//        Возврат;
//    КонецЕсли;
//     
//    МассивДокументов = Значение ///Если Множественный Выбор - то вернется массив 
//    

//    //КонецЕсли;
//КонецПроцедуры

&НаСервере
Процедура ПартнерПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.ПометкаУдаления = &ПометкаУдаления
	               |	И Контрагенты.Партнер = &Партнер"; 
	
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер); 
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);
	//Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()>=1 Тогда
		Объект.ТЧКонтрагенты.Очистить();
		Пока Рез.Следующий() Цикл
			Т = Объект.ТЧКонтрагенты.Добавить();
			Т.Контрагенты = Рез.Ссылка;
			
		КонецЦикла;
	Иначе
		Сообщить("Контрагент не определен, необходимо указать в ручную");
	КонецЕсли;
	Объект.Соглашение = Справочники.СоглашенияСКлиентами.ПустаяСсылка(); 
	Объект.НоменклатураПромо.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	ПартнерПриИзмененииНаСервере(); 
	ЗакрытьПодборНоменклатурыНаСервере();
КонецПроцедуры



&НаСервере
Функция Партнер()
	Возврат Объект.Партнер.Ссылка;	
КонецФункции

&НаСервере
Функция ТекЦенаНоменклатуры(Ном,Согл) 
	
	ТекущаяЦена = 0; 
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ном);
	НайденноеЗначение = Согл.Товары.НайтиСтроки(Отбор);
	
	Если НайденноеЗначение.Количество() >=1 Тогда  
		ТекущаяЦена = НайденноеЗначение[0].Цена;
	Иначе

		Запрос = Новый Запрос; 
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
		|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены";  
		
		Запрос.УстановитьПараметр("ВидЦены",Согл.ВидЦен);
		Запрос.УстановитьПараметр("Номенклатура",Ном); 
		
		Рез = Запрос.Выполнить().Выбрать();  
		
		Если Рез.Количество()>=1 Тогда
			Пока Рез.Следующий() Цикл
				ТекущаяЦена = Рез.Цена;	
			КонецЦикла;
		КонецЕсли;
	КонецЕсли; 
	
	Возврат ТекущаяЦена;
	
КонецФункции

&НаКлиенте
Процедура СоглашениеПриИзменении(Элемент)
	СоглашениеПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	ИзменитьДоступностьДат() ;
КонецПроцедуры

&НаСервере
Процедура ИзменитьДоступностьДат()
	Если Объект.Статус = "Создан" Тогда
		ЭтаФорма.Элементы.ГруппаФактАкции.ТолькоПросмотр = Ложь;
		ЭтаФорма.Элементы.ГруппаПланАкции.ТолькоПросмотр = Истина;
	ИначеЕсли Объект.Статус = "План" Тогда
		ЭтаФорма.Элементы.ГруппаФактАкции.ТолькоПросмотр = Истина;
		ЭтаФорма.Элементы.ГруппаПланАкции.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	ВидимостьПромо();
	ВидимостьМетоды();
		
КонецПроцедуры

&НаСервере
Процедура ВидимостьМетоды()
	//Если Объект.МетодыПромо.Количество()>=1 Тогда
	//	ЭтаФорма.Элементы.ПерезаполнитьМетодПромо.Доступность = Ложь;
	//Иначе
	//	ЭтаФорма.Элементы.ПерезаполнитьМетодПромо.Доступность = Истина;
	//КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТипПромоПриИзменении(Элемент)
	ВидимостьПромо(); 
	ОчиститьПодборНаСервере(); 
	ЗаполнитьСогласоватьПриСоздании();
КонецПроцедуры

 


&НаСервере
Процедура СписокНКВыборНаСервере(НоменклатураПартнера)
	
	Отбор = Новый Структура;
	Отбор.Вставить("НоменклатураПартнера", НоменклатураПартнера);
	НайденноеЗначение = Объект["НоменклатураПромо"].НайтиСтроки(Отбор);
	
	Если НайденноеЗначение.Количество() = 0 Тогда 
		Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое ИЛИ 
			Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое Тогда
			ТН = Объект.НоменклатураПромо.Добавить();
			ТН.НоменклатураПартнера = НоменклатураПартнера;
			ТН.Бренд = НоменклатураПартнера.Номенклатура.Марка ;
			ТН.Номенклатура = НоменклатураПартнера.Номенклатура;
			ТН.ТекущаяЦена = ТекЦенаНоменклатуры(НоменклатураПартнера.Номенклатура,Объект.Соглашение); 
			КолТТ = 0;
			Если НоменклатураПартнера.СХК_Представленность.Количество() >=1 Тогда
				//Объект.СХК_География.Очистить();
				Для Каждого стр из НоменклатураПартнера.СХК_Представленность Цикл
					Т = Объект.СХК_География.Добавить();
					Т.Направление = стр.Направление;
					Т.Область = стр.Область;
					Т.Город = стр.Город;
					Т.КолТТ = стр.КолТТ;
					Т.ТипТТ = стр.ТипТТ;
					КолТТ = КолТТ + стр.КолТТ;
				КонецЦикла;
			КонецЕсли;
			
			ТН.КолТТ = КолТТ;
			Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое Тогда 
				ТН.СебестоимостьОПР = ПолучитьОПР(НоменклатураПартнера.Номенклатура); 
				ТН.ПолнаяСС = ПолучитьПолнаяСС(НоменклатураПартнера.Номенклатура);
				ТН.СрокРеализацииПромо = Объект.СрокРПоставки;
				
			КонецЕсли;
		ИначеЕсли Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom ТОгда
			ТН = Объект.РасчетЕком.Добавить();
			ТН.НоменклатураПартнера = НоменклатураПартнера;
			ТН.Бренд = НоменклатураПартнера.Номенклатура.Марка ;
			ТН.Номенклатура = НоменклатураПартнера.Номенклатура;
			ТН.ТекущаяЦена = ТекЦенаНоменклатуры(НоменклатураПартнера.Номенклатура,Объект.Соглашение); 
		КонецЕсли;
		
		
	КонецЕсли;
	
КонецПроцедуры


//&НаСервере
//Процедура ЗаполнитьМетодыПромо()  
//	
//	Объект.МетодыПромо.Очистить();
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	СХК_МетодыПромо.Наименование КАК Наименование,
//	               |	СХК_МетодыПромо.Ссылка КАК Ссылка
//	               |ИЗ
//	               |	Справочник.СХК_МетодыПромо КАК СХК_МетодыПромо
//	               |ГДЕ
//	               |	СХК_МетодыПромо.ТипПромо = &ТипПромо
//	               |	И СХК_МетодыПромо.ПометкаУдаления = &ПометкаУдаления";
//	Запрос.УстановитьПараметр("ТипПромо",Объект.ТипПромо); 
//	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
//	Рез = Запрос.Выполнить().Выбрать(); 
//	Если Рез.Количество()>=1 Тогда
//		Пока Рез.Следующий() Цикл
//			Т = Объект.МетодыПромо.Добавить();
//			Т.НаименованиеМетода = Рез.Ссылка;
//			
//		КонецЦикла;
//	КонецЕсли;
//	
//КонецПроцедуры 	

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		Если Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован Тогда
				Отказ = Истина;	
		КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) 

	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	//Если ТекущийОбъект.МетодыПромо.Количество()>=1 Тогда
	//	ЭтаФорма.ТЧМетоды.Очистить();
	//	Для Каждого стр из ТекущийОбъект.МетодыПромо Цикл
	//		Т = ТЧМетоды.Добавить();
	//		Т.Наименование = стр.НаименованиеМетода;
	//		Т.Выбрать = Истина;
	//	КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

 

&НаКлиенте
Процедура НачалоСтартаПроведение(Результат, Параметры) Экспорт
	
КонецПроцедуры


&НаКлиенте
Процедура НачалоСтартаСписокПолучателей(Результат, Параметры) Экспорт
    ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Согласовать;

КонецПроцедуры

&НаКлиенте
Процедура НачалоСтартаСписокГеография(Результат, Параметры) Экспорт
    ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Дополнительно;

КонецПроцедуры 


&НаСервере
Функция СтартНаСервере()
	//Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование;
	Объект.Статус = "Создан";  
	Если Объект.ТипПромо = "Ценовое" Тогда
		Объект.Показатели.Очистить();		
	КонецЕсли;
	
	//проверяем элементы
	Ош = Ложь;
	Если Объект.Согласовать.Количество() = 0 Тогда
		Ош = 1;
	ИначеЕсли Объект.СХК_География.Количество() = 0 Тогда
		Если Объект.ТипПромо <> Перечисления.Промо_ТипПромо.Ecom ТОгда
			Если Объект.НоменклатураПромо.Итог("КолТТ")>=1 Тогда 
				Ош = Ложь;
			Иначе
				Ош = 2; 
			КонецЕсли;
		Иначе
			Ош = Ложь;	
		КонецЕсли;
		
	//ИначеЕсли Объект.Ссылка.Проведен = Ложь  Тогда
	//	Если Объект.ТипПромо = "Ценовое" Тогда
	//	Ош = 3;
	КонецЕсли;
	Возврат Ош;
КонецФункции


#Если ТонкийКлиент Тогда
&НаКлиенте
Процедура СтартПромо()
	
	Содержимое = СписокПолей();
	
	Ном = СписокНоменклатура();
    НомЕком = СписокНоменклатураЕком(); 
	
	Почта = Новый ИнтернетПочта; 
	Письмо = Новый ИнтернетПочтовоеСообщение;
	ТекстПисьма = ""+ Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "<p>Номер документа: " + Строка(Содержимое.Номер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Автор: " + Строка(Содержимое.Автор) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Партнер: " + Строка(Содержимое.Партнер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Список номенклатуры " + Символы.ПС+"</p>";
	
	Если Ном.Количество()>=1 Тогда
			ТекстПисьма = ТекстПисьма + "<table><thead><th>Бренд</th><th>Номенклатура</th><th>ТекущаяЦена</th><th>ЦенаСкидка</th><th>ПроцентСкидки</th><th>Объем</th></thead><tbody>";
		Для Каждого стр из Ном Цикл
			ТекстПисьма	= ТекстПисьма + "<tr><td>"+ Строка(стр.Бренд) + "</td><td>" + Строка(стр.Номенклатура) + "</td><td>" + Строка(стр.ТекущаяЦена) + "</td><td>" +Строка(стр.ЦенаСкидка) + "</td><td>" +Строка(стр.ПроцентСкидки) + "</td><td>" +Строка(стр.Объем)+"</td></tr>";
		КонецЦикла;
	ИначеЕсли НомЕком.Количество()>=1 Тогда 
			ТекстПисьма = ТекстПисьма + "<table><thead><th>Бренд</th><th>Номенклатура</th><th>ТекущаяЦена</th><th>Объем</th></thead><tbody>";
		Для Каждого стр из НомЕком Цикл
			ТекстПисьма	= ТекстПисьма + "<tr><td>"+ Строка(стр.Бренд) + "</td><td>" + Строка(стр.Номенклатура) + "</td><td>" + Строка(стр.ТекущаяЦена) + "</td><td>" +Строка(стр.Объем)+"</td></tr>";
		КонецЦикла;
			
	КонецЕсли;
	
	ТекстПисьма	 = ТекстПисьма + "</tbody></table>";
	
	ТекстПисьма	 = ТекстПисьма + Символы.ПС+"</br>"; 
	//ТекстПисьма = ТекстПисьма + "Бренд: " + Строка(Содержимое.Бренд) + Символы.ПС; 
	//ТекстПисьма = ТекстПисьма + "Номенклатура: " +  Строка(Содержимое.Номенклатура) + Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "<p>" + Строка(Содержимое.ПланПроведения) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>" + Строка(Содержимое.СтартПроведения) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>ТипАкции: " + Строка(Содержимое.ТипАкции) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Описание акции: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
	
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";

	ТекстПисьма = ТекстПисьма + "<a href=""http://84.53.238.76/erp#"+Строка(Содержимое.URL)+" "">Ознакомиться с документом </a> " + Символы.ПС+"</br>";

	
	
	Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
	Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
	
	Письмо.Тема = Строка("Согласование промо акции"); 
	Письмо.Отправитель = "1c@smartbar.ru"; 
	Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
	
	Для сч=0 по Содержимое.Файлы.Количество()-1 Цикл 
		ВыбранныйФайл = Новый Файл(Содержимое.Файлы[сч]);
		Вложение = Новый ДвоичныеДанные(ВыбранныйФайл.ПолноеИмя); 
		Письмо.Вложения.Добавить(Вложение,ВыбранныйФайл.Имя);
	КонецЦикла; 
	
	
	Письмо.Получатели.Добавить(Содержимое.Почта);
		Попытка
			Почта.Подключиться(ПолучитьПрофильПочты()); 
			Почта.Послать(Письмо); 
		Исключение 
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	Почта.Отключиться(); 
	
	//раскоментировать на проде
    ИзменитьСтатус(); 
	ЭтаФорма.Закрыть();

КонецПроцедуры 

&НаКлиенте
Функция ПолучитьПрофильПочты()
	 
	Профиль = Новый ИнтернетПочтовыйПрофиль; 
	Профиль.АдресСервераSMTP = "smtp.mail.ru";
	Профиль.АдресСервераPOP3 = "pop.mail.ru";
	Профиль.ПортPOP3 = 995;
	Профиль.ПортSMTP = 465; 
	Профиль.Пользователь = "1c@smartbar.ru"; 
	Профиль.Пароль = "GrKV5YLckkiM5AsF8Byt"; 
	Профиль.ПользовательSMTP =  "1c@smartbar.ru"; 
	Профиль.ПарольSMTP = "GrKV5YLckkiM5AsF8Byt"; 
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Login;
	Профиль.ИспользоватьSSLPOP3 = Истина;
	Профиль.ИспользоватьSSLSMTP = Истина;  

	Возврат Профиль;
КонецФункции 

&НаКлиенте
Процедура Старт(Команда)
	С = СтартНаСервере();

	Если С = 1 Тогда
		Оповещение = Новый ОписаниеОповещения("НачалоСтартаСписокПолучателей",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Заполните список",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Заполнить список получателей" // (необ.) заголовок
	    );
	ИначеЕсли С = 2 Тогда
		Оповещение = Новый ОписаниеОповещения("НачалоСтартаСписокГеография",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Заполните список",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Заполнить список получателей" // (необ.) заголовок
	    );
	ИначеЕсли С = 3 Тогда
		Оповещение = Новый ОписаниеОповещения("НачалоСтартаПроведение",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Проведите документ",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Проведение документа" // (необ.) заголовок
	    );
		
	ИначеЕсли С = Ложь Тогда
		СтартПромо();
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ТЧСогласоватьНеСогласованПриИзменении(Элемент) 
	Если ПроверитьСтатусДокумента() = Истина Тогда 
		Ош = ИзменитьСтрокуНеСогла();
		Если Ош = Истина Тогда
			ЭтаФорма.Записать();
			Содержимое = СписокПолейОтбивка(); 
			Если Содержимое.Количество() > 0 Тогда
				Почта = Новый ИнтернетПочта; 
				Письмо = Новый ИнтернетПочтовоеСообщение;
				
				ТекстПисьма = ""+ Символы.ПС; 
				ТекстПисьма = ТекстПисьма + "<p>Пользователь  " + Строка(Содержимое.СогласующееЛицо) + Символы.ПС+"</p>";
				Если Содержимое.Согласовал = "Да" Тогда
					ТекстПисьма = ТекстПисьма + "<p>Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				Иначе
					ТекстПисьма = ТекстПисьма + "<p>Не Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				КонецЕсли;
				ТекстПисьма = ТекстПисьма + "<p>Комментарий: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
				Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
				Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
				
				Письмо.Тема = Строка("Согласование промо акции"); 
				Письмо.Отправитель = "1c@smartbar.ru"; 
				Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
				Письмо.Получатели.Добавить(Содержимое.Кому);
				
				Попытка
					Почта.Подключиться(ПолучитьПрофильПочты()); 
					Почта.Послать(Письмо); 
				Исключение 
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
				
			КонецЕсли;
			Почта.Отключиться();
			УстановитьСтатусНеСогласованПоСтроке();
			
			ЭтаФорма.Закрыть();
		Иначе
			Сообщить(Ош);
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧСогласоватьСогласованПриИзменении(Элемент) 
	
	Если ПроверитьСтатусДокумента() Тогда 
		Ош = ИзменитьСтрокуСогл();
		Если Ош = Истина Тогда
            ЭтаФорма.Записать();
			Содержимое = СписокПолейОтбивка(); 
			Если Содержимое.Количество() > 0 Тогда
				
				Почта = Новый ИнтернетПочта; 
				Письмо = Новый ИнтернетПочтовоеСообщение;
				
				ТекстПисьма = ""+ Символы.ПС; 
				ТекстПисьма = ТекстПисьма + "<p>Пользователь  " + Строка(Содержимое.СогласующееЛицо) + Символы.ПС+"</p>";
				Если Содержимое.Согласовал = "Да" Тогда
					ТекстПисьма = ТекстПисьма + "<p>Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				Иначе
					ТекстПисьма = ТекстПисьма + "<p>Не Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				КонецЕсли; 
				ТекстПисьма = ТекстПисьма + "<p>Комментарий: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
				
				Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
				Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
				
				Письмо.Тема = Строка("Согласование промо акции"); 
				Письмо.Отправитель = "1c@smartbar.ru"; 
				Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
				Письмо.Получатели.Добавить(Содержимое.Кому);
				
				НомерПол = ПроверитьОчередность();
				Письмо.Получатели.Добавить(Содержимое.Кому);
				
				
				Попытка
					Почта.Подключиться(ПолучитьПрофильПочты()); 
					Почта.Послать(Письмо);
					СтартСледующий(НомерПол);
				Исключение 
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
				
			КонецЕсли;
			Почта.Отключиться();
			ЭтаФорма.Закрыть();
		КонецЕсли;
		
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СтартСледующий(Н)
	Содержимое = СписокПолей();
	Ном = СписокНоменклатура();

	Почта = Новый ИнтернетПочта; 
	Письмо = Новый ИнтернетПочтовоеСообщение;
	ТекстПисьма = ""+ Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "<p>Номер документа: " + Строка(Содержимое.Номер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Автор: " + Строка(Содержимое.Автор) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Партнер: " + Строка(Содержимое.Партнер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Список номенклатуры " + Символы.ПС+"</p>";
	
	ТекстПисьма = ТекстПисьма + "<table><thead><th>Бренд</th><th>Номенклатура</th><th>ТекущаяЦена</th><th>ЦенаСкидка</th><th>ПроцентСкидки</th><th>Объем</th></thead><tbody>";
	Для Каждого стр из Ном Цикл
		ТекстПисьма	= ТекстПисьма + "<tr><td>"+ Строка(стр.Бренд) + "</td><td>" + Строка(стр.Номенклатура) + "</td><td>" + Строка(стр.ТекущаяЦена) + "</td><td>" +Строка(стр.ЦенаСкидка) + "</td><td>" +Строка(стр.ПроцентСкидки) + "</td><td>" +Строка(стр.Объем)+"</td></tr>";
	КонецЦикла;
	ТекстПисьма	 = ТекстПисьма + "</tbody></table>";
	
	ТекстПисьма	 = ТекстПисьма + Символы.ПС+"</br>"; 
	//ТекстПисьма = ТекстПисьма + "Бренд: " + Строка(Содержимое.Бренд) + Символы.ПС; 
	//ТекстПисьма = ТекстПисьма + "Номенклатура: " +  Строка(Содержимое.Номенклатура) + Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "<p>План Проведения: " + Строка(Содержимое.ПланПроведения) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Старт Проведения: " + Строка(Содержимое.СтартПроведения) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>ТипАкции: " + Строка(Содержимое.ТипАкции) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Описание акции: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
	
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";

	ТекстПисьма = ТекстПисьма + "<a href=""http://84.53.238.76/erp#"+Строка(Содержимое.URL)+" "">Ознакомиться с документом </a> " + Символы.ПС+"</br>";

	
	
	Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
	Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
	
	Письмо.Тема = Строка("Согласование промо акции"); 
	Письмо.Отправитель = "1c@smartbar.ru"; 
	Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
	
	Для сч=0 по Содержимое.Файлы.Количество()-1 Цикл 
		ВыбранныйФайл = Новый Файл(Содержимое.Файлы[сч]);
		Вложение = Новый ДвоичныеДанные(ВыбранныйФайл.ПолноеИмя); 
		Письмо.Вложения.Добавить(Вложение,ВыбранныйФайл.Имя);
	КонецЦикла; 
	
	Если ПроверитьСогласование(Н)  Тогда
		Письмо.Получатели.Добавить(ПолучитьПолучателя(Н)); 
		Попытка
			Почта.Подключиться(ПолучитьПрофильПочты()); 
			Почта.Послать(Письмо); 
		Исключение 
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	Почта.Отключиться();  
	Иначе
		ПромоСогласовано();
	КонецЕсли;
	
	
КонецПроцедуры

#КонецЕсли


&НаСервере
Процедура ИзменитьСтатус()
	Док = Объект.Ссылка.ПолучитьОбъект(); 
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование;
	Для Каждого стр из Док.Согласовать Цикл
		стр.Согласован = Ложь;
		стр.НеСогласован = Ложь;
	КонецЦикла;
	
	Док.Записать(РежимЗаписиДокумента.Проведение);
		
КонецПроцедуры



&НаСервере
Функция СписокНоменклатура()
	
		
	Мас = Новый Массив;
	Если Объект.ТипПромо <> Перечисления.Промо_ТипПромо.Ecom Тогда
	Для Каждого стр из Объект.НоменклатураПромо Цикл 
		Если стр.Номенклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда
			СЗ = Новый Структура;
			СЗ.Вставить("Бренд",Строка(стр.Бренд));
			СЗ.Вставить("Номенклатура",Строка(стр.Номенклатура));
			СЗ.Вставить("ТекущаяЦена",Строка(стр.ТекущаяЦена));
			СЗ.Вставить("ЦенаСкидка",Строка(стр.ЦенаСкидка));
			СЗ.Вставить("ПроцентСкидки",Строка(стр.ПроцентСкидки));
			СЗ.Вставить("Объем",Строка(стр.ПОбъемВсеТТ));
        	Мас.Добавить(СЗ);
		КонецЕсли;
	КонецЦикла;
   	КонецЕсли;
	Возврат Мас;	
КонецФункции

&НаСервере
Функция СписокНоменклатураЕком()
	
	
	Мас = Новый Массив; 
	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom Тогда
	Для Каждого стр из Объект.РасчетЕком Цикл 
		Если стр.Номенклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда
			СЗ = Новый Структура;
			СЗ.Вставить("Бренд",Строка(стр.Бренд));
			СЗ.Вставить("Номенклатура",Строка(стр.Номенклатура));
			СЗ.Вставить("ТекущаяЦена",Строка(стр.ТекущаяЦена));
			СЗ.Вставить("Объем",Строка(стр.РегулярныйОборот));
        	Мас.Добавить(СЗ);
		КонецЕсли;
	КонецЦикла;
    КонецЕсли;
	Возврат Мас;	
КонецФункции



&НаСервере
Функция СписокПолей()
	
	СЗ = Новый Структура;  
	СЗ.Вставить("Номер",Строка(Объект.Номер));
	СЗ.Вставить("Автор",Строка(Объект.Автор)); 
	
	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom ИЛИ Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое Тогда 
		ПланПроведения = "План Проведения :" +Строка(Строка(Формат(Объект.ПлановаяДатаНачала, "ДЛФ=Д"))+"-"+Строка(Формат(Объект.ПлановаяДатаОкончания, "ДЛФ=Д"))); 
		СЗ.Вставить("ПланПроведения",Строка(ПланПроведения));
		СтартПроведения = "Старт Проведения: " +Строка(Строка(Формат(Объект.НачалоАкции,"ДЛФ=Д"))+"-"+Строка(Формат(Объект.ОкончаниеАкции,"ДЛФ=Д"))); 
		СЗ.Вставить("СтартПроведения",Строка(СтартПроведения));
	Иначе
		ПланПроведения = "Начало акции отгрузка :" + Строка(Строка(Формат(Объект.НачалоАкцииОтгр, "ДЛФ=Д"))+"-"+Строка(Формат(Объект.ОкончаниеАкцииОтгр, "ДЛФ=Д")));
		СЗ.Вставить("ПланПроведения",Строка(ПланПроведения));
		СтартПроведения = "Начало акции полка :" + Строка(Строка(Формат(Объект.НачалоАкцииПолка,"ДЛФ=Д"))+"-"+Строка(Формат(Объект.ОкончаниеАкцииПолка,"ДЛФ=Д")));
		СЗ.Вставить("СтартПроведения",Строка(СтартПроведения));
	КонецЕсли;
	
	СЗ.Вставить("ТипАкции",Строка(Объект.ТипПромо)); 
	СЗ.Вставить("Комментарий",Строка(Объект.Комментарий)); 
	СЗ.Вставить("Партнер",Строка(Объект.Партнер)); 
	СЗ.Вставить("URL",Строка(ПолучитьНавигационнуюСсылку(Объект.Ссылка))); 
	СЗ.Вставить("Объем",Строка(Объект.НоменклатураПромо.Итог("Объем"))); 
	СЗ.Вставить("Бюджет",Строка(Объект.БюджетДок));  
	
	М = "";
	СЗ.Вставить("Методы",Строка(Объект.Метод));  
	СЗ.Вставить("Механика",Строка(Объект.Механика));

	Г = "";
	Для Каждого стр из Объект.СХК_География Цикл
		
		Г = Г + " , " + Строка(стр);
	КонецЦикла;
	
	СЗ.Вставить("География",Строка(Г));

	Файлы = Новый Массив;
	Для Каждого стр из Объект.Файлы Цикл
		Файлы.Добавить(стр.Путь);
	КонецЦикла;
	
	СЗ.Вставить("Файлы",Файлы);

	//Почта = Новый Массив;
	//Для Каждого стр из Объект.Согласовать Цикл
	//	Почта.Добавить(стр.ЭлПочта);
	//КонецЦикла;
    СЗ.Вставить("Почта",Строка(Объект.Согласовать[0].ЭлПочта));
	
	
	Возврат СЗ;	
КонецФункции

&НаСервере
Функция СписокВложения()
	
КонецФункции



&НаКлиенте
Процедура ПодборНоменклатуры(Команда) 
	Если Не ПроверитьСоглашение() Тогда 
		ЗаполнитьСписокНП(Партнер());  
		ДоступностьНП();
	Иначе
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Соглашение;
		Сообщить("Укажите соглашение"); 
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция ПроверитьСоглашение()
	Если Не Объект.Соглашение.Пустая() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ДоступностьНП() 
	ЭтаФорма.Элементы.ПодборНоменклатуры.Видимость = Ложь;
	ЭтаФорма.Элементы.ОчиститьПодбор.Видимость = Ложь;
	ЭтаФорма.Элементы.ЗакрытьПодборНоменклатуры.Видимость = Истина; 
	ЭтаФорма.Элементы.РасчетЕкомЗакрытьПодборНоменклатуры.Видимость = Истина; 
	
	ЭтаФорма.Элементы.СписокНК.Видимость = Истина;
	ЭтаФорма.Элементы.СписокНК1.Видимость = Истина;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСписокНП(Партнер) 
	
	СписокНК.Параметры.УстановитьЗначениеПараметра("ПометкаУдаления",Ложь);	
	СписокНК.Параметры.УстановитьЗначениеПараметра("ВладелецНоменклатуры",Партнер);	 
	
КонецПроцедуры

&НаСервере
Процедура ЗакрытьПодборНоменклатурыНаСервере()  
	
	ЭтаФорма.Элементы.ПодборНоменклатуры.Видимость = Истина;
	ЭтаФорма.Элементы.ЗакрытьПодборНоменклатуры.Видимость = Ложь; 
	ЭтаФорма.Элементы.СписокНК.Видимость = Ложь;  
//Для екома
	ЭтаФорма.Элементы.РасчетЕкомПодборНоменклатуры.Видимость = Истина;
	ЭтаФорма.Элементы.РасчетЕкомЗакрытьПодборНоменклатуры.Видимость = Ложь; 
	ЭтаФорма.Элементы.СписокНК1.Видимость = Ложь;  

	
	Если Объект.НоменклатураПромо.Количество()>=1 Тогда 
		Объект.СХК_География.Очистить();
		
		Отбор = Новый Структура;
		Отбор.Вставить("ТекущаяЦена",0);
		Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое ИЛИ Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое  Тогда
			НайденныеСтроки = Объект.НоменклатураПромо.НайтиСтроки(Отбор);
			Для Каждого НСтрока из НайденныеСтроки Цикл 
				Сообщить("Для номенклатуры " + Строка(НСтрока.Номенклатура) + " не заполнена цена");
				Объект.НоменклатураПромо.Удалить(НСтрока);
			КонецЦикла;
			
			Для Каждого стр из Объект.НоменклатураПромо Цикл
				Если стр.НоменклатураПартнера.СХК_Представленность.Количество() >=1 и Число(стр.КолТТ) >=1 Тогда
					Для Каждого стр из стр.НоменклатураПартнера.СХК_Представленность Цикл
						Т = Объект.СХК_География.Добавить();
						Т.Направление = стр.Направление;
						Т.Область = стр.Область;
						Т.Город = стр.Город;
						Т.КолТТ = стр.КолТТ;
						Т.ТипТТ = стр.ТипТТ;
					КонецЦикла;
				КонецЕсли; 
			КонецЦикла;			
			
		ИначеЕсли Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom Тогда
			НайденныеСтроки = Объект.РасчетЕком.НайтиСтроки(Отбор);
			Для Каждого НСтрока из НайденныеСтроки Цикл 
				Сообщить("Для номенклатуры " + Строка(НСтрока.Номенклатура) + " не заполнена цена");
				Объект.РасчетЕком.Удалить(НСтрока);
			КонецЦикла;
			
		КонецЕсли;
		
		
		//Для сч=0 по Объект.НоменклатураПромо.Количество()-1 Цикл
		//	Если  Объект.НоменклатураПромо[сч].ТекущаяЦена = 0 Тогда 
		//		Сообщить("Для номенклатуры " + Строка(Объект.НоменклатураПромо[сч].Номенклатура) + " не заполнена цена");
		//		Объект.НоменклатураПромо.Удалить(К);		

		//	Иначе
		//		Если Объект.НоменклатураПромо[сч].НоменклатураПартнера.СХК_Представленность.Количество() >=1 и Число(Объект.НоменклатураПромо[сч].КолТТ) >=1 Тогда
		//			Для Каждого стр из Объект.НоменклатураПромо[сч].НоменклатураПартнера.СХК_Представленность Цикл
		//				Т = Объект.СХК_География.Добавить();
		//				Т.Направление = стр.Направление;
		//				Т.Область = стр.Область;
		//				Т.Город = стр.Город;
		//				Т.КолТТ = стр.КолТТ;
		//				Т.ТипТТ = стр.ТипТТ;
		//			КонецЦикла;
		//		КонецЕсли; 
		//	КонецЕсли; 
		//	К = К +1;
		//КонецЦикла;  
		ЭтаФорма.Элементы.ОчиститьПодбор.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПодборНоменклатуры(Команда)
	ЗакрытьПодборНоменклатурыНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоглашениеПриИзмененииНаСервере()
	Если Объект.НоменклатураПромо.Количество()>=1 Тогда
		Для Каждого стр из Объект.НоменклатураПромо Цикл
			стр.ТекущаяЦена = ТекЦенаНоменклатуры(стр.Номенклатура, Объект.Соглашение);			
		КонецЦикла
	КонецЕсли;
	//Объект.НоменклатураПромо.Очистить();	
КонецПроцедуры



&НаКлиенте
Процедура СписокНКВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокНКВыборНаСервере(ВыбраннаяСтрока);
КонецПроцедуры

&НаСервере
Процедура РасчитатьНаСервере()
	Попытка  
		КолМес = 1 + Месяц(ЭтаФорма.ПериодРасчета.ДатаОкончания)-месяц(ЭтаФорма.ПериодРасчета.ДатаНачала);
	Для Каждого стр из Объект.НоменклатураПромо Цикл
		ПолнаяСС = ПолучитьПолнаяСС(стр.Номенклатура);
		Если ПолнаяСС <> 0 Тогда
			ОбъемН = ПолучитьПродажи(стр.Номенклатура);
			ОбъемЗаПериод = ОбъемН.Итог("Количество")/КолМес;
			
			ОбъёмДеньСетьШт = Окр(Число(ОбъемЗаПериод) /30 ,2) ;
			
			
			КолДнейАкции = Цел((НачалоДня(Объект.ОкончаниеАкции)-КонецДня(Объект.НачалоАкции))/86400); 
			Если  КолДнейАкции = 0 Тогда 
				КолДнейАкции = Цел((НачалоДня(Объект.ПлановаяДатаОкончания)-КонецДня(Объект.ПлановаяДатаНачала))/86400);
			КонецЕсли;
			
			ОбъёмМесяцСетьШт =(ОбъёмДеньСетьШт * КолДнейАкции)+ ОбъёмДеньСетьШт*(30-КолДнейАкции);
			
			ОбъёмГодСетьШт= ОбъёмМесяцСетьШт * 12;	
			
			ОбъёмГодСетьРуб = ОбъёмГодСетьШт * стр.ТекущаяЦена;

			//ПОбъёмМесяцШт = ОбъемЗаПериод * (1 + (Объект.ПроцентПрироста/100));
			ПОбъёмМесяцШт = ОбъёмДеньСетьШт * (1 + (Объект.ПроцентПрироста/100)) * КолДнейАкции + (ОбъёмДеньСетьШт*(30-КолДнейАкции)) ;
			
			ПОбъёмГодШт = Окр(ПОбъёмМесяцШт * 12,2);
			
			
			МаржаНе	 =  (стр.ТекущаяЦена - стр.ПолнаяСС) * (ОбъемЗаПериод * 12); 
			
			ПМаржаНе = (стр.ТекущаяЦена - стр.ПолнаяСС)* ПОбъёмГодШт;

			стр.ПолнаяСС = ПолнаяСС; //Полная с/с  C
			
			стр.Рентабельность = Окр(((стр.ТекущаяЦена - стр.ПолнаяСС)/стр.ПолнаяСС)*100,2);//Рентабельность, % E
			
			
			стр.ОбъёмДеньСетьШт = ОбъёмДеньСетьШт;  //Объём за месяц на 1 ТТ, шт.
			
			стр.Объем = ОбъемЗаПериод * (1 + (Объект.ПроцентПрироста/100));   
			
			стр.ОбъемЗаПериод = ОбъемЗаПериод;
			стр.ОбъёмМесяцТТ = ОбъемЗаПериод/стр.КолТТ;
			стр.ОбъёмМесяцСетьШт = ОбъёмМесяцСетьШт;
			стр.ОбъёмМесяцСетьРуб = Окр(Число(ОбъемЗаПериод)*Число(стр.ТекущаяЦена),2);
			стр.ОбъёмГодСетьШт = ОбъёмГодСетьШт;
			стр.ОбъёмГодСетьРуб = ОбъёмГодСетьРуб;
			стр.ПОбъёмМесяцШт = Окр(ПОбъёмМесяцШт,2);  
			стр.ПОбъёмГодШт = ПОбъёмГодШт;  
			стр.Маркетинг = 1;
			стр.Затраты = 1;
			стр.МаржаНе = МаржаНе;
			стр.Окупаемость = 1;
			стр.ПМаржаНе = ПМаржаНе;
			стр.ПОкупаемость = 1;
			
		Иначе
			Сообщить("Для позиции " + Строка(стр.Номенклатура) + " не заполнена плановая себестоимость");
		КонецЕсли;
		
	КонецЦикла;
	
	
	
	ИтогОбъемЗаГод = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьРуб");
	
	Для Каждого стр из Объект.НоменклатураПромо Цикл
		
		Если Число(стр.ПолнаяСС) >= 0 Тогда  
			Маркетинг = стр.ОбъёмГодСетьРуб/ИтогОбъемЗаГод*Объект.БюджетДок;
			стр.Маркетинг = Маркетинг;  
			стр.Затраты = Маркетинг;  
			стр.Окупаемость =Окр((Маркетинг / стр.МаржаНе)*12  ,2);
			//стр.ПОкупаемость =Окр(Маркетинг / стр.ПМаржаНе,2);
		КонецЕсли;
		
	КонецЦикла;

	Если Объект.НоменклатураПромо.Количество()>=1 Тогда  
		Если Объект.НоменклатураПромо[Объект.НоменклатураПромо.Количество() - 1].Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Объект.НоменклатураПромо.Удалить(Объект.НоменклатураПромо.Количество() - 1);                                                         
		КонецЕсли;
		Т = Объект.НоменклатураПромо.Добавить();  
		Т.Объем = Объект.НоменклатураПромо.Итог("Объем");
		Т.ОбъёмМесяцТТ = Объект.НоменклатураПромо.Итог("ОбъёмМесяцТТ");
		Т.ОбъёмМесяцСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьШт");
		Т.ОбъёмМесяцСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьРуб");
		Т.ОбъёмГодСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьШт");
		Т.ОбъёмГодСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьРуб");
		Т.ПОбъёмМесяцШт = Объект.НоменклатураПромо.Итог("ПОбъёмМесяцШт");
		Т.ПОбъёмГодШт = Объект.НоменклатураПромо.Итог("ПОбъёмГодШт");
		Т.Маркетинг = Объект.НоменклатураПромо.Итог("Маркетинг");
		Т.Затраты = Объект.НоменклатураПромо.Итог("Затраты");
		Т.МаржаНе = Объект.НоменклатураПромо.Итог("МаржаНе");
		Т.Окупаемость = Объект.НоменклатураПромо.Итог("Окупаемость");
		Т.ПМаржаНе = Объект.НоменклатураПромо.Итог("ПМаржаНе");
		Т.ПОкупаемость = Объект.НоменклатураПромо.Итог("ПОкупаемость");
		Т.ОбъемЗаПериод = Объект.НоменклатураПромо.Итог("ОбъемЗаПериод");
	КонецЕсли;
	
    Объект.ПериодРасчетаДок = ЭтаФорма.ПериодРасчета;
Исключение
	Сообщить("Введены не все показатели");
	КонецПопытки;
	//
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПродажи(Ном)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Количество КАК Количество,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручки КАК СуммаВыручки
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|ГДЕ
	|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам.Партнер = &Партнер
	|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала", ЭтаФорма.ПериодРасчета.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ЭтаФорма.ПериодРасчета.ДатаОкончания);
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	Запрос.УстановитьПараметр("Номенклатура", Ном);  
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода); 	
	Возврат ТабЗнач;	
КонецФункции



&НаКлиенте
Процедура Расчитать(Команда) 
	Если ПроверитьПериодРасчета() Тогда
		РасчитатьНаСервере();
	Иначе
		Сообщить("Укажите период расчета"); 
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПроверитьПериодРасчета() 
	Если ЭтаФорма.ПериодРасчета.ДатаНачала <> Дата(1,1,1) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьОПР(Ном)
	ТекущаяЦена = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
	|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены"; 
	Запрос.УстановитьПараметр("ВидЦены",Справочники.ВидыЦен.НайтиПоНаименованию("Плановая общепроизводственная себестоимость"));
	Запрос.УстановитьПараметр("Номенклатура",Ном); 
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество()>=1 Тогда
		Пока Рез.Следующий() Цикл
			ТекущаяЦена = Рез.Цена;	
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекущаяЦена; 
КонецФункции

	
&НаСервере
Функция ПолучитьПолнаяСС(Ном)
	ТекущаяЦена = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
	|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены"; 
	Запрос.УстановитьПараметр("ВидЦены",Справочники.ВидыЦен.НайтиПоНаименованию("Плановая полная себестоимость"));
	Запрос.УстановитьПараметр("Номенклатура",Ном); 
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество()>=1 Тогда
		Пока Рез.Следующий() Цикл
			ТекущаяЦена = Рез.Цена;	
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекущаяЦена; 
КонецФункции

&НаСервере
Процедура ОчиститьПодборНаСервере()
	Объект.НоменклатураПромо.Очистить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПодбор(Команда)
	ОчиститьПодборНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура БюджетПриИзменении(Элемент)
	Если ПроверитьРеквизитыДляРасчета() ТОгда
		РасчитатьНаСервере();                    
	Иначе
		Сообщить("Заполните реквизиты бюджет, процент прироста, период")
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроцентПриростаПриИзменении(Элемент)
		Если ПроверитьРеквизитыДляРасчета() ТОгда
		РасчитатьНаСервере();                    
	Иначе
		Сообщить("Заполните реквизиты бюджет, процент прироста, период")
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура РасчетНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Расчет(Команда)
	П = ПолучитьТипПромо();
	Если П = "Не ценовое" Тогда
		Если ПроверитьРеквизитыДляРасчета() ТОгда
			РасчитатьНаСервере();                    
		Иначе
			Сообщить("Заполните реквизиты бюджет, процент прироста, период")
		КонецЕсли;
	ИначеЕсли П = "Ecom" Тогда 
		Если ПроверитьРеквизитыДляРасчетаЕком() ТОгда
			РасчитатьНаСервереЕком();                    
		Иначе
			Сообщить("Заполните реквизиты бюджет, процент прироста, период, охват, СтоимостьКонтакта")
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура РасчитатьНаСервереЕком()
	Попытка 
		Если Объект.РасчетЕком[Объект.РасчетЕком.Количество() - 1].Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Объект.РасчетЕком.Удалить(Объект.РасчетЕком.Количество() - 1);                                                         
		КонецЕсли;
		
		КолМес = 1 + Месяц(ЭтаФорма.ПериодРасчета.ДатаОкончания)-месяц(ЭтаФорма.ПериодРасчета.ДатаНачала);
	Для Каждого стр из Объект.РасчетЕком Цикл
		ПолнаяСС = ПолучитьПолнаяСС(стр.Номенклатура);
		Если ПолнаяСС <> 0 Тогда
			ОбъемН = ПолучитьПродажи(стр.Номенклатура); 
			стр.ПолнаяСС =  ПолнаяСС; 
			ОбъемЗаПериод = ОбъемН.Итог("Количество")/КолМес;
			ОбъемЗаПериодДень = ОбъемЗаПериод/30;
			
			Рентабельность = ((стр.ТекущаяЦена-стр.ПолнаяСС)/стр.ПолнаяСС)*100;
			стр.Рентабельность =  Окр(Рентабельность,2);
			стр.РегулярныйОборот =  Окр(ОбъемЗаПериод,2);;
			стр.РегулярныйОборотШтВДень =  Окр(ОбъемЗаПериодДень,2);
			
			КолДнейАкции = Цел((НачалоДня(Объект.ОкончаниеАкции)-КонецДня(Объект.НачалоАкции))/86400); 
			Если КолДнейАкции = 0 ТОгда
				Сообщить("Заполните даты акции");
			КонецЕсли;
			
			ПромоОборотШт =(ОбъемЗаПериодДень*КолДнейАкции) + ((ОбъемЗаПериодДень*КолДнейАкции)*(Объект.ПроцентПрироста/100)); 
			
			стр.ПромоОборотШт = Окр(ПромоОборотШт,2); 
			
			ОборотСПромоГодШт = ОбъемЗаПериодДень * (365-КолДнейАкции) + ПромоОборотШт;
			стр.ОборотСПромоГодШт =  Окр(ОборотСПромоГодШт,2); 
			
			стр.ОборотСПромоГодРуб =  Окр(ОборотСПромоГодШт*стр.ТекущаяЦена,2);
			стр.Маркетинг =  1;
			Маржа = (стр.ТекущаяЦена-стр.ПолнаяСС) * ОборотСПромоГодШт;
			стр.Маржа =  Окр(Маржа,2);   
			стр.Окупаемость =  1;
		Иначе
			Сообщить("Для позиции " + Строка(стр.Номенклатура) + " не заполнена плановая себестоимость");
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		Для Каждого стр из Объект.РасчетЕком Цикл 
			Маркетинг = стр.ОборотСПромоГодРуб/ Объект.РасчетЕком.Итог("ОборотСПромоГодРуб")*Объект.БюджетДок; 
			стр.Маркетинг = Окр(Маркетинг,2); 
			Окупаемость = Маркетинг/стр.Маржа*12;
			стр.Окупаемость = Окр(Окупаемость,2);
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	
	
	Если Объект.РасчетЕком.Количество()>=1 Тогда  
		Т = Объект.РасчетЕком.Добавить();
		Т.РегулярныйОборот = Объект.РасчетЕком.Итог("РегулярныйОборот"); 
		Т.РегулярныйОборотШтВДень = Объект.РасчетЕком.Итог("РегулярныйОборотШтВДень");
		Т.ПромоОборотШт = Объект.РасчетЕком.Итог("ПромоОборотШт");
		Т.ОборотСПромоГодШт = Объект.РасчетЕком.Итог("ОборотСПромоГодШт");
		Т.ОборотСПромоГодРуб = Объект.РасчетЕком.Итог("ОборотСПромоГодРуб");
		Т.Маркетинг = Объект.РасчетЕком.Итог("Маркетинг"); 
		Т.Маржа = Объект.РасчетЕком.Итог("Маржа");
		Т.Окупаемость = Окр(Объект.РасчетЕком.Итог("Окупаемость")/Объект.РасчетЕком.Количество(),2);
		//Т.Объем = Объект.НоменклатураПромо.Итог("Объем");
		//Т.ОбъёмМесяцТТ = Объект.НоменклатураПромо.Итог("ОбъёмМесяцТТ");
		//Т.ОбъёмМесяцСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьШт");
		//Т.ОбъёмМесяцСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьРуб");
		//Т.ОбъёмГодСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьШт");
		//Т.ОбъёмГодСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьРуб");
		//Т.ПОбъёмМесяцШт = Объект.НоменклатураПромо.Итог("ПОбъёмМесяцШт");
		//Т.ПОбъёмГодШт = Объект.НоменклатураПромо.Итог("ПОбъёмГодШт");
		//Т.Маркетинг = Объект.НоменклатураПромо.Итог("Маркетинг");
		//Т.Затраты = Объект.НоменклатураПромо.Итог("Затраты");
		//Т.МаржаНе = Объект.НоменклатураПромо.Итог("МаржаНе");
		//Т.Окупаемость = Объект.НоменклатураПромо.Итог("Окупаемость");
		//Т.ПМаржаНе = Объект.НоменклатураПромо.Итог("ПМаржаНе");
		//Т.ПОкупаемость = Объект.НоменклатураПромо.Итог("ПОкупаемость");
		//Т.ОбъемЗаПериод = Объект.НоменклатураПромо.Итог("ОбъемЗаПериод");
	КонецЕсли;
	
    Объект.ПериодРасчетаДок = ЭтаФорма.ПериодРасчета;
	Исключение
	Сообщить("Введены не все показатели");
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТипПромо()
	Возврат Строка(Объект.ТипПромо);	
КонецФункции

&НаСервере
Функция ПроверитьРеквизитыДляРасчетаЕком() 
	
	Ош = Истина;
	Если Объект.БюджетДок = 0 И Объект.ПроцентПрироста = 0 
		И Объект.Охват = 0 И Объект.СтоимостьКонтакта = 0 И ЭтаФорма.ПериодРасчета.ДатаНачала = Дата(1,1,1) Тогда  
		Ош =  Ложь;
	ИНаче
		Для Каждого стр из Объект.НоменклатураПромо Цикл
			Если стр.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда  
				Объект.НоменклатураПромо.Удалить(стр);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ош;
	
КонецФункции



&НаСервере
Функция ПроверитьРеквизитыДляРасчета() 
	
	Ош = Истина;
	Если Объект.БюджетДок = 0 И Объект.ПроцентПрироста = 0 И ЭтаФорма.ПериодРасчета.ДатаНачала = Дата(1,1,1) Тогда  
		Ош =  Ложь;
	ИНаче
		Для Каждого стр из Объект.НоменклатураПромо Цикл
			Если стр.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда  
				Объект.НоменклатураПромо.Удалить(стр);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ош;
	
КонецФункции


&НаСервере
Процедура НоменклатураПромоПроцентСкидкиПриИзмененииНаСервере(Ном) 
	Попытка
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", Ном);
		Строки = Объект.НоменклатураПромо.НайтиСтроки(Отбор);
		Для Каждого Стр Из Строки Цикл
			Стр.ЦенаСкидка = Стр.ТекущаяЦена - ((Стр.ТекущаяЦена * Стр.ПроцентСкидки)/100);
		КонецЦикла;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПромоПроцентСкидкиПриИзменении(Элемент)
	НоменклатураПромоПроцентСкидкиПриИзмененииНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Номенклатура);
КонецПроцедуры


&НаСервере
Процедура ПересчитатьСтрокиПромо()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СкидкаПоДокументуПриИзменении(Элемент)
	ПересчитатьСтрокиПромо();

КонецПроцедуры

&НаСервере
Процедура НоменклатураПромоЦенаСкидкаПриИзмененииНаСервере(Ном)
		Попытка
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", Ном);
		Строки = Объект.НоменклатураПромо.НайтиСтроки(Отбор);
		Для Каждого Стр Из Строки Цикл   
			Стр.ПроцентСкидки =  100 - Окр((Стр.ЦенаСкидка * 100)/ Стр.ТекущаяЦена,2) ;
			
		КонецЦикла;
		
	Исключение
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПромоЦенаСкидкаПриИзменении(Элемент)
	НоменклатураПромоЦенаСкидкаПриИзмененииНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Номенклатура);
КонецПроцедуры



&НаСервере
Процедура ПересчитатьНоменклатураПромо()
	
	Для Каждого стр из Объект.НоменклатураПромо Цикл 
		Попытка
			стр.ПОбъемВсеТТ = стр.КолТТ * стр.ПОбъем_1_ТТ;//Объем ПРОМО на все ТТ, шт 	
			стр.ОбъемПРОМОВсеТТРуб = (стр.ТекущаяЦена-стр.ТекущаяЦена*(стр.ПроцентСкидки/100))*стр.ПОбъемВсеТТ;	//Объем ПРОМО на все ТТ руб. 
			стр.СебестоимостьПромоР = стр.КолТТ * стр.ПОбъем_1_ТТ * стр.ПолнаяСС;  
			стр.ПрибыльОпр =  стр.ОбъемПРОМОВсеТТРуб - стр.ДопИнвестиции - стр.СебестоимостьОПР*стр.ПОбъемВсеТТ;//Прибыль от ОПР с/с   
			стр.ПрибыльСС = стр.ОбъемПРОМОВсеТТРуб-стр.ДопИнвестиции-стр.СебестоимостьПромоР;//Прибыль от полной с/с    
			стр.ВыручкаВМесяцПосле = стр.ТекущаяЦена * стр.ПланируемыйОбъем;//Выручка в месяц после акции, руб
			стр.СебестоимостьВМесяцПосле = стр.ПланируемыйОбъем * стр.ПолнаяСС;//Себестоимость в месяц после акции, руб     
			стр.Прибыль = стр.ВыручкаВМесяцПосле-стр.СебестоимостьВМесяцПосле;//Прибыль, руб
			стр.ROI = стр.ПрибыльСС/стр.ОбъемПРОМОВсеТТРуб * 100;//ROI, %
			стр.Эластичность = (стр.ПОбъемВсеТТ/стр.ПланируемыйОбъем-1)/стр.ПроцентСкидки*100;//Эластичность
			ПОкупаемость = (-1) * стр.ПрибыльСС /стр.Прибыль;
			Если стр.ПрибыльСС > 0  Тогда
				стр.ПОкупаемость = "Окупается в 1 доставку";
			Иначе
				стр.ПОкупаемость = Окр(ПОкупаемость + стр.СрокРеализацииПромо - 1,2 ); 
			КонецЕсли;
			
			//стр.ПОбъем_1_ТТ = стр.Объем/стр.КолТТ;
			//стр.ПОбъемВсеТТ = (стр.ТекущаяЦена-стр.ТекущаяЦена*стр.ПроцентСкидки)*стр.стр.Объем;
		Исключение
			
		КонецПопытки
		
	КонецЦикла;
	
	Объект.ИтогОкупаемостьПромо = "";	
	Попытка
		ИтогОкуп = (-1) * Объект.НоменклатураПромо.Итог("ПрибыльСС") /Объект.НоменклатураПромо.Итог("Прибыль");
		Если Объект.НоменклатураПромо.Итог("ПрибыльСС") > 0  Тогда
			Объект.ИтогОкупаемостьПромо = "Окупается в 1 доставку";
			
		Иначе 
			
			СР = Объект.НоменклатураПромо.Итог("СрокРеализацииПромо")/Объект.НоменклатураПромо.Количество(); 
			Объект.ИтогОкупаемостьПромо = Строка(Окр(ИтогОкуп + СР - 1,2 )) + Строка(" месяцев."); 
		КонецЕсли;
	Исключение 
		
	КонецПопытки;
	//
	Объект.ИтогПрибыльАкц = Объект.НоменклатураПромо.Итог("ОбъемПРОМОВсеТТРуб") - Объект.НоменклатураПромо.Итог("ДопИнвестиции")  - Объект.НоменклатураПромо.Итог("СебестоимостьПромоР");	
	//
	
	Попытка 
		Объект.ИтогROIПромо = Окр((Объект.НоменклатураПромо.Итог("ПрибыльСС") / Объект.НоменклатураПромо.Итог("ОбъемПРОМОВсеТТРуб"))*100,2);
	Исключение
		Объект.ИтогROIПромо = "";
	КонецПопытки;   
	
	Попытка 
		Объект.ИтогROIРегПрод = Окр((Объект.НоменклатураПромо.Итог("ПрибыльСС") / Объект.НоменклатураПромо.Итог("ВыручкаВМесяцПосле"))*100,2);
	Исключение
		Объект.ИтогROIРегПрод = "";
	КонецПопытки;   
	
	Попытка 
		Объект.ROI = Окр((Объект.НоменклатураПромо.Итог("ПрибыльСС") / Объект.НоменклатураПромо.Итог("СебестоимостьПромоР"))*100,2);
	Исключение
		Объект.ROI = "";
	КонецПопытки;   
	
	Попытка 
		Объект.ИтогЭластичностьПромо = Окр(Объект.НоменклатураПромо.Итог("Эластичность") / Объект.НоменклатураПромо.Количество(),2);
	Исключение
		Объект.ИтогЭластичностьПромо = "";
	КонецПопытки;
	
	
	
КонецПроцедуры

&НаСервере
Процедура ВидимостьПромо()

	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое Тогда 
		ЭтаФорма.Элементы.ГруппаЦеновые.ТолькоПросмотр = Ложь;
		ЭтаФорма.Элементы.ГруппаНеЦен.ТолькоПросмотр = Истина; 
		ЭтаФорма.Элементы.ГруппаРасчет.Доступность = Ложь;  
		ЭтаФорма.Элементы.ГруппаДопЦеновые.Видимость = Истина; 
		Объект.Метод = Справочники.СХК_МетодыПромо.НайтиПоНаименованию("Ценовое");
		ЭтаФорма.Элементы.ПериодЦен.Видимость = Истина;

		ЭтаФорма.Элементы.ПериодНеЦен.Видимость = Ложь;
		ЭтаФорма.Элементы.ИтогиЦен.Видимость = Истина;  
		ЭтаФорма.Элементы.МетодыПромо.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина; 
		ЭтаФорма.Элементы.ГруппаПодборНоменклатурыЕком.Видимость = Ложь; 
		
		//+Видимость Колонок НоменклатураПромо
		ЭтаФорма.Элементы.НоменклатураПромоПОбъем_1_ТТ.Видимость = Истина;
		ЭтаФорма.Элементы.НоменклатураПромоПроцентСкидки.Видимость = Истина; 
		ЭтаФорма.Элементы.НоменклатураПромоПОбъемВсеТТ.Видимость = Истина;
		ЭтаФорма.Элементы.НоменклатураПромоСебестоимостьОПР.Видимость = Истина;
		ЭтаФорма.Элементы.НоменклатураПромо1КолТТ.Видимость = Истина;
        //-
		//Объект.НоменклатураПромо.Очистить();
	ИначеЕсли  Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое Тогда
		ЭтаФорма.Элементы.ГруппаНеЦен.ТолькоПросмотр = Ложь;
		ЭтаФорма.Элементы.ГруппаЦеновые.ТолькоПросмотр = Истина;
		ЭтаФорма.Элементы.ГруппаРасчет.Доступность = Истина;
		
		ЭтаФорма.Элементы.ПериодЦен.Видимость = Ложь;
		ЭтаФорма.Элементы.ПериодНеЦен.Видимость = Истина;
		ЭтаФорма.Элементы.МетодыПромо.Видимость = Истина;
		ЭтаФорма.Элементы.ИтогиЦен.Видимость = Ложь; 
		ЭтаФорма.Элементы.НоменклатураПромо1.Видимость = Истина; 
		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина; 
		ЭтаФорма.Элементы.ГруппаПодборНоменклатурыЕком.Видимость = Ложь;
		ЭтаФорма.Элементы.Охват.Видимость = Ложь;
		ЭтаФорма.Элементы.СтоимостьКонтакта.Видимость = Ложь;

		//+Видимость Колонок НоменклатураПромо
		ЭтаФорма.Элементы.НоменклатураПромоПОбъем_1_ТТ.Видимость = Ложь;
		ЭтаФорма.Элементы.НоменклатураПромоПроцентСкидки.Видимость = Ложь;
		ЭтаФорма.Элементы.НоменклатураПромоПОбъемВсеТТ.Видимость = Ложь; 
		ЭтаФорма.Элементы.НоменклатураПромоСебестоимостьОПР.Видимость = Ложь;  
        ЭтаФорма.Элементы.НоменклатураПромо1КолТТ.Видимость = Истина;
        ЭтаФорма.Элементы.НоменклатураПромо1Объем.Видимость = Истина;
		ЭтаФорма.Элементы.НоменклатураПромо1ОбъёмМесяцТТ.Видимость = Истина;
		//-
	    //Объект.НоменклатураПромо.Очистить();
	ИначеЕсли Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom Тогда 
		ЭтаФорма.Элементы.ГруппаЦеновые.ТолькоПросмотр = Ложь;
        ЭтаФорма.Элементы.ГруппаНеЦен.ТолькоПросмотр = Ложь; 
		ЭтаФорма.Элементы.СрокРПоставки.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаДопЦеновые.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаРасчет.Доступность = Истина; 
		ЭтаФорма.Элементы.ПериодЦен.Видимость = Ложь;
		ЭтаФорма.Элементы.ПериодНеЦен.Видимость = Истина;
		ЭтаФорма.Элементы.МетодыПромо.Видимость = Истина;
		ЭтаФорма.Элементы.ИтогиЦен.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Ложь;
		ЭтаФорма.Элементы.НоменклатураПромо1.Видимость = Ложь; 
		ЭтаФорма.Элементы.ГруппаПодборНоменклатурыЕком.Видимость = Истина;
		//ЭтаФорма.Элементы.НоменклатураПромо1КолТТ.Видимость = Ложь;
		//ЭтаФорма.Элементы.НоменклатураПромо1Объем.Видимость = Ложь; 
		//ЭтаФорма.Элементы.НоменклатураПромо1ОбъёмМесяцТТ.Видимость = Ложь;
		//ЭтаФорма.Элементы.НоменклатураПромо1ОбъемЗаПериод.Заголовок = "регулярный оборот, шт в  мес  ";
		//ЭтаФорма.Элементы.НоменклатураПромо1ОбъёмДеньСетьШт.Заголовок = "регулырный оборот шт в день ";
        //Объект.НоменклатураПромо.Очистить();
		ЭтаФорма.Элементы.Охват.Видимость = Истина;
		ЭтаФорма.Элементы.СтоимостьКонтакта.Видимость = Истина;
	КонецЕсли;  
	
КонецПроцедуры 


&НаСервере
Процедура МетодПриИзмененииНаСервере()
	Объект.ТипKpi = Объект.Метод.ТипKPI;
	Объект.Kpi = Объект.Метод.Kpi;
КонецПроцедуры


&НаКлиенте
Процедура МетодПриИзменении(Элемент)
	МетодПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СрокРПоставкиПриИзменении(Элемент)
	ПересчитатьНоменклатураПромо() ;
КонецПроцедуры



&НаКлиенте
Процедура НоменклатураПромоПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПСП = ПроверитьСрокПоставки(); // проверяем если ценовое то проставлено срок поставки
	Если ПСП = Истина Тогда
		ПересчитатьНоменклатураПромо() ;  
	Иначе 
		Сообщить("");
	КонецЕсли;
	
КонецПроцедуры 


&НаСервере
Функция ПроверитьСрокПоставки() 
	
	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое Тогда
		Если Объект.СрокРПоставки = 0 Тогда
			ош = Ложь
		Иначе
			ош = Истина;
		КонецЕсли;      
	Иначе
		ош = Истина;
	КонецЕсли;
	Возврат ош;		
КонецФункции

 

&НаСервере
Процедура УстановитьСтатусНеСогласованПоСтроке() 
	
	Док = Объект.Ссылка.ПолучитьОбъект();
	
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Создан;
	
	Док.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Истина; 
	Док.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Ложь; 
	Док.Записать(РежимЗаписиДокумента.Проведение);

	
КонецПроцедуры

&НаСервере
Функция ИзменитьСтрокуСогл()
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Пользователь = Пользователи.ТекущийПользователь() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ИзменитьСтрокуНеСогла() 
	Ош = Ложь;
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Пользователь = Пользователи.ТекущийПользователь() Тогда 
		
		Если СтрДлина(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Комментарий) <20 Тогда 
			Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь;
			//Сообщить();
			Ош = "Заполните комментарий причины отказа";
		Иначе 
			//Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Истина;
			Ош = Истина;	
		КонецЕсли;
	Иначе 
		Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь;
		Ош = "Установите отметку на против своей фамилии";;
	КонецЕсли;  
	Возврат Ош;
КонецФункции

&НаСервере
Функция ПроверитьСтатусДокумента() 
	Док = Объект.Ссылка.ПолучитьОбъект(); 
	Если Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверитьОчередность()
	Возврат ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока;	
КонецФункции  


	



&НаСервере
Функция ПроверитьСогласование(Ном)
	Если Число(Объект.Согласовать.Количество()-1) = Число(Ном) Тогда 
		
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции 

&НаСервере
Процедура ПромоСогласовано()
	Док = Объект.Ссылка.ПолучитьОбъект();
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован; 
	Док.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры


&НаСервере
Функция ПолучитьПолучателя(Н)
	Возврат Объект.Согласовать[Н+1].ЭлПочта ;	
КонецФункции


&НаСервере
Функция СписокПолейОтбивка() 
	СЗ = Новый Структура; 
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Истина Тогда
		Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь;
		ЗаписатьСогласование(ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока,"",Истина);

	ИначеЕсли  Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Истина Тогда
		Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Ложь; 
		ЗаписатьСогласование(ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока,"",Ложь);
	КонецЕсли;
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Ложь И Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь Тогда
		Сообщить("Выбирете согласование");	
	Иначе
		
	ТП = Пользователи.ТекущийПользователь();
	  
	СЗ.Вставить("Номер",Строка(Объект.Номер));
	СЗ.Вставить("СогласующееЛицо",Строка(ТП.Наименование)); 
    СЗ.Вставить("Кому",Строка(Объект.Автор.КонтактнаяИнформация[0].АдресЭП)); 
	СЗ.Вставить("Согласовал",Строка(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован)); 
	СЗ.Вставить("НеСогласовал",Строка(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован)); 
	СЗ.Вставить("Комментарий",Строка(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Комментарий));
КонецЕсли;

Возврат СЗ;	
КонецФункции

&НаСервере
Процедура ЗаписатьСогласование(НомерСтроки,Бул,Согл)
	Док = Объект.Ссылка.ПолучитьОбъект();
	Если Согл = Истина Тогда
		Док.Согласовать[НомерСтроки].Согласован = Истина ;
		Док.Согласовать[НомерСтроки].НеСогласован = Ложь ;
	Иначе
		Док.Согласовать[НомерСтроки].НеСогласован = Истина;
		Док.Согласовать[НомерСтроки].Согласован = Ложь ;
	КонецЕсли;
	
	Док.Записать(РежимЗаписиДокумента.Проведение);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПромоПередУдалением(Элемент, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)
	ПересчитатьНоменклатураПромо() ;
КонецПроцедуры

&НаСервере
Процедура ВернутьСостояниеСозданНаСервере()
	Док = Объект.Ссылка.ПолучитьОбъект();
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Создан;
	Док.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

&НаКлиенте
Процедура ВернутьСостояниеСоздан(Команда)
	ВернутьСостояниеСозданНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТЧСогласоватьКомментарийПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТЧСогласоватьКомментарийПриИзменении(Элемент) 
	ЭтаФорма.Записать();
КонецПроцедуры

&НаКлиенте
Процедура СписокНК1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокНКВыборНаСервере(ВыбраннаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйРасчет(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура СогласованНаСервере()
		Док = Объект.Ссылка.ПолучитьОбъект();
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован;
	Док.Записать(РежимЗаписиДокумента.Запись);

КонецПроцедуры

&НаКлиенте
Процедура Согласован(Команда)
	СогласованНаСервере();
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()
	ТаблДокум = Новый  ТабличныйДокумент;
	ТаблДокум.Очистить();
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетПечать");  
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТаблДокум.Вывести(Шапка); 
	МСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для Каждого стр из Объект.НоменклатураПромо Цикл
		МСтрока.Параметры.Бренд = стр.Бренд;
		МСтрока.Параметры.Номенклатура = стр.Номенклатура;
		МСтрока.Параметры.РегЦена = стр.ТекущаяЦена;
		МСтрока.Параметры.ЦенаНаПолке = стр.ЦенаПолкаРег;
		МСтрока.Параметры.ЦенаНаПолкеПромо = стр.ЦенаПолкаПромоПлан;
		МСтрока.Параметры.КолТТ = стр.КолТТ;
		МСтрока.Параметры.ОбъемПромо1ТТ = стр.ПОбъем_1_ТТ;
		МСтрока.Параметры.ОбъемПромоВсеТТ = стр.ПОбъемВсеТТ;
		МСтрока.Параметры.ОбъемПромоВсеТТРуб = стр.ОбъемПРОМОВсеТТРуб;
		МСтрока.Параметры.Скидка = стр.ПроцентСкидки;
		МСтрока.Параметры.ДопИнвест = стр.ДопИнвестиции;
		МСтрока.Параметры.СебестоимостьОПР = стр.СебестоимостьОПР;
		МСтрока.Параметры.ПолнаяСС = стр.ПолнаяСС;
		МСтрока.Параметры.СебестоимостьПРОМОРуб = стр.СебестоимостьПромоР;
		МСтрока.Параметры.СрокРеализации = стр.СрокРеализацииПромо;
		МСтрока.Параметры.ПрибыльОПРСС = стр.ПрибыльОпр;
		МСтрока.Параметры.ПрибыльПолнойСС = стр.ПрибыльСС;
		МСтрока.Параметры.ПланОбъемШТ = стр.ПланируемыйОбъем;
		МСтрока.Параметры.ВыручкаПослеАкции = стр.ВыручкаВМесяцПосле;
		МСтрока.Параметры.СебестоимостьВМЕсяцПосле = стр.СебестоимостьВМесяцПосле;
		МСтрока.Параметры.ПрибыльРуб = стр.Прибыль;
		МСтрока.Параметры.ОкупаемостьМес = стр.ПОкупаемость;
		МСтрока.Параметры.ROI = стр.ROI;
		МСтрока.Параметры.Эластичность = стр.Эластичность;
		
		ТаблДокум.Вывести(МСтрока); 
		
	КонецЦикла;
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.ROI	= "ROI :" + Строка(Объект.ROI);					
	Подвал.Параметры.НоменклатураПромоИтогПрибыль= "Прибыль с учетом регулярных продаж, руб (Итог) :" + Строка(Объект.НоменклатураПромо.Итог("Прибыль"));						
	Подвал.Параметры.ИтогROIРегПрод	= "Рентабельность c  учета регулярных продаж :" + Строка(Объект.ИтогROIРегПрод);					
	Подвал.Параметры.ИтогROIПромо= "Рентабельность без учета регулярных продаж :" + Строка(Объект.ИтогROIПромо);						
	Подвал.Параметры.ИтогROIПромо	= "Итог эластичность :" + Строка(Объект.ИтогROIПромо);					
	Подвал.Параметры.ИтогОкупаемостьПромо	= "Итог окупаемость :" + Строка(Объект.ИтогОкупаемостьПромо);					
	Подвал.Параметры.ИтогПрибыльАкц	= "Прибыль акционная, руб (Итог) :" + Строка(Объект.ИтогПрибыльАкц);					
	ТаблДокум.Вывести(Подвал);
	Возврат ТаблДокум;
	
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
		ТаблДокум = ПечатьНаСервере();
		ТаблДокум.Показать("Печать документа");
КонецПроцедуры



//&НаСервере
//Процедура НоменклатураПромоИтогПрибыльПриИзмененииНаСервере() 
//	
//	ИтогОкуп = (-1) * Объект.НоменклатураПромо.Итог("ПрибыльСС") /Объект.НоменклатураПромо.Итог("Прибыль");
//	Если Объект.НоменклатураПромо.Итог("ПрибыльСС") > 0  Тогда
//		ЭтаФорма.Элементы.ИтогОкупаемость = "Окупается в 1 доставку";
//		
//	Иначе 
//		Попытка
//			СР = Объект.НоменклатураПромо.Итог("СрокРеализацииПромо")/Объект.НоменклатураПромо.Количество(); 
//			ЭтаФорма.Элементы.ИтогОкупаемость = Окр(ИтогОкуп + СР - 1,2 ); 
//		Исключение
//		КонецПопытки;
//	КонецЕсли;
//КонецПроцедуры

//&НаКлиенте
//Процедура НоменклатураПромоИтогПрибыльПриИзменении(Элемент)
//	НоменклатураПромоИтогПрибыльПриИзмененииНаСервере();
//КонецПроцедуры


//Док.Записать(РежимЗаписиДокумента.Проведение);

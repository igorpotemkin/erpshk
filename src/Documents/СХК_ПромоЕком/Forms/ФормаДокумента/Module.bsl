
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор = Пользователи.ТекущийПользователь();
		Объект.Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН","3309000717");
		Объект.ТипПромо = Перечисления.Промо_ТипПромо.EcomЦеновое;
		Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Создан ; 
		ЗаполнитьСогласоватьПриСоздании(); 
	КонецЕсли;
	Если Не Объект.Ссылка.Пустая() Тогда
		ПроверитьДоступность();
	КонецЕсли;
	 
	ВидимостьПолей();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуруНаСервере() 
	Объект.НоменклатураПромо.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
	               |	НоменклатураКонтрагентов.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	               |	НоменклатураКонтрагентов.Упаковка.Числитель КАК УпаковкаЧислитель,
	               |	НоменклатураКонтрагентов.Ссылка КАК Ссылка,
	               |	НоменклатураКонтрагентов.Номенклатура.Марка КАК НоменклатураМарка
	               |ИЗ
	               |	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	               |ГДЕ
	               |	НоменклатураКонтрагентов.ПометкаУдаления = &ПометкаУдаления
	               |	И НоменклатураКонтрагентов.Недействителен = &Недействителен
				   |    И НоменклатураКонтрагентов.Владелец = &Владелец";
	Если Объект.Партнер <> Справочники.Партнеры.ПустаяСсылка() Тогда
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Недействителен",Ложь);
		Запрос.УстановитьПараметр("Владелец",Объект.Партнер);

		Рез = Запрос.Выполнить().Выбрать();  
		
		Пока Рез.Следующий() Цикл
			Т = Объект.НоменклатураПромо.Добавить();
			Т.Бренд = Рез.НоменклатураМарка;
			Т.НоменклатураПартнера = Рез.Ссылка;
			Т.Номенклатура = Рез.Номенклатура;
			Т.sku = Рез.ИдентификаторНоменклатуры; 
			Если Рез.Номенклатура.КоэффициентЕдиницыДляОтчетов > 1 Тогда
				КолШтРасчет = 1; 
			Иначе
				КолШтРасчет = Рез.УпаковкаЧислитель;
			КонецЕсли;
			
			Т.КолШтРасчет = КолШтРасчет; 
			КолШт =  Рез.УпаковкаЧислитель;
			Т.КолШт = Рез.УпаковкаЧислитель; 
			
			//Прайс E-com 2023
			Таб =  ТаблицаПрайс(Объект.Соглашение);
			НайденнаяСтрока = Таб.Найти( Рез.Номенклатура );
			Если НайденнаяСтрока <> Неопределено Тогда
				Если КолШтРасчет = КолШт Тогда  
					Т.ЦенаЗаШт = НайденнаяСтрока.Цена;
					Т.ТекущаяЦена = КолШтРасчет * НайденнаяСтрока.Цена; 
				Иначе
					Т.ТекущаяЦена = НайденнаяСтрока.Цена;
					Попытка
						Т.ЦенаЗаШт = НайденнаяСтрока.Цена/КолШт;
					Исключение
						Т.ЦенаЗаШт = 0 ;
					КонецПопытки;
				КонецЕсли;				
			ИНаче  
				Т.ТекущаяЦена = 0;
				Сообщить("Для Номенклатуры " + Строка(Рез.Номенклатура) + " не заполнена цена");
			КонецЕсли; 
			
			//Полная себестоимость для канала Ecom
			ТабСеб =  ТаблицаПрайсСебестоимость();
			НайденнаяСтрокаСеб = ТабСеб.Найти( Рез.Номенклатура );
			Если НайденнаяСтрокаСеб <> Неопределено Тогда 
				Если КолШтРасчет = КолШт Тогда 
					Т.СебестоимостьШт = НайденнаяСтрокаСеб.Цена ; 
					Т.СебестоимостьSKU = Окр((НайденнаяСтрокаСеб.Цена*Т.КолШт)+(НайденнаяСтрокаСеб.Цена*Т.КолШт*Рез.Номенклатура.СтавкаНДС.Ставка/100),2); 
				Иначе
					
					Попытка
						Т.СебестоимостьSKU = НайденнаяСтрокаСеб.Цена + (НайденнаяСтрокаСеб.Цена*Рез.Номенклатура.СтавкаНДС.Ставка/100);
						Т.СебестоимостьШт = НайденнаяСтрокаСеб.Цена/КолШт;
					Исключение  
						Т.СебестоимостьШт = 0;
						Т.СебестоимостьSKU =0;
					КонецПопытки;
				КонецЕсли;	
			Иначе  
				Т.СебестоимостьШт = 0;
			КонецЕсли; 
			//расчет			
			Т.Скидка = 0;
			Т.ЦенаСНдсSku = 0;
			Т.ЦенаСНдсШт = 0;
			//Озон 
			
			//ВБ
			
			//Яндекс
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Прайс E-com 2023
&НаСервере
Функция ТаблицаПрайс(Согл)
	Запрос = Новый Запрос; 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	               |ГДЕ
	               |	ЦеныНоменклатурыСрезПоследних.ВидЦены.Ссылка = &ВидЦены";  
	
	Запрос.УстановитьПараметр("ВидЦены",Справочники.ВидыЦен.НайтиПоНаименованию("Прайс E-com 2023")); 
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  	
	Возврат ТабЗнач;
	
КонецФункции

//Полная себестоимость для канала Ecom
&НаСервере
Функция ТаблицаПрайсСебестоимость()
	Запрос = Новый Запрос; 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	               |ГДЕ
	               |	ЦеныНоменклатурыСрезПоследних.ВидЦены.Ссылка = &ВидЦены";  
	
	Запрос.УстановитьПараметр("ВидЦены",Справочники.ВидыЦен.НайтиПоНаименованию("Полная себестоимость для канала Ecom")); 
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);  	
	Возврат ТабЗнач;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьНоменклатуру(Команда)
	ЗаполнитьНоменклатуруНаСервере();
КонецПроцедуры

&НаСервере
Процедура  ДоступностьПолей()
	Если Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование Тогда
		ЭтаФорма.Элементы.Расчет.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура  ВидимостьПолей()
	Если Объект.Партнер.Наименование = "Озон" Тогда
    	ЭтаФорма.Элементы.ГруппаОзон.Видимость = Истина;
		ЭтаФорма.Элементы.ИмпортОзон.Видимость = Истина;
		
	ИначеЕсли Объект.Партнер.Наименование = "Вайлдберриз" Тогда
    	ЭтаФорма.Элементы.ГруппаВБ.Видимость = Истина;
	ИначеЕсли Объект.Партнер.Наименование = "ЯНДЕКС ООО" Тогда
    	ЭтаФорма.Элементы.ГруппаЯМ.Видимость = Истина;
	Иначе 
		Сообщить("Документ расчитан только для Озон, ВБ, ЯМ")
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыВыбораСоглашения = ПродажиКлиент.ПараметрыНачалаВыбораСоглашенияСКлиентом();
	
	ПараметрыВыбораСоглашения.Элемент                     = Элемент;
	ПараметрыВыбораСоглашения.Партнер                     = Объект.Партнер;
	ПараметрыВыбораСоглашения.Документ                    = Объект.Соглашение;
	ПараметрыВыбораСоглашения.ДатаДокумента               = Объект.Дата;
	ПараметрыВыбораСоглашения.ДанныеФормыСтруктура        = Объект;
	
	// ЭлектронноеВзаимодействие.СервисEDI	
	Если Не РедактированиеРеквизитовEDIКлиентСервер.РеквизитДоступенДляРедактирования(ЭтотОбъект, "Поставщик") Тогда
		ПараметрыВыбораСоглашения.Организация = Объект.Организация;
	КонецЕсли;
	
	Если Не РедактированиеРеквизитовEDIКлиентСервер.РеквизитДоступенДляРедактирования(ЭтотОбъект, "Покупатель") Тогда
		ПараметрыВыбораСоглашения.Контрагент = Объект.Контрагент;
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.СервисEDI
	
	ПродажиКлиент.НачалоВыбораСоглашенияСКлиентом(ПараметрыВыбораСоглашения, СтандартнаяОбработка);
	
КонецПроцедуры


//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	Если Объект.Ссылка.Пустая() Тогда
//		Объект.Автор = Пользователи.ТекущийПользователь(); 
//		Объект.Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН","3309000717"); 
//		Объект.Статус = "Создан";
//		
//		Если Объект.ТипПромо = "" Тогда
//			Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое;
//			ЗаполнитьФактПромо();
//			ЗаполнитьПоказателиНеЦен();
//		КонецЕсли;
//        ЗаполнитьСогласоватьПриСоздании();

//		ИзменитьДоступностьДат();
//			
//	КонецЕсли;
//	
//	Если Не Объект.Ссылка.Пустая() Тогда
//		ПроверитьДоступность();
//	КонецЕсли;
//	
//	ЗаполнитьСписокНП(Справочники.Партнеры.ПустаяСсылка()); 
//	
//		
//КонецПроцедуры  

 &НаСервере
 Процедура ЗаполнитьСогласоватьПриСоздании() 
	 Объект.Согласовать.Очистить();
	
	
	П1 = Справочники.Пользователи.НайтиПоНаименованию("Пьянов Руслан Михайлович");
	П2 = Справочники.Пользователи.НайтиПоНаименованию("Абрамова Жулдуз Жасхайратовна");
	П3 = Справочники.Пользователи.НайтиПоНаименованию("Борунов Даниил Леонидович");
	П4 = Справочники.Пользователи.НайтиПоНаименованию("Буланова Юлия Евгеньевна");
	
	Попытка
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = П1  ;
		Т.ЭлПочта = П1.КонтактнаяИнформация[0].АдресЭП;
		//Т.ЭлПочта = "igor.potemkin33@yandex.ru" ;
	Исключение 
		
	КонецПопытки;
	
	Попытка
		Т = Объект.Согласовать.Добавить();
		Т.Пользователь = П2  ;
		Т.ЭлПочта = П2.КонтактнаяИнформация[0].АдресЭП;
		//Т.ЭлПочта = "igor.potemkin33@yandex.ru" ;

	Исключение 
		
	КонецПопытки;
	
	
//	Попытка
//		Т = Объект.Согласовать.Добавить();
//		Т.Пользователь = П3  ;
////		Т.ЭлПочта = П3.КонтактнаяИнформация[0].АдресЭП;
//		Т.ЭлПочта = "igor.potemkin33@yandex.ru" ;

//	Исключение  
//		
//	КонецПопытки;

//	Попытка
//		Т = Объект.Согласовать.Добавить();
//		Т.Пользователь = П4  ;
////		Т.ЭлПочта = П4.КонтактнаяИнформация[0].АдресЭП;
//		Т.ЭлПочта = "igor.potemkin33@yandex.ru" ;

//	Исключение  
//		
//	КонецПопытки;
	
 		 
 КонецПроцедуры
// 
&НаСервере
Процедура ПроверитьДоступность()
	ТекПользователь = Пользователи.ТекущийПользователь();
	//проверяем статус документа  СтатусПромоДокумента
	Если Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован ИЛИ 
		Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование ИЛИ
		Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НеСогласован Тогда//ИЛИ  
		ЭтаФорма.Элементы.Старт.Доступность = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль1.ТолькоПросмотр = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;
		ЭтаФорма.Элементы.Файлы1.ИзменятьСоставСтрок = Ложь;
	КонецЕсли;
	
	
	Если Объект.Автор <> ТекПользователь Тогда 
			ЭтаФорма.Элементы.Согласовать.Доступность = Ложь;
			ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;

		Для Каждого стр из Объект.Согласовать Цикл
			Если стр.Пользователь = ТекПользователь Тогда
			ЭтаФорма.Элементы.Согласовать.Доступность = Истина;
			ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Истина;
			ЭтаФорма.Элементы.Записать.Доступность = Ложь;
			ЭтаФорма.Элементы.Провести.Доступность = Ложь;
			ЭтаФорма.Элементы.Закрыть.Видимость = Истина; 
			Прервать;
		КонецЕсли; 
		КонецЦикла;
	КонецЕсли;

	Если Объект.Автор = ТекПользователь Тогда
  		ЭтаФорма.Элементы.Согласовать.Доступность = Истина ;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;  
		Если Объект.НоменклатураПромо.Количество()>=1 Тогда
			ЭтаФорма.Элементы.ОчиститьПодбор.Доступность = Истина;	
		КонецЕсли;
		
	КонецЕсли;

	Если Объект.Автор = ТекПользователь И (Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Создан ИЛИ Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.План) Тогда
		
		ЭтаФорма.Элементы.ГруппаКонтроль1.ТолькоПросмотр = Ложь;

		ЭтаФорма.Элементы.Согласовать.Доступность = Истина ;
		ЭтаФорма.Элементы.Согласовать.ТолькоПросмотр = Ложь ;
		
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.ТолькоПросмотр = Ложь;
		
		Если Объект.НоменклатураПромо.Количество()>=1 Тогда
			ЭтаФорма.Элементы.ОчиститьПодбор.Доступность = Истина;	
		КонецЕсли;
		
	КонецЕсли;
	
	
	
	Если Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован ИЛИ 
		
		Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НеСогласован Тогда//ИЛИ  
		
		ЭтаФорма.Элементы.Статус.Доступность = Ложь; 
		ЭтаФорма.Элементы.Старт.Доступность = Ложь;
		ЭтаФорма.Элементы.ГруппаКонтроль1.ТолькоПросмотр = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Ложь;
		ЭтаФорма.Элементы.Файлы1.ИзменятьСоставСтрок = Ложь;
	КонецЕсли;

	Если ТекПользователь.Наименование = "smartbar" ИЛИ ТекПользователь.Наименование = "Пьянов Руслан Михайлович" Тогда
		ЭтаФорма.Элементы.Пересчитать.Видимость = Истина; 
		ЭтаФорма.Элементы.Согласовать.Доступность = Истина;
		ЭтаФорма.Элементы.ГруппаКонтроль2.Доступность = Истина;
		ЭтаФорма.Элементы.ГруппаАдмин.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

//&НаСервере
//Процедура ЗаполнитьПоказателиНеЦен()
//	Т = Объект.Показатели.Добавить();
//	Т.Показатель = "CPC (цена контакта)";
//	Т.Значение = ""; 
//	Т = Объект.Показатели.Добавить();
//	Т.Показатель = "CTR (процент соотношения числа кликов к числу показов)";
//	Т.Значение = "";               
//	Т = Объект.Показатели.Добавить();
//	Т.Показатель = "OTS (охват аудитории)";
//	Т.Значение = "";                  
//	Т = Объект.Показатели.Добавить();
//	Т.Показатель = "Цель промо (пишем вручную в окошке для заполнения)";
//	Т.Значение = "";                  
//	Т = Объект.Показатели.Добавить();
//	Т.Показатель = "Плановый срок окупаемости промо (данные по итогам расчета трейд-маркетолога)";
//	Т.Значение = "";                  
//	Т = Объект.Показатели.Добавить();
//	Т.Показатель = "Стадия ЖЦТ (стадия жизненного цикла каждого товара - вывод на рынок, рост, зрелость, упадок)";
//	Т.Значение = ""; 
//	//Т = Объект.Показатели.Добавить();
//	//Т.Показатель = "Поле комментария для дополнительной информации (здесь описываем особенности которые входят в промо, например, таргет входит или же есть другие дополнительные опции входящие в промо)";
//	//Т.Значение = "";
//	
//КонецПроцедуры


//&НаСервере
//Процедура ЗаполнитьФактПромо()
//	Т = Объект.ТЧФактПромо.Добавить();
//	Т.Значение = "Фактический прирост товарооборота";
//	Т.Показатель = 0; 
//	Т = Объект.ТЧФактПромо.Добавить();
//	Т.Значение = "Доля затрат в дополнительном товарообороте";
//	Т.Показатель = 0;                 
//	Т = Объект.ТЧФактПромо.Добавить();
//	Т.Значение = "Отклонение от нормы";
//	Т.Показатель = 0;                  
//	Т = Объект.ТЧФактПромо.Добавить();
//	Т.Значение = "Кол-во продукции, отгруженное во время акции";
//	Т.Показатель = 0;                  
//	Т = Объект.ТЧФактПромо.Добавить();
//	Т.Значение = "Вложения в акцию";
//	Т.Показатель = 0;                  
//	Т = Объект.ТЧФактПромо.Добавить();
//	Т.Значение = "Возврат на инвестиции";
//	Т.Показатель = 0;
//КонецПроцедуры


//&НаСервере
//Функция ПроверкаПриЗаписи() 
//	
//	Возврат Истина;	
//КонецФункции

//&НаКлиенте
//Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
//	Если НЕ ПроверкаПриЗаписи() Тогда
//		Отказ = Истина;
//	КонецЕсли;
//	
//КонецПроцедуры



&НаКлиенте
Процедура Добавить(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		Предупреждение("Документ должен быть записан!");
	Иначе
		ПроверитьСоздатьКаталогЗагрузкаФайлов(Объект.Номер);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура  ПроверитьСоздатьКаталогЗагрузкаФайлов(Номер)
	КаталогНаДиске = Новый Файл("S:\PROMO\"+Номер);
	Если НЕ КаталогНаДиске.Существует() Тогда
		СоздатьКаталог(Строка(КаталогНаДиске.ПолноеИмя));
	КонецЕсли;  
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытия.ПолноеИмяФайла = "";
	//Фильтр = "Текст, *.txt|*.txt";
	//ДиалогОткрытия.Фильтр = Фильтр;
	ДиалогОткрытия.МножественныйВыбор = Истина;
	ДиалогОткрытия.Заголовок = "Выберите файлы"; 

	Если ДиалогОткрытия.Выбрать() Тогда
		МассивВыбранныхФайлов = ДиалогОткрытия.ВыбранныеФайлы;
		Для Каждого ИмяВыбранногоФайла Из МассивВыбранныхФайлов Цикл
			ВыбранныйФайл = Новый Файл(ИмяВыбранногоФайла);
			ПутьКФайлуПриемнику = Строка(КаталогНаДиске.ПолноеИмя) + "\"+ВыбранныйФайл.Имя;
			Попытка
				УдалитьФайлы(Строка(ПутьКФайлуПриемнику));
			Исключение

			КонецПопытки;
			КопироватьФайл(ИмяВыбранногоФайла, ПутьКФайлуПриемнику); 
		КонецЦикла; 
		ЗаполнитьФайлы(Строка(КаталогНаДиске.ПолноеИмя));
	Иначе
		Предупреждение("Нет выбранных файлов!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФайлы(ПутьККаталогу)
	Мас = Новый Массив;
	ФайлыПромо = Новый Массив;
    ФайлыПромо = НайтиФайлы(ПутьККаталогу+"\","*");
	Для Каждого ФайлXLS Из ФайлыПромо Цикл  
		Мас.Добавить(ФайлXLS.Имя);
	КонецЦикла;
	ЗаполнитьСписокФайлов(ПутьККаталогу,Мас);
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСписокФайлов(Путь,Мас)
	Объект.Файлы.Очистить();
	Для сч = 0 по Мас.Количество()-1 Цикл
		Т = Объект.Файлы.Добавить();
		Т.Файл = Мас[сч];
		Т.Путь = Путь+"\"+Мас[сч];
	КонецЦикла;
	
КонецПроцедуры


//&НаКлиенте
//Процедура Файлы1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
//	ЗапуститьПриложение(Элемент.ТекущиеДанные.Путь);
//КонецПроцедуры

//&НаКлиенте
//Процедура Файлы1ПередУдалением(Элемент, Отказ)
//	
//	Попытка
//		УдалитьФайлы(Элемент.ТекущиеДанные.Путь); 
//	Исключение
//		Сообщить(ОписаниеОшибки());
//	КонецПопытки;  
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ВыбратьНастройки(Команда)
//	Отбор = Новый Структура("Автор",  Объект.Автор );
//	
//	ПараметрыФормы = Новый Структура;
//	ПараметрыФормы.Вставить("Отбор", Отбор);
//	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
//	//ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНоменклатураПартнера", ЭтотОбъект);
//	
//	//ОткрытьФорму("Справочник.НоменклатураКонтрагентов.ФормаВыбора", ПараметрыФормы, ОписаниеОповещения );
//ОткрытьФорму("Справочник.СХК_НастройкаПромо.ФормаВыбора", ПараметрыФормы, ЭтотОбъект,,,,
//		Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыНастройкиПромо", ЭтотОбъект));

//КонецПроцедуры

//&НаКлиенте
//Процедура ОбработатьЗакрытиеФормыНастройкиПромо(Значение, ДопПараметры) Экспорт
//	ЗаполнитьСогласовать(Значение);		
//КонецПроцедуры


//&НаСервере
//Процедура ЗаполнитьСогласовать(Сп)
//	Объект.Согласовать.Очистить(); 
//	Попытка
//	Для Каждого стр из Сп.СписокПользователей Цикл
//		Т = Объект.Согласовать.Добавить();
//		Т.Пользователь = стр.СогласующееЛицо;
//		Т.ЭлПочта = стр.АдресЭл;
//	КонецЦикла;
//Исключение
//КонецПопытки;

//	
//КонецПроцедуры

////&НаКлиенте
////Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт

////   //Дополнительные условия если необходимо
////   //Если ДопПараметры = "ПодборРеализации" тогда

////    Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
////        Возврат;
////    КонецЕсли;
////     
////    МассивДокументов = Значение ///Если Множественный Выбор - то вернется массив 
////    

////    //КонецЕсли;
////КонецПроцедуры

&НаСервере
Процедура ПартнерПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.ПометкаУдаления = &ПометкаУдаления
	               |	И Контрагенты.Партнер = &Партнер"; 
	
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер); 
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);
	//Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество()>=1 Тогда
		Объект.ТЧКонтрагенты.Очистить();
		Пока Рез.Следующий() Цикл
			Т = Объект.ТЧКонтрагенты.Добавить();
			Т.Контрагенты = Рез.Ссылка;
			
		КонецЦикла;
	Иначе
		Сообщить("Контрагент не определен, необходимо указать в ручную");
	КонецЕсли;
	Объект.Соглашение = Справочники.СоглашенияСКлиентами.ПустаяСсылка(); 
	Объект.НоменклатураПромо.Очистить();
	
	//Видимость Групп
	//Если Объект.Партнер.Наименование = "Озон" Тогда
	//	ЭтаФорма.Элементы.ГруппаОзон.Видимость = Истина;
	//КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	ПартнерПриИзмененииНаСервере();  
	ВидимостьПолей();
КонецПроцедуры

//&НаСервере
//Процедура НоменклатураПромоСкидкаПриИзмененииНаСервере()   
//	Попытка
//		Скидка = Объект.НоменклатураПромо[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Скидка;
//		ТекущаяЦена = Объект.НоменклатураПромо[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].ТекущаяЦена;
//		ЦенаЗаШт = Объект.НоменклатураПромо[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].ЦенаЗаШт; 
//		КолШт = Объект.НоменклатураПромо[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].КолШт;
//		Попытка 
//			Объект.НоменклатураПромо[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].ЦенаСНдсSku =ТекущаяЦена -( ТекущаяЦена * Скидка / 100 );
//			Объект.НоменклатураПромо[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].ЦенаСНдсШт = (ЦенаЗаШт -( ЦенаЗаШт * Скидка / 100 ));
//			РасчетПоказателей(ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока) ; 
//			
//		Исключение
//			Сообщить("Заполнены не все показатели");
//		КонецПопытки 
//	Исключение
//	КонецПопытки 

//КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПромоСкидкаПриИзменении(Элемент) 
	//Стр = Элементы.НоменклатураПромо.ТекущиеДанные;
	Попытка
		Скидка = Элементы.НоменклатураПромо.ТекущиеДанные.Скидка;
		ТекущаяЦена = Элементы.НоменклатураПромо.ТекущиеДанные.ТекущаяЦена;
		ЦенаЗаШт = Элементы.НоменклатураПромо.ТекущиеДанные.ЦенаЗаШт; 
		КолШт = Элементы.НоменклатураПромо.ТекущиеДанные.КолШт;
		Попытка 
			Элементы.НоменклатураПромо.ТекущиеДанные.ЦенаСНдсSku =ТекущаяЦена -( ТекущаяЦена * Скидка / 100 );
			Элементы.НоменклатураПромо.ТекущиеДанные.ЦенаСНдсШт = (ЦенаЗаШт -( ЦенаЗаШт * Скидка / 100 ));
			//РасчетПоказателей(ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока) ; 
			
		Исключение
			Сообщить("Заполнены не все показатели");
		КонецПопытки 
	Исключение
	КонецПопытки 
	
	//НоменклатураПромоСкидкаПриИзмененииНаСервере();
КонецПроцедуры

//&НаСервере
//Процедура РасчетПоказателей(Тстрока)
//	
//		ОбъемПромоРуб = Объект.НоменклатураПромо[Тстрока].ОбъемПромоШт * Объект.НоменклатураПромо[Тстрока].ЦенаСНдсSku;
//		Объект.НоменклатураПромо[Тстрока].ОбъемПромоРуб = ОбъемПромоРуб;//ОбъемПромоРуб; //n

//		СебестоимостьПромо = 	Объект.НоменклатураПромо[Тстрока].ОбъемПромоШт * Объект.НоменклатураПромо[Тстрока].СебестоимостьSKU;
//		Объект.НоменклатураПромо[Тстрока].СебестоимостьПромо = СебестоимостьПромо;

//		ПрибыльОтПолнойСС = ОбъемПромоРуб - СебестоимостьПромо; //w
//		Объект.НоменклатураПромо[Тстрока].ПрибыльОтПолнойСС =ПрибыльОтПолнойСС;
//		
//		ROI = Окр(ПрибыльОтПолнойСС / ОбъемПромоРуб,2);
//		Объект.НоменклатураПромо[Тстрока].ROI =ROI; 
//		
//	Попытка	 
//			ОкупаемостьМес = (-1) * ПрибыльОтПолнойСС /ОбъемПромоРуб;
//			Если ОкупаемостьМес < 0  Тогда
//				Объект.НоменклатураПромо[Тстрока].ОкупаемостьМес = "Окупается в 1 доставку";
//			Иначе
//				Объект.НоменклатураПромо[Тстрока].ОкупаемостьМес = Окр(ОкупаемостьМес - 1,2 ); 
//			КонецЕсли;
//	Исключение
//	КонецПопытки;  
//	
//	//Расчет Итогов    
//    РасчетИтогов();
//	
//КонецПроцедуры 


&НаСервере
Процедура РасчетИтогов()
	Попытка
		Объект.ROI = Окр(Объект.НоменклатураПромо.Итог("ПрибыльОтПолнойСС") / Объект.НоменклатураПромо.Итог("ОбъемПромоРуб"),2);
		
		Объект.РентабельностьМаркетинг = Окр(Объект.НоменклатураПромо.Итог("РентабельностьМаркетинг")/Объект.НоменклатураПромо.Количество(),2);
		Объект.РентабельностьБезМаркетинг = Окр(Объект.НоменклатураПромо.Итог("РентабельностьМаркетинг")/Объект.НоменклатураПромо.Количество(),2);
		
		Объект.ПрибыльСС = Окр(Объект.НоменклатураПромо.Итог("ОбъемПромоРуб") - Объект.НоменклатураПромо.Итог("СебестоимостьПромо"),2);
		
		ОкупаемостьМес = (-1) * Объект.НоменклатураПромо.Итог("ПрибыльОтПолнойСС") /Объект.НоменклатураПромо.Итог("ОбъемПромоРуб");;
		Если ОкупаемостьМес < 0  Тогда
			Объект.ОкупаемостьМесяцев = "Окупается в 1 доставку";
		Иначе
			Объект.ОкупаемостьМесяцев = Строка(Окр(ОкупаемостьМес - 1,2 ))+ Строка(" месяцев.");; 
		КонецЕсли;
	Исключение
	КонецПопытки  
	
КонецПроцедуры



//&НаСервере
//Процедура НоменклатураПромоОбъемПромоШтПриИзмененииНаСервере()
//	РасчетПоказателей(ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока) ;
//КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПромоОбъемПромоШтПриИзменении(Элемент)
	//НоменклатураПромоОбъемПромоШтПриИзмененииНаСервере();	
	Попытка
		ОбъемПромоРуб = Элементы.НоменклатураПромо.ТекущиеДанные.ОбъемПромоШт * Элементы.НоменклатураПромо.ТекущиеДанные.ЦенаСНдсSku;
		Элементы.НоменклатураПромо.ТекущиеДанные.ОбъемПромоРуб = ОбъемПромоРуб;//ОбъемПромоРуб; //n

		СебестоимостьПромо = 	Элементы.НоменклатураПромо.ТекущиеДанные.ОбъемПромоШт * Элементы.НоменклатураПромо.ТекущиеДанные.СебестоимостьSKU;
		Элементы.НоменклатураПромо.ТекущиеДанные.СебестоимостьПромо = СебестоимостьПромо;

		ПрибыльОтПолнойСС = ОбъемПромоРуб - СебестоимостьПромо; //w
		Элементы.НоменклатураПромо.ТекущиеДанные.ПрибыльОтПолнойСС =ПрибыльОтПолнойСС;
		
		ROI = Окр(ПрибыльОтПолнойСС / ОбъемПромоРуб,2);
		Элементы.НоменклатураПромо.ТекущиеДанные.ROI =ROI; 

		
		ОкупаемостьМес = (-1) * ПрибыльОтПолнойСС /ОбъемПромоРуб;

		Если ОкупаемостьМес < 0  Тогда
			Элементы.НоменклатураПромо.ТекущиеДанные.ОкупаемостьМес = "Окупается в 1 доставку";
		Иначе
			Элементы.НоменклатураПромо.ТекущиеДанные.ОкупаемостьМес = Окр(ОкупаемостьМес - 1,2 ); 
		КонецЕсли;

	Исключение

	КонецПопытки;  
	
	//Расчет Итогов    
    РасчетИтогов();
	
КонецПроцедуры


&НаКлиенте
Процедура НоменклатураПромоЦенаСНдсSkuПриИзменении(Элемент)
	//НоменклатураПромоЦенаСНдсSkuПриИзмененииНаСервере(); 
	ЦенаСНдсSku = Элементы.НоменклатураПромо.ТекущиеДанные.ЦенаСНдсSku;
	ТекущаяЦена = Элементы.НоменклатураПромо.ТекущиеДанные.ТекущаяЦена; 
	Скидка = 100-(ЦенаСНдсSku*100/ТекущаяЦена);
	ЦенаЗаШт = Элементы.НоменклатураПромо.ТекущиеДанные.ЦенаЗаШт; 
	//КолШт = Объект.НоменклатураПромо[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].КолШт;
	Попытка 
		Элементы.НоменклатураПромо.ТекущиеДанные.Скидка = Скидка;
		Элементы.НоменклатураПромо.ТекущиеДанные.ЦенаСНдсШт = (ЦенаЗаШт -( ЦенаЗаШт * Скидка / 100 ));
	Исключение
		Сообщить("Заполнены не все показатели");
	КонецПопытки
	
КонецПроцедуры

&НаСервере
Процедура НоменклатураПромоПриИзмененииНаСервере()
	//Сообщить("123");
    РасчетНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПромоПриИзменении(Элемент)
	НоменклатураПромоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция ЗаполнитьТЧСемьяНаСервере()
	ТаблДокум = Новый  ТабличныйДокумент;
	ТаблДокум.Очистить(); 
    Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СХК_ИмпортСемья");

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка"); 
	ТаблДокум.Вывести(ОбластьШапка); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
	               |	НоменклатураКонтрагентов.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	               |	НоменклатураКонтрагентов.Упаковка.Числитель КАК УпаковкаЧислитель,
	               |	НоменклатураКонтрагентов.Ссылка КАК Ссылка,
	               |	НоменклатураКонтрагентов.Номенклатура.Марка КАК НоменклатураМарка,
	               |	НоменклатураКонтрагентов.СХК_ПромоПродСемья КАК СХК_ПромоПродСемья
	               |ИЗ
	               |	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	               |ГДЕ
	               |	НоменклатураКонтрагентов.ПометкаУдаления = &ПометкаУдаления
	               |	И НоменклатураКонтрагентов.Недействителен = &Недействителен
				   |    И НоменклатураКонтрагентов.Владелец = &Владелец";
	
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Недействителен",Ложь);
		Запрос.УстановитьПараметр("Владелец",Объект.Партнер); 
		
	Рез = Запрос.Выполнить().Выбрать();	
	
	Пока Рез.Следующий() Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("Товары");
		ОбластьСтрока.Параметры.sku = Рез.ИдентификаторНоменклатуры; 
		ОбластьСтрока.Параметры.Наименование = Рез.Ссылка;
		ОбластьСтрока.Параметры.Семья = Рез.СХК_ПромоПродСемья;
		ТаблДокум.Вывести(ОбластьСтрока);
	КонецЦикла;
	ТаблДокум.ФиксацияСверху = 1;
	
	Возврат ТаблДокум;

КонецФункции

&НаКлиенте
Процедура ЗаполнитьТЧСемья(Команда)
	ТЧСемья = ЗаполнитьТЧСемьяНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТчСемьяНаСервере()
	М = Новый Массив;
	
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТЧСемья.Область(1, 1, ТЧСемья.ВысотаТаблицы, 3));
	Построитель.Выполнить();
	Результат = Построитель.Результат.Выгрузить();	
	
	Т = НоменклатураКонтрагентов();
	
	Для Каждого стр из Результат Цикл
		
		Если стр.SKU <> "" Тогда
			НайденнаяСтрока = Т.Найти( стр.SKU );
			Если НайденнаяСтрока <> Неопределено Тогда
				спр = НайденнаяСтрока.Ссылка.ПолучитьОбъект();	  
				спр.СХК_ПромоПродСемья = стр.Семья ; 
				спр.Записать(); 
			Иначе 
				Сообщить("Не удалось найти номенклатуру " + Строка(стр.SKU) );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТчСемья(Команда)
	ЗагрузитьТчСемьяНаСервере();
КонецПроцедуры


&НаСервере
Функция НоменклатураКонтрагентов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
	               |	НоменклатураКонтрагентов.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	               |	НоменклатураКонтрагентов.Упаковка.Числитель КАК УпаковкаЧислитель,
	               |	НоменклатураКонтрагентов.Ссылка КАК Ссылка,
	               |	НоменклатураКонтрагентов.Номенклатура.Марка КАК НоменклатураМарка,
	               |	НоменклатураКонтрагентов.СХК_ПромоПродСемья КАК СХК_ПромоПродСемья
	               |ИЗ
	               |	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	               |ГДЕ
	               |	НоменклатураКонтрагентов.ПометкаУдаления = &ПометкаУдаления
	               |	И НоменклатураКонтрагентов.Недействителен = &Недействителен
				   |    И НоменклатураКонтрагентов.Владелец = &Владелец";
	
		Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
		Запрос.УстановитьПараметр("Недействителен",Ложь);
		Запрос.УстановитьПараметр("Владелец",Объект.Партнер); 
		
		Результат = Запрос.Выполнить();
		СпособОбхода = ОбходРезультатаЗапроса.Прямой;
		ТабЗнач = Результат.Выгрузить(СпособОбхода);   
		
		Возврат ТабЗнач;
КонецФункции

&НаСервере
Процедура РасчетНаСервере()
	Если Объект.Партнер.Наименование = "Озон" Тогда
		РасчетОзон();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Расчет(Команда)
	РасчетНаСервере();
КонецПроцедуры

&НаСервере
процедура РасчетОзон()
	Маркетинг = 1.67;
	КомиссияЗлаки = 5;
	КомиссияПротеин = 9;
	МиляЗлаки = 5.5;
	МиляПротеин = 9;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	СХК_ЛогистикаОзон.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.СХК_ЛогистикаОзон КАК СХК_ЛогистикаОзон
	               |ГДЕ
	               |	СХК_ЛогистикаОзон.ПометкаУдаления = &ПометкаУдаления
	               |	И СХК_ЛогистикаОзон.ДействуетС <= &ДействуетС
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СХК_ЛогистикаОзон.ДействуетС УБЫВ"; 
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("ДействуетС",Объект.Дата);
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);   

	Для Каждого стр из Объект.НоменклатураПромо Цикл
		Если стр.Скидка > 0 Тогда 
			Попытка
			//СтруктураОтбора = Новый Структура("Семья",стр.НоменклатураПартнера.СХК_ПромоПродСемья);// задаем условия 
				НайденнаяСтрока = ТабЗнач[0].Ссылка.ТЧКомиссии.Найти(стр.НоменклатураПартнера.СХК_ПромоПродСемья);
				Если НайденнаяСтрока <> Неопределено Тогда
					Комиссия = 	НайденнаяСтрока.Ставка;   
					стр.Комиссия =  стр.ЦенаСНдсSku * Комиссия / 100; 
					Логистика = Окр(стр.НоменклатураПартнера.Упаковка.Объем*1000,3); 
					
					Для Каждого стрТ из ТабЗнач[0].Ссылка.ТЧОбъем Цикл
						Если Логистика <= стрТ.ОбъемОт Тогда 
							стр.Логистика = стрТ.Ставка;
							стр.Локализация =  стрТ.Ставка - (стрТ.Ставка*20/100);
							Прервать;	
						КонецЕсли
					КонецЦикла; 
				Иначе 
					Сообщить("");
				КонецЕсли;

				НайденнаяСтрока = ТабЗнач[0].Ссылка.ТЧПоследняяМиля.Найти(стр.НоменклатураПартнера.СХК_ПромоПродСемья);
				Если НайденнаяСтрока <> Неопределено Тогда
					//СтавкаПоследняяМиля = 	НайденнаяСтрока.Ставка;   
					ПМ =  НайденнаяСтрока.Ставка * стр.ЦенаСНдсSku/100;
					Если ПМ<= НайденнаяСтрока.НеБолее Тогда
						стр.ПоследняяМиля = НайденнаяСтрока.Ставка ;
					Иначе
						стр.ПоследняяМиля = ПМ;
					КонецЕсли;
				Иначе 
					Сообщить("");
				КонецЕсли;
				стр.Маркетинг =  ТабЗнач[0].Ссылка.Маркетинг * стр.КолШт; 
				стр.РентабельностьМаркетинг = ((стр.ЦенаСНдсSku - стр.СебестоимостьSKU - стр.Комиссия-стр.Логистика-стр.ПоследняяМиля-стр.Маркетинг)/стр.ЦенаСНдсSku)*100; 
				стр.РентабельностьБезМаркетинг = ((стр.ЦенаСНдсSku - стр.СебестоимостьSKU - стр.Комиссия-стр.Логистика-стр.ПоследняяМиля)/стр.ЦенаСНдсSku)*100; 
				 
			Исключение  
				
			КонецПопытки
			
					//ПоказатьОшибку("");

			//ТабЗнач[0].Ссылка.ТЧКомиссии[0].Семья
			//Если стр.НоменклатураПартнера.СХК_ПромоПродСемья
			//стр.Комиссия = "";			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


//&НаСервере
//Функция Партнер()
//	Возврат Объект.Партнер.Ссылка;	
//КонецФункции

//&НаСервере
//Функция ТекЦенаНоменклатуры(Ном,Согл) 
//	
//	ТекущаяЦена = 0; 
//	
//	Отбор = Новый Структура;
//	Отбор.Вставить("Номенклатура", ном);
//	НайденноеЗначение = Согл.Товары.НайтиСтроки(Отбор);
//	
//	Если НайденноеЗначение.Количество() >=1 Тогда  
//		ТекущаяЦена = НайденноеЗначение[0].Цена;
//	Иначе

//		Запрос = Новый Запрос; 
//		
//		Запрос.Текст = "ВЫБРАТЬ
//		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
//		|ИЗ
//		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
//		|ГДЕ
//		|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
//		|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены";  
//		
//		Запрос.УстановитьПараметр("ВидЦены",Согл.ВидЦен);
//		Запрос.УстановитьПараметр("Номенклатура",Ном); 
//		
//		Рез = Запрос.Выполнить().Выбрать();  
//		
//		Если Рез.Количество()>=1 Тогда
//			Пока Рез.Следующий() Цикл
//				ТекущаяЦена = Рез.Цена;	
//			КонецЦикла;
//		КонецЕсли;
//	КонецЕсли; 
//	
//	Возврат ТекущаяЦена;
//	
//КонецФункции

//&НаКлиенте
//Процедура СоглашениеПриИзменении(Элемент)
//	СоглашениеПриИзмененииНаСервере();
//КонецПроцедуры

//&НаКлиенте
//Процедура СтатусПриИзменении(Элемент)
//	ИзменитьДоступностьДат() ;
//КонецПроцедуры

//&НаСервере
//Процедура ИзменитьДоступностьДат()
//	Если Объект.Статус = "Создан" Тогда
//		ЭтаФорма.Элементы.ГруппаФактАкции.ТолькоПросмотр = Ложь;
//		ЭтаФорма.Элементы.ГруппаПланАкции.ТолькоПросмотр = Истина;
//	ИначеЕсли Объект.Статус = "План" Тогда
//		ЭтаФорма.Элементы.ГруппаФактАкции.ТолькоПросмотр = Истина;
//		ЭтаФорма.Элементы.ГруппаПланАкции.ТолькоПросмотр = Ложь;
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаСервере
//Процедура ПриОткрытииНаСервере()
//	ВидимостьПромо();
//	ВидимостьМетоды();
//		
//КонецПроцедуры

//&НаСервере
//Процедура ВидимостьМетоды()
//	//Если Объект.МетодыПромо.Количество()>=1 Тогда
//	//	ЭтаФорма.Элементы.ПерезаполнитьМетодПромо.Доступность = Ложь;
//	//Иначе
//	//	ЭтаФорма.Элементы.ПерезаполнитьМетодПромо.Доступность = Истина;
//	//КонецЕсли;
//	
//КонецПроцедуры


//&НаКлиенте
//Процедура ПриОткрытии(Отказ)
//	ПриОткрытииНаСервере();
//КонецПроцедуры

//&НаКлиенте
//Процедура ТипПромоПриИзменении(Элемент)
//	ВидимостьПромо(); 
//	ОчиститьПодборНаСервере(); 
//	ЗаполнитьСогласоватьПриСоздании();
//КонецПроцедуры

// 


//&НаСервере
//Процедура СписокНКВыборНаСервере(НоменклатураПартнера)
//	
//	Отбор = Новый Структура;
//	Отбор.Вставить("НоменклатураПартнера", НоменклатураПартнера);
//	НайденноеЗначение = Объект["НоменклатураПромо"].НайтиСтроки(Отбор);
//	
//	Если НайденноеЗначение.Количество() = 0 Тогда 
//		Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое ИЛИ 
//			Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое Тогда
//			ТН = Объект.НоменклатураПромо.Добавить();
//			ТН.НоменклатураПартнера = НоменклатураПартнера;
//			ТН.Бренд = НоменклатураПартнера.Номенклатура.Марка ;
//			ТН.Номенклатура = НоменклатураПартнера.Номенклатура;
//			ТН.ТекущаяЦена = ТекЦенаНоменклатуры(НоменклатураПартнера.Номенклатура,Объект.Соглашение); 
//			КолТТ = 0;
//			Если НоменклатураПартнера.СХК_Представленность.Количество() >=1 Тогда
//				//Объект.СХК_География.Очистить();
//				Для Каждого стр из НоменклатураПартнера.СХК_Представленность Цикл
//					Т = Объект.СХК_География.Добавить();
//					Т.Направление = стр.Направление;
//					Т.Область = стр.Область;
//					Т.Город = стр.Город;
//					Т.КолТТ = стр.КолТТ;
//					Т.ТипТТ = стр.ТипТТ;
//					КолТТ = КолТТ + стр.КолТТ;
//				КонецЦикла;
//			КонецЕсли;
//			
//			ТН.КолТТ = КолТТ;
//			Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое Тогда 
//				ТН.СебестоимостьОПР = ПолучитьОПР(НоменклатураПартнера.Номенклатура); 
//				ТН.ПолнаяСС = ПолучитьПолнаяСС(НоменклатураПартнера.Номенклатура);
//				ТН.СрокРеализацииПромо = Объект.СрокРПоставки;
//				
//			КонецЕсли;
//		ИначеЕсли Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom ТОгда
//			ТН = Объект.РасчетЕком.Добавить();
//			ТН.НоменклатураПартнера = НоменклатураПартнера;
//			ТН.Бренд = НоменклатураПартнера.Номенклатура.Марка ;
//			ТН.Номенклатура = НоменклатураПартнера.Номенклатура;
//			ТН.ТекущаяЦена = ТекЦенаНоменклатуры(НоменклатураПартнера.Номенклатура,Объект.Соглашение); 
//		КонецЕсли;
//		
//		
//	КонецЕсли;
//	
//КонецПроцедуры


////&НаСервере
////Процедура ЗаполнитьМетодыПромо()  
////	
////	Объект.МетодыПромо.Очистить();
////	
////	Запрос = Новый Запрос;
////	Запрос.Текст = "ВЫБРАТЬ
////	               |	СХК_МетодыПромо.Наименование КАК Наименование,
////	               |	СХК_МетодыПромо.Ссылка КАК Ссылка
////	               |ИЗ
////	               |	Справочник.СХК_МетодыПромо КАК СХК_МетодыПромо
////	               |ГДЕ
////	               |	СХК_МетодыПромо.ТипПромо = &ТипПромо
////	               |	И СХК_МетодыПромо.ПометкаУдаления = &ПометкаУдаления";
////	Запрос.УстановитьПараметр("ТипПромо",Объект.ТипПромо); 
////	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
////	Рез = Запрос.Выполнить().Выбрать(); 
////	Если Рез.Количество()>=1 Тогда
////		Пока Рез.Следующий() Цикл
////			Т = Объект.МетодыПромо.Добавить();
////			Т.НаименованиеМетода = Рез.Ссылка;
////			
////		КонецЦикла;
////	КонецЕсли;
////	
////КонецПроцедуры 	

//&НаСервере
//Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
//		Если Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован Тогда
//				Отказ = Истина;	
//		КонецЕсли;	

//КонецПроцедуры

//&НаСервере
//Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) 

//	
//КонецПроцедуры

//&НаСервере
//Процедура ПриЧтенииНаСервере(ТекущийОбъект)
//	//Если ТекущийОбъект.МетодыПромо.Количество()>=1 Тогда
//	//	ЭтаФорма.ТЧМетоды.Очистить();
//	//	Для Каждого стр из ТекущийОбъект.МетодыПромо Цикл
//	//		Т = ТЧМетоды.Добавить();
//	//		Т.Наименование = стр.НаименованиеМетода;
//	//		Т.Выбрать = Истина;
//	//	КонецЦикла;
//	//КонецЕсли;
//КонецПроцедуры

// 



//&НаКлиенте
//Процедура НачалоСтартаСписокПолучателей(Результат, Параметры) Экспорт
//    ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Согласовать;

//КонецПроцедуры

//&НаКлиенте
//Процедура НачалоСтартаСписокГеография(Результат, Параметры) Экспорт
//    ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Дополнительно;

//КонецПроцедуры 

&НаСервере
Функция СписокПолей()
	
	СЗ = Новый Структура;  
	СЗ.Вставить("Номер",Строка(Объект.Номер));
	СЗ.Вставить("Автор",Строка(Объект.Автор)); 
	
		СтартПроведения = "Начало акции :" + Строка(Строка(Формат(Объект.НачалоАкции,"ДЛФ=Д"))+"-"+Строка(Формат(Объект.ОкончаниеАкции,"ДЛФ=Д")));
		СЗ.Вставить("ПериодАкции",Строка(СтартПроведения));
	
	СЗ.Вставить("ТипАкции",Строка("Ценовое еком")); 
	СЗ.Вставить("Комментарий",Строка(Объект.Комментарий)); 
	СЗ.Вставить("Партнер",Строка(Объект.Партнер)); 
	СЗ.Вставить("URL",Строка(ПолучитьНавигационнуюСсылку(Объект.Ссылка))); 
	Файлы = Новый Массив;
	Для Каждого стр из Объект.Файлы Цикл
		Файлы.Добавить(стр.Путь);
	КонецЦикла;
	
	СЗ.Вставить("Файлы",Файлы);

	//Почта = Новый Массив;
	//Для Каждого стр из Объект.Согласовать Цикл
	//	Почта.Добавить(стр.ЭлПочта);
	//КонецЦикла;
    СЗ.Вставить("Почта",Строка(Объект.Согласовать[0].ЭлПочта));
	
	
	Возврат СЗ;	
КонецФункции



#Если ТонкийКлиент Тогда
&НаКлиенте
Процедура СтартПромо()
	
	Содержимое = СписокПолей();
	
	Ном = СписокНоменклатура();
    //НомЕком = СписокНоменклатураЕком(); 
	
	Почта = Новый ИнтернетПочта; 
	Письмо = Новый ИнтернетПочтовоеСообщение;
	ТекстПисьма = ""+ Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "<p>Номер документа: " + Строка(Содержимое.Номер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Автор: " + Строка(Содержимое.Автор) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Партнер: " + Строка(Содержимое.Партнер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Список номенклатуры " + Символы.ПС+"</p>";
	
	Если Ном.Количество()>=1 Тогда
			ТекстПисьма = ТекстПисьма + "<table><thead><th>Бренд</th><th>Номенклатура</th><th>ТекущаяЦена</th><th>ЦенаСкидка</th><th>ПроцентСкидки</th><th>Объем</th></thead><tbody>";
		Для Каждого стр из Ном Цикл
			ТекстПисьма	= ТекстПисьма + "<tr><td>"+ Строка(стр.Бренд) + "</td><td>" + Строка(стр.Номенклатура) + "</td><td>" + Строка(стр.ТекущаяЦена) + "</td><td>" +Строка(стр.ЦенаСкидка) + "</td><td>" +Строка(стр.ПроцентСкидки) + "</td><td>" +Строка(стр.Объем)+"</td></tr>";
		КонецЦикла;			
	КонецЕсли;
	
	ТекстПисьма	 = ТекстПисьма + "</tbody></table>";
	
	ТекстПисьма	 = ТекстПисьма + Символы.ПС+"</br>"; 
	//ТекстПисьма = ТекстПисьма + "Бренд: " + Строка(Содержимое.Бренд) + Символы.ПС; 
	//ТекстПисьма = ТекстПисьма + "Номенклатура: " +  Строка(Содержимое.Номенклатура) + Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "<p>" + Строка(Содержимое.ПериодАкции) + Символы.ПС+"</p>";  
	ТекстПисьма = ТекстПисьма + "<p>ТипАкции: " + Строка(Содержимое.ТипАкции) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Описание акции: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
	
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";

	ТекстПисьма = ТекстПисьма + "<a href=""http://84.53.238.76/erp#"+Строка(Содержимое.URL)+" "">Ознакомиться с документом </a> " + Символы.ПС+"</br>";

	
	
	Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
	Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
	
	Письмо.Тема = Строка("Согласование промо акции"); 
	Письмо.Отправитель = "1c@smartbar.ru"; 
	Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
	
	Для сч=0 по Содержимое.Файлы.Количество()-1 Цикл 
		ВыбранныйФайл = Новый Файл(Содержимое.Файлы[сч]);
		Вложение = Новый ДвоичныеДанные(ВыбранныйФайл.ПолноеИмя); 
		Письмо.Вложения.Добавить(Вложение,ВыбранныйФайл.Имя);
	КонецЦикла; 
	
	
	Письмо.Получатели.Добавить(Содержимое.Почта);
		Попытка
			Почта.Подключиться(ПолучитьПрофильПочты()); 
			Почта.Послать(Письмо); 
		Исключение 
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	Почта.Отключиться(); 
	
	//раскоментировать на проде
    ИзменитьСтатус(); 
	ЭтаФорма.Закрыть();

КонецПроцедуры 
#КонецЕсли 

&НаКлиенте
Функция ПолучитьПрофильПочты()
	 
	Профиль = Новый ИнтернетПочтовыйПрофиль; 
	Профиль.АдресСервераSMTP = "smtp.mail.ru";
	Профиль.АдресСервераPOP3 = "pop.mail.ru";
	Профиль.ПортPOP3 = 995;
	Профиль.ПортSMTP = 465; 
	Профиль.Пользователь = "1c@smartbar.ru"; 
	Профиль.Пароль = "GrKV5YLckkiM5AsF8Byt"; 
	Профиль.ПользовательSMTP =  "1c@smartbar.ru"; 
	Профиль.ПарольSMTP = "GrKV5YLckkiM5AsF8Byt"; 
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Login;
	Профиль.ИспользоватьSSLPOP3 = Истина;
	Профиль.ИспользоватьSSLSMTP = Истина;  

	Возврат Профиль;
КонецФункции 

&НаСервере
Функция ОкончаниеАкцииПриИзмененииНаСервере()
	Ош = Ложь;
	Если Объект.ОкончаниеАкции <= Объект.НачалоАкции Тогда
		Ош = Истина;
	КонецЕсли;
	Возврат ош;
КонецФункции


&НаКлиенте
Процедура ОкончаниеАкцииПриИзменении(Элемент)
	П = ОкончаниеАкцииПриИзмененииНаСервере();
	Если П = Истина Тогда
		Оповещение = Новый ОписаниеОповещения("СообщениеВеб",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Дата окончания не может быть меньше даты начала",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Сообщение" // (необ.) заголовок
	    ); 
		КонецЕсли;
КонецПроцедуры


&НаСервере
Функция СтартНаСервере()
	//Объект.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование;
	//Объект.Статус = "Создан";  
	
	//проверяем элементы
	Ош = Ложь;
	Если Объект.Согласовать.Количество() = 0 Тогда
		Ош = 1;
	ИначеЕсли Объект.НачалоАкции = Дата(1,1,1) ИЛИ Объект.ОкончаниеАкции = Дата(1,1,1) Тогда 
		Ош = 2;
	ИначеЕсли Объект.ОкончаниеАкции <= Объект.НачалоАкции Тогда 
		Ош = 3;
	//ИначеЕсли Объект.СХК_География.Количество() = 0 Тогда
	//	Если Объект.ТипПромо <> Перечисления.Промо_ТипПромо.Ecom ТОгда
	//		Если Объект.НоменклатураПромо.Итог("КолТТ")>=1 Тогда 
	//			Ош = Ложь;
	//		Иначе
	//			Ош = 2; 
	//		КонецЕсли;
	//	Иначе
	//		Ош = Ложь;	
	//	КонецЕсли;
		
	//ИначеЕсли Объект.Ссылка.Проведен = Ложь  Тогда
	//	Если Объект.ТипПромо = "Ценовое" Тогда
	//	Ош = 3;
	КонецЕсли;
	Возврат Ош;
КонецФункции 


#Если ТонкийКлиент Тогда 

&НаКлиенте
Процедура Старт(Команда)
	С = СтартНаСервере();

	Если С = 1 Тогда
		Оповещение = Новый ОписаниеОповещения("СообщениеВеб",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Заполните список",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Заполнить список получателей" // (необ.) заголовок
	    );
	ИначеЕсли С = 2 Тогда
		Оповещение = Новый ОписаниеОповещения("СообщениеВеб",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Заполните даты проведения акций",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Заполните даты проведения акций" // (необ.) заголовок
	    );
	ИначеЕсли С = 3 Тогда
		Оповещение = Новый ОписаниеОповещения("СообщениеВеб",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Дата окончания не может быть меньше даты начала",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Ошибка" // (необ.) заголовок
	    );
	//ИначеЕсли С = 3 Тогда
	//	Оповещение = Новый ОписаниеОповещения("НачалоСтартаПроведение",ЭтотОбъект);
	//    ПоказатьВопрос(Оповещение,
	//        "Проведите документ",
	//        РежимДиалогаВопрос.ОК,
	//        0, // таймаут в секундах
	//        , // (необ.) кнопка по умолчанию
	//        "Проведение документа" // (необ.) заголовок
	//    );
		
	ИначеЕсли С = Ложь Тогда   
		//Сообщить("Почти готово");
		СтартПромо();
	КонецЕсли;

КонецПроцедуры   

#Иначе

	&НаКлиенте
	Процедура ОповещениеВеб()
		Оповещение = Новый ОписаниеОповещения("СообщениеВеб",ЭтотОбъект);
	    ПоказатьВопрос(Оповещение,
	        "Запуск в браузере не возможен ",
	        РежимДиалогаВопрос.ОК,
	        0, // таймаут в секундах
	        , // (необ.) кнопка по умолчанию
	        "Запуск в браузере не возможен" // (необ.) заголовок
	    );
		
    КонецПроцедуры 
#КонецЕсли 

&НаКлиенте
Процедура СообщениеВеб(Результат, Параметры) Экспорт
	
КонецПроцедуры


&НаКлиенте
Процедура ТЧСогласоватьНеСогласованПриИзменении(Элемент) 
	Если ПроверитьСтатусДокумента() = Истина Тогда 
		Ош = ИзменитьСтрокуНеСогла();
		Если Ош = Истина Тогда
			ЭтаФорма.Записать();
			Содержимое = СписокПолейОтбивка(); 
			Если Содержимое.Количество() > 0 Тогда
				Почта = Новый ИнтернетПочта; 
				Письмо = Новый ИнтернетПочтовоеСообщение;
				
				ТекстПисьма = ""+ Символы.ПС; 
				ТекстПисьма = ТекстПисьма + "<p>Пользователь  " + Строка(Содержимое.СогласующееЛицо) + Символы.ПС+"</p>";
				Если Содержимое.Согласовал = "Да" Тогда
					ТекстПисьма = ТекстПисьма + "<p>Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				Иначе
					ТекстПисьма = ТекстПисьма + "<p>Не Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				КонецЕсли;
				ТекстПисьма = ТекстПисьма + "<p>Комментарий: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
				Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
				Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
				
				Письмо.Тема = Строка("Согласование промо акции"); 
				Письмо.Отправитель = "1c@smartbar.ru"; 
				Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
				Письмо.Получатели.Добавить(Содержимое.Кому);
				
				Попытка
					Почта.Подключиться(ПолучитьПрофильПочты()); 
					Почта.Послать(Письмо); 
				Исключение 
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
				
			КонецЕсли;
			Почта.Отключиться();
			УстановитьСтатусНеСогласованПоСтроке();
			
			ЭтаФорма.Закрыть();
		Иначе
			Сообщить(Ош);
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧСогласоватьСогласованПриИзменении(Элемент) 
	
	Если ПроверитьСтатусДокумента() Тогда 
		Ош = ИзменитьСтрокуСогл();
		Если Ош = Истина Тогда
            ЭтаФорма.Записать();
			Содержимое = СписокПолейОтбивка(); 
			Если Содержимое.Количество() > 0 Тогда
				
				Почта = Новый ИнтернетПочта; 
				Письмо = Новый ИнтернетПочтовоеСообщение;
				
				ТекстПисьма = ""+ Символы.ПС; 
				ТекстПисьма = ТекстПисьма + "<p>Пользователь  " + Строка(Содержимое.СогласующееЛицо) + Символы.ПС+"</p>";
				Если Содержимое.Согласовал = "Да" Тогда
					ТекстПисьма = ТекстПисьма + "<p>Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				Иначе
					ТекстПисьма = ТекстПисьма + "<p>Не Согласовал Документ №" + Строка(Содержимое.Номер) + Символы.ПС+"</p>";
				КонецЕсли; 
				ТекстПисьма = ТекстПисьма + "<p>Комментарий: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
				
				Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
				Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
				
				Письмо.Тема = Строка("Согласование промо акции"); 
				Письмо.Отправитель = "1c@smartbar.ru"; 
				Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
				Письмо.Получатели.Добавить(Содержимое.Кому);
				
				НомерПол = ПроверитьОчередность();
				Письмо.Получатели.Добавить(Содержимое.Кому);
				
				
				Попытка
					Почта.Подключиться(ПолучитьПрофильПочты()); 
					Почта.Послать(Письмо);
					СтартСледующий(НомерПол);
				Исключение 
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
				
			КонецЕсли;
			Попытка
			Почта.Отключиться();
		Исключение
			КонецПопытки;
			ЭтаФорма.Закрыть(); 
		Иначе
		//	Если Элементы.ТЧСогласовать.ТекущиеДанные.Согласован = Ложь Тогда
		//		Элементы.ТЧСогласовать.ТекущиеДанные.Согласован = Ложь ;
		//	КонецЕсли;
			Сообщить(Ош);
		КонецЕсли;
		
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СтартСледующий(Н)
	Содержимое = СписокПолей();
	Ном = СписокНоменклатура();

	Почта = Новый ИнтернетПочта; 
	Письмо = Новый ИнтернетПочтовоеСообщение;
	ТекстПисьма = ""+ Символы.ПС; 
	ТекстПисьма = ТекстПисьма + "<p>Номер документа: " + Строка(Содержимое.Номер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Автор: " + Строка(Содержимое.Автор) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Партнер: " + Строка(Содержимое.Партнер) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Список номенклатуры " + Символы.ПС+"</p>";
	
	ТекстПисьма = ТекстПисьма + "<table><thead><th>Бренд</th><th>Номенклатура</th><th>ТекущаяЦена</th><th>ЦенаСкидка</th><th>ПроцентСкидки</th><th>Объем</th></thead><tbody>";
	Для Каждого стр из Ном Цикл
		ТекстПисьма	= ТекстПисьма + "<tr><td>"+ Строка(стр.Бренд) + "</td><td>" + Строка(стр.Номенклатура) + "</td><td>" + Строка(стр.ТекущаяЦена) + "</td><td>" +Строка(стр.ЦенаСкидка) + "</td><td>" +Строка(стр.ПроцентСкидки) + "</td><td>" +Строка(стр.Объем)+"</td></tr>";
	КонецЦикла;
	ТекстПисьма	 = ТекстПисьма + "</tbody></table>";
	
	ТекстПисьма	 = ТекстПисьма + Символы.ПС+"</br>"; 
	//ТекстПисьма = ТекстПисьма + "Бренд: " + Строка(Содержимое.Бренд) + Символы.ПС; 
	//ТекстПисьма = ТекстПисьма + "Номенклатура: " +  Строка(Содержимое.Номенклатура) + Символы.ПС; 
	//ТекстПисьма = ТекстПисьма + "<p>План Проведения: " + Строка(Содержимое.ПланПроведения) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Старт Проведения: " + Строка(Содержимое.ПериодАкции) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>ТипАкции: " + Строка(Содержимое.ТипАкции) + Символы.ПС+"</p>"; 
	ТекстПисьма = ТекстПисьма + "<p>Описание акции: " + Строка(Содержимое.Комментарий) + Символы.ПС+"</p>";
	
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";
	ТекстПисьма = ТекстПисьма + "<p></p>";

	ТекстПисьма = ТекстПисьма + "<a href=""http://84.53.238.76/erp#"+Строка(Содержимое.URL)+" "">Ознакомиться с документом </a> " + Символы.ПС+"</br>";

	
	
	Текст = Письмо.Тексты.Добавить(ТекстПисьма); 
	Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;	
	
	Письмо.Тема = Строка("Согласование промо акции"); 
	Письмо.Отправитель = "1c@smartbar.ru"; 
	Письмо.ИмяОтправителя = "Уведомление 1С ЕРП";
	
	Для сч=0 по Содержимое.Файлы.Количество()-1 Цикл 
		ВыбранныйФайл = Новый Файл(Содержимое.Файлы[сч]);
		Вложение = Новый ДвоичныеДанные(ВыбранныйФайл.ПолноеИмя); 
		Письмо.Вложения.Добавить(Вложение,ВыбранныйФайл.Имя);
	КонецЦикла; 
	
	Если ПроверитьСогласование(Н)  Тогда
		Письмо.Получатели.Добавить(ПолучитьПолучателя(Н)); 
		Попытка
			Почта.Подключиться(ПолучитьПрофильПочты()); 
			Почта.Послать(Письмо); 
		Исключение 
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	Почта.Отключиться();  
	Иначе
		ПромоСогласовано();
	КонецЕсли;
	
	
КонецПроцедуры

//#КонецЕсли


&НаСервере
Процедура ИзменитьСтатус()
	Док = Объект.Ссылка.ПолучитьОбъект(); 
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование;
	Для Каждого стр из Док.Согласовать Цикл
		стр.Согласован = Ложь;
		стр.НеСогласован = Ложь;
	КонецЦикла;
	
	Док.Записать(РежимЗаписиДокумента.Проведение);
		
КонецПроцедуры



&НаСервере
Функция СписокНоменклатура()
	
		
	Мас = Новый Массив;
	Если Объект.ТипПромо <> Перечисления.Промо_ТипПромо.Ecom Тогда
	Для Каждого стр из Объект.НоменклатураПромо Цикл 
		Если стр.Номенклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда
			СЗ = Новый Структура;
			СЗ.Вставить("Бренд",Строка(стр.Бренд));
			СЗ.Вставить("Номенклатура",Строка(стр.Номенклатура));
			СЗ.Вставить("ТекущаяЦена",Строка(стр.ТекущаяЦена));
			СЗ.Вставить("ЦенаСкидка",Строка(стр.ЦенаСНдсSku));
			СЗ.Вставить("ПроцентСкидки",Строка(стр.Скидка));
			СЗ.Вставить("Объем",Строка(стр.ОбъемПромоШт));
        	Мас.Добавить(СЗ);
		КонецЕсли;
	КонецЦикла;
   	КонецЕсли;
	Возврат Мас;	
КонецФункции

//&НаСервере
//Функция СписокНоменклатураЕком()
//	
//	
//	Мас = Новый Массив; 
//	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom Тогда
//	Для Каждого стр из Объект.РасчетЕком Цикл 
//		Если стр.Номенклатура <> Справочники.Номенклатура.ПустаяСсылка() Тогда
//			СЗ = Новый Структура;
//			СЗ.Вставить("Бренд",Строка(стр.Бренд));
//			СЗ.Вставить("Номенклатура",Строка(стр.Номенклатура));
//			СЗ.Вставить("ТекущаяЦена",Строка(стр.ТекущаяЦена));
//			СЗ.Вставить("Объем",Строка(стр.РегулярныйОборот));
//        	Мас.Добавить(СЗ);
//		КонецЕсли;
//	КонецЦикла;
//    КонецЕсли;
//	Возврат Мас;	
//КонецФункции




//&НаСервере
//Функция СписокВложения()
//	
//КонецФункции



//&НаКлиенте
//Процедура ПодборНоменклатуры(Команда) 
//	Если Не ПроверитьСоглашение() Тогда 
//		ЗаполнитьСписокНП(Партнер());  
//		ДоступностьНП();
//	Иначе
//		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Соглашение;
//		Сообщить("Укажите соглашение"); 
//	КонецЕсли;
//КонецПроцедуры 

//&НаСервере
//Функция ПроверитьСоглашение()
//	Если Не Объект.Соглашение.Пустая() Тогда
//		Возврат Ложь;
//	Иначе
//		Возврат Истина;
//	КонецЕсли;
//	
//КонецФункции








//&НаСервере
//Процедура СоглашениеПриИзмененииНаСервере()
//	Если Объект.НоменклатураПромо.Количество()>=1 Тогда
//		Для Каждого стр из Объект.НоменклатураПромо Цикл
//			стр.ТекущаяЦена = ТекЦенаНоменклатуры(стр.Номенклатура, Объект.Соглашение);			
//		КонецЦикла
//	КонецЕсли;
//	//Объект.НоменклатураПромо.Очистить();	
//КонецПроцедуры




//&НаСервере
//Процедура РасчитатьНаСервере()
//	Попытка  
//		КолМес = 1 + Месяц(ЭтаФорма.ПериодРасчета.ДатаОкончания)-месяц(ЭтаФорма.ПериодРасчета.ДатаНачала);
//	Для Каждого стр из Объект.НоменклатураПромо Цикл
//		ПолнаяСС = ПолучитьПолнаяСС(стр.Номенклатура);
//		Если ПолнаяСС <> 0 Тогда
//			ОбъемН = ПолучитьПродажи(стр.Номенклатура);
//			ОбъемЗаПериод = ОбъемН.Итог("Количество")/КолМес;
//			
//			ОбъёмДеньСетьШт = Окр(Число(ОбъемЗаПериод) /30 ,2) ;
//			
//			
//			КолДнейАкции = Цел((НачалоДня(Объект.ОкончаниеАкции)-КонецДня(Объект.НачалоАкции))/86400); 
//			Если  КолДнейАкции = 0 Тогда 
//				КолДнейАкции = Цел((НачалоДня(Объект.ПлановаяДатаОкончания)-КонецДня(Объект.ПлановаяДатаНачала))/86400);
//			КонецЕсли;
//			
//			ОбъёмМесяцСетьШт =(ОбъёмДеньСетьШт * КолДнейАкции)+ ОбъёмДеньСетьШт*(30-КолДнейАкции);
//			
//			ОбъёмГодСетьШт= ОбъёмМесяцСетьШт * 12;	
//			
//			ОбъёмГодСетьРуб = ОбъёмГодСетьШт * стр.ТекущаяЦена;

//			//ПОбъёмМесяцШт = ОбъемЗаПериод * (1 + (Объект.ПроцентПрироста/100));
//			ПОбъёмМесяцШт = ОбъёмДеньСетьШт * (1 + (Объект.ПроцентПрироста/100)) * КолДнейАкции + (ОбъёмДеньСетьШт*(30-КолДнейАкции)) ;
//			
//			ПОбъёмГодШт = Окр(ПОбъёмМесяцШт * 12,2);
//			
//			
//			МаржаНе	 =  (стр.ТекущаяЦена - стр.ПолнаяСС) * (ОбъемЗаПериод * 12); 
//			
//			ПМаржаНе = (стр.ТекущаяЦена - стр.ПолнаяСС)* ПОбъёмГодШт;

//			стр.ПолнаяСС = ПолнаяСС; //Полная с/с  C
//			
//			стр.Рентабельность = Окр(((стр.ТекущаяЦена - стр.ПолнаяСС)/стр.ПолнаяСС)*100,2);//Рентабельность, % E
//			
//			
//			стр.ОбъёмДеньСетьШт = ОбъёмДеньСетьШт;  //Объём за месяц на 1 ТТ, шт.
//			
//			стр.Объем = ОбъемЗаПериод * (1 + (Объект.ПроцентПрироста/100));   
//			
//			стр.ОбъемЗаПериод = ОбъемЗаПериод;
//			стр.ОбъёмМесяцТТ = ОбъемЗаПериод/стр.КолТТ;
//			стр.ОбъёмМесяцСетьШт = ОбъёмМесяцСетьШт;
//			стр.ОбъёмМесяцСетьРуб = Окр(Число(ОбъемЗаПериод)*Число(стр.ТекущаяЦена),2);
//			стр.ОбъёмГодСетьШт = ОбъёмГодСетьШт;
//			стр.ОбъёмГодСетьРуб = ОбъёмГодСетьРуб;
//			стр.ПОбъёмМесяцШт = Окр(ПОбъёмМесяцШт,2);  
//			стр.ПОбъёмГодШт = ПОбъёмГодШт;  
//			стр.Маркетинг = 1;
//			стр.Затраты = 1;
//			стр.МаржаНе = МаржаНе;
//			стр.Окупаемость = 1;
//			стр.ПМаржаНе = ПМаржаНе;
//			стр.ПОкупаемость = 1;
//			
//		Иначе
//			Сообщить("Для позиции " + Строка(стр.Номенклатура) + " не заполнена плановая себестоимость");
//		КонецЕсли;
//		
//	КонецЦикла;
//	
//	
//	
//	ИтогОбъемЗаГод = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьРуб");
//	
//	Для Каждого стр из Объект.НоменклатураПромо Цикл
//		
//		Если Число(стр.ПолнаяСС) >= 0 Тогда  
//			Маркетинг = стр.ОбъёмГодСетьРуб/ИтогОбъемЗаГод*Объект.БюджетДок;
//			стр.Маркетинг = Маркетинг;  
//			стр.Затраты = Маркетинг;  
//			стр.Окупаемость =Окр((Маркетинг / стр.МаржаНе)*12  ,2);
//			//стр.ПОкупаемость =Окр(Маркетинг / стр.ПМаржаНе,2);
//		КонецЕсли;
//		
//	КонецЦикла;

//	Если Объект.НоменклатураПромо.Количество()>=1 Тогда  
//		Если Объект.НоменклатураПромо[Объект.НоменклатураПромо.Количество() - 1].Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
//			Объект.НоменклатураПромо.Удалить(Объект.НоменклатураПромо.Количество() - 1);                                                         
//		КонецЕсли;
//		Т = Объект.НоменклатураПромо.Добавить();  
//		Т.Объем = Объект.НоменклатураПромо.Итог("Объем");
//		Т.ОбъёмМесяцТТ = Объект.НоменклатураПромо.Итог("ОбъёмМесяцТТ");
//		Т.ОбъёмМесяцСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьШт");
//		Т.ОбъёмМесяцСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьРуб");
//		Т.ОбъёмГодСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьШт");
//		Т.ОбъёмГодСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьРуб");
//		Т.ПОбъёмМесяцШт = Объект.НоменклатураПромо.Итог("ПОбъёмМесяцШт");
//		Т.ПОбъёмГодШт = Объект.НоменклатураПромо.Итог("ПОбъёмГодШт");
//		Т.Маркетинг = Объект.НоменклатураПромо.Итог("Маркетинг");
//		Т.Затраты = Объект.НоменклатураПромо.Итог("Затраты");
//		Т.МаржаНе = Объект.НоменклатураПромо.Итог("МаржаНе");
//		Т.Окупаемость = Объект.НоменклатураПромо.Итог("Окупаемость");
//		Т.ПМаржаНе = Объект.НоменклатураПромо.Итог("ПМаржаНе");
//		Т.ПОкупаемость = Объект.НоменклатураПромо.Итог("ПОкупаемость");
//		Т.ОбъемЗаПериод = Объект.НоменклатураПромо.Итог("ОбъемЗаПериод");
//	КонецЕсли;
//	
//    Объект.ПериодРасчетаДок = ЭтаФорма.ПериодРасчета;
//Исключение
//	Сообщить("Введены не все показатели");
//	КонецПопытки;
//	//
//	
//КонецПроцедуры

//&НаСервере
//Функция ПолучитьПродажи(Ном)
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	|	ВыручкаИСебестоимостьПродаж.Количество КАК Количество,
//	|	ВыручкаИСебестоимостьПродаж.СуммаВыручки КАК СуммаВыручки
//	|ИЗ
//	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
//	|ГДЕ
//	|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
//	|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам.Партнер = &Партнер
//	|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
//	|";
//	
//	Запрос.УстановитьПараметр("ДатаНачала", ЭтаФорма.ПериодРасчета.ДатаНачала);
//	Запрос.УстановитьПараметр("ДатаОкончания", ЭтаФорма.ПериодРасчета.ДатаОкончания);
//	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
//	Запрос.УстановитьПараметр("Номенклатура", Ном);  
//	
//	Результат = Запрос.Выполнить();
//	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
//	ТабЗнач = Результат.Выгрузить(СпособОбхода); 	
//	Возврат ТабЗнач;	
//КонецФункции



//&НаКлиенте
//Процедура Расчитать(Команда) 
//	Если ПроверитьПериодРасчета() Тогда
//		РасчитатьНаСервере();
//	Иначе
//		Сообщить("Укажите период расчета"); 
//	КонецЕсли;
//	
//КонецПроцедуры


//&НаСервере
//Функция ПроверитьПериодРасчета() 
//	Если ЭтаФорма.ПериодРасчета.ДатаНачала <> Дата(1,1,1) Тогда
//		Возврат Истина;
//	Иначе
//		Возврат Ложь;
//	КонецЕсли;
//КонецФункции

//&НаСервере
//Функция ПолучитьОПР(Ном)
//	ТекущаяЦена = 0;
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
//	|ИЗ
//	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
//	|ГДЕ
//	|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
//	|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены"; 
//	Запрос.УстановитьПараметр("ВидЦены",Справочники.ВидыЦен.НайтиПоНаименованию("Плановая общепроизводственная себестоимость"));
//	Запрос.УстановитьПараметр("Номенклатура",Ном); 
//	Рез = Запрос.Выполнить().Выбрать();
//	Если Рез.Количество()>=1 Тогда
//		Пока Рез.Следующий() Цикл
//			ТекущаяЦена = Рез.Цена;	
//		КонецЦикла;
//	КонецЕсли;
//	
//	Возврат ТекущаяЦена; 
//КонецФункции

//	
//&НаСервере
//Функция ПолучитьПолнаяСС(Ном)
//	ТекущаяЦена = 0;
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
//	|ИЗ
//	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
//	|ГДЕ
//	|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
//	|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены"; 
//	Запрос.УстановитьПараметр("ВидЦены",Справочники.ВидыЦен.НайтиПоНаименованию("Плановая полная себестоимость"));
//	Запрос.УстановитьПараметр("Номенклатура",Ном); 
//	Рез = Запрос.Выполнить().Выбрать();
//	Если Рез.Количество()>=1 Тогда
//		Пока Рез.Следующий() Цикл
//			ТекущаяЦена = Рез.Цена;	
//		КонецЦикла;
//	КонецЕсли;
//	
//	Возврат ТекущаяЦена; 
//КонецФункции

//&НаСервере
//Процедура ОчиститьПодборНаСервере()
//	Объект.НоменклатураПромо.Очистить();	
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ОчиститьПодбор(Команда)
//	ОчиститьПодборНаСервере();
//КонецПроцедуры

//&НаКлиенте
//Процедура БюджетПриИзменении(Элемент)
//	Если ПроверитьРеквизитыДляРасчета() ТОгда
//		РасчитатьНаСервере();                    
//	Иначе
//		Сообщить("Заполните реквизиты бюджет, процент прироста, период")
//	КонецЕсли;

//КонецПроцедуры

//&НаКлиенте
//Процедура ПроцентПриростаПриИзменении(Элемент)
//		Если ПроверитьРеквизитыДляРасчета() ТОгда
//		РасчитатьНаСервере();                    
//	Иначе
//		Сообщить("Заполните реквизиты бюджет, процент прироста, период")
//	КонецЕсли;

//КонецПроцедуры

//&НаСервере
//Процедура РасчетНаСервере()
//	// Вставить содержимое обработчика.
//КонецПроцедуры

//&НаКлиенте
//Процедура Расчет(Команда)
//	П = ПолучитьТипПромо();
//	Если П = "Не ценовое" Тогда
//		Если ПроверитьРеквизитыДляРасчета() ТОгда
//			РасчитатьНаСервере();                    
//		Иначе
//			Сообщить("Заполните реквизиты бюджет, процент прироста, период")
//		КонецЕсли;
//	ИначеЕсли П = "Ecom" Тогда 
//		Если ПроверитьРеквизитыДляРасчетаЕком() ТОгда
//			РасчитатьНаСервереЕком();                    
//		Иначе
//			Сообщить("Заполните реквизиты бюджет, процент прироста, период, охват, СтоимостьКонтакта")
//		КонецЕсли;
//	КонецЕсли;

//КонецПроцедуры

//&НаСервере
//Процедура РасчитатьНаСервереЕком()
//	Попытка 
//		Если Объект.РасчетЕком[Объект.РасчетЕком.Количество() - 1].Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
//			Объект.РасчетЕком.Удалить(Объект.РасчетЕком.Количество() - 1);                                                         
//		КонецЕсли;
//		
//		КолМес = 1 + Месяц(ЭтаФорма.ПериодРасчета.ДатаОкончания)-месяц(ЭтаФорма.ПериодРасчета.ДатаНачала);
//	Для Каждого стр из Объект.РасчетЕком Цикл
//		ПолнаяСС = ПолучитьПолнаяСС(стр.Номенклатура);
//		Если ПолнаяСС <> 0 Тогда
//			ОбъемН = ПолучитьПродажи(стр.Номенклатура); 
//			стр.ПолнаяСС =  ПолнаяСС; 
//			ОбъемЗаПериод = ОбъемН.Итог("Количество")/КолМес;
//			ОбъемЗаПериодДень = ОбъемЗаПериод/30;
//			
//			Рентабельность = ((стр.ТекущаяЦена-стр.ПолнаяСС)/стр.ПолнаяСС)*100;
//			стр.Рентабельность =  Окр(Рентабельность,2);
//			стр.РегулярныйОборот =  Окр(ОбъемЗаПериод,2);;
//			стр.РегулярныйОборотШтВДень =  Окр(ОбъемЗаПериодДень,2);
//			
//			КолДнейАкции = Цел((НачалоДня(Объект.ОкончаниеАкции)-КонецДня(Объект.НачалоАкции))/86400); 
//			Если КолДнейАкции = 0 ТОгда
//				Сообщить("Заполните даты акции");
//			КонецЕсли;
//			
//			ПромоОборотШт =(ОбъемЗаПериодДень*КолДнейАкции) + ((ОбъемЗаПериодДень*КолДнейАкции)*(Объект.ПроцентПрироста/100)); 
//			
//			стр.ПромоОборотШт = Окр(ПромоОборотШт,2); 
//			
//			ОборотСПромоГодШт = ОбъемЗаПериодДень * (365-КолДнейАкции) + ПромоОборотШт;
//			стр.ОборотСПромоГодШт =  Окр(ОборотСПромоГодШт,2); 
//			
//			стр.ОборотСПромоГодРуб =  Окр(ОборотСПромоГодШт*стр.ТекущаяЦена,2);
//			стр.Маркетинг =  1;
//			Маржа = (стр.ТекущаяЦена-стр.ПолнаяСС) * ОборотСПромоГодШт;
//			стр.Маржа =  Окр(Маржа,2);   
//			стр.Окупаемость =  1;
//		Иначе
//			Сообщить("Для позиции " + Строка(стр.Номенклатура) + " не заполнена плановая себестоимость");
//		КонецЕсли;
//	КонецЦикла;
//	
//	Попытка
//		Для Каждого стр из Объект.РасчетЕком Цикл 
//			Маркетинг = стр.ОборотСПромоГодРуб/ Объект.РасчетЕком.Итог("ОборотСПромоГодРуб")*Объект.БюджетДок; 
//			стр.Маркетинг = Окр(Маркетинг,2); 
//			Окупаемость = Маркетинг/стр.Маржа*12;
//			стр.Окупаемость = Окр(Окупаемость,2);
//		КонецЦикла;
//	Исключение
//	КонецПопытки;
//	
//	
//	
//	Если Объект.РасчетЕком.Количество()>=1 Тогда  
//		Т = Объект.РасчетЕком.Добавить();
//		Т.РегулярныйОборот = Объект.РасчетЕком.Итог("РегулярныйОборот"); 
//		Т.РегулярныйОборотШтВДень = Объект.РасчетЕком.Итог("РегулярныйОборотШтВДень");
//		Т.ПромоОборотШт = Объект.РасчетЕком.Итог("ПромоОборотШт");
//		Т.ОборотСПромоГодШт = Объект.РасчетЕком.Итог("ОборотСПромоГодШт");
//		Т.ОборотСПромоГодРуб = Объект.РасчетЕком.Итог("ОборотСПромоГодРуб");
//		Т.Маркетинг = Объект.РасчетЕком.Итог("Маркетинг"); 
//		Т.Маржа = Объект.РасчетЕком.Итог("Маржа");
//		Т.Окупаемость = Окр(Объект.РасчетЕком.Итог("Окупаемость")/Объект.РасчетЕком.Количество(),2);
//		//Т.Объем = Объект.НоменклатураПромо.Итог("Объем");
//		//Т.ОбъёмМесяцТТ = Объект.НоменклатураПромо.Итог("ОбъёмМесяцТТ");
//		//Т.ОбъёмМесяцСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьШт");
//		//Т.ОбъёмМесяцСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмМесяцСетьРуб");
//		//Т.ОбъёмГодСетьШт = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьШт");
//		//Т.ОбъёмГодСетьРуб = Объект.НоменклатураПромо.Итог("ОбъёмГодСетьРуб");
//		//Т.ПОбъёмМесяцШт = Объект.НоменклатураПромо.Итог("ПОбъёмМесяцШт");
//		//Т.ПОбъёмГодШт = Объект.НоменклатураПромо.Итог("ПОбъёмГодШт");
//		//Т.Маркетинг = Объект.НоменклатураПромо.Итог("Маркетинг");
//		//Т.Затраты = Объект.НоменклатураПромо.Итог("Затраты");
//		//Т.МаржаНе = Объект.НоменклатураПромо.Итог("МаржаНе");
//		//Т.Окупаемость = Объект.НоменклатураПромо.Итог("Окупаемость");
//		//Т.ПМаржаНе = Объект.НоменклатураПромо.Итог("ПМаржаНе");
//		//Т.ПОкупаемость = Объект.НоменклатураПромо.Итог("ПОкупаемость");
//		//Т.ОбъемЗаПериод = Объект.НоменклатураПромо.Итог("ОбъемЗаПериод");
//	КонецЕсли;
//	
//    Объект.ПериодРасчетаДок = ЭтаФорма.ПериодРасчета;
//	Исключение
//	Сообщить("Введены не все показатели");
//	КонецПопытки;
//	
//КонецПроцедуры

//&НаСервере
//Функция ПолучитьТипПромо()
//	Возврат Строка(Объект.ТипПромо);	
//КонецФункции

//&НаСервере
//Функция ПроверитьРеквизитыДляРасчетаЕком() 
//	
//	Ош = Истина;
//	Если Объект.БюджетДок = 0 И Объект.ПроцентПрироста = 0 
//		И Объект.Охват = 0 И Объект.СтоимостьКонтакта = 0 И ЭтаФорма.ПериодРасчета.ДатаНачала = Дата(1,1,1) Тогда  
//		Ош =  Ложь;
//	ИНаче
//		Для Каждого стр из Объект.НоменклатураПромо Цикл
//			Если стр.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда  
//				Объект.НоменклатураПромо.Удалить(стр);
//			КонецЕсли;
//		КонецЦикла;
//		
//	КонецЕсли;
//	
//	Возврат Ош;
//	
//КонецФункции



//&НаСервере
//Функция ПроверитьРеквизитыДляРасчета() 
//	
//	Ош = Истина;
//	Если Объект.БюджетДок = 0 И Объект.ПроцентПрироста = 0 И ЭтаФорма.ПериодРасчета.ДатаНачала = Дата(1,1,1) Тогда  
//		Ош =  Ложь;
//	ИНаче
//		Для Каждого стр из Объект.НоменклатураПромо Цикл
//			Если стр.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда  
//				Объект.НоменклатураПромо.Удалить(стр);
//			КонецЕсли;
//		КонецЦикла;
//		
//	КонецЕсли;
//	
//	Возврат Ош;
//	
//КонецФункции


//&НаСервере
//Процедура НоменклатураПромоПроцентСкидкиПриИзмененииНаСервере(Ном) 
//	Попытка
//		Отбор = Новый Структура;
//		Отбор.Вставить("Номенклатура", Ном);
//		Строки = Объект.НоменклатураПромо.НайтиСтроки(Отбор);
//		Для Каждого Стр Из Строки Цикл
//			Стр.ЦенаСкидка = Стр.ТекущаяЦена - ((Стр.ТекущаяЦена * Стр.ПроцентСкидки)/100);
//		КонецЦикла;
//		
//	Исключение
//	КонецПопытки;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура НоменклатураПромоПроцентСкидкиПриИзменении(Элемент)
//	НоменклатураПромоПроцентСкидкиПриИзмененииНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Номенклатура);
//КонецПроцедуры


//&НаСервере
//Процедура ПересчитатьСтрокиПромо()
//	// Вставить содержимое обработчика.
//КонецПроцедуры

//&НаКлиенте
//Процедура СкидкаПоДокументуПриИзменении(Элемент)
//	ПересчитатьСтрокиПромо();

//КонецПроцедуры

//&НаСервере
//Процедура НоменклатураПромоЦенаСкидкаПриИзмененииНаСервере(Ном)
//		Попытка
//		Отбор = Новый Структура;
//		Отбор.Вставить("Номенклатура", Ном);
//		Строки = Объект.НоменклатураПромо.НайтиСтроки(Отбор);
//		Для Каждого Стр Из Строки Цикл   
//			Стр.ПроцентСкидки =  100 - Окр((Стр.ЦенаСкидка * 100)/ Стр.ТекущаяЦена,2) ;
//			
//		КонецЦикла;
//		
//	Исключение
//	КонецПопытки;

//КонецПроцедуры

//&НаКлиенте
//Процедура НоменклатураПромоЦенаСкидкаПриИзменении(Элемент)
//	НоменклатураПромоЦенаСкидкаПриИзмененииНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Номенклатура);
//КонецПроцедуры



//&НаСервере
//Процедура ПересчитатьНоменклатураПромо()
//	 
//	Для Каждого стр из Объект.НоменклатураПромо Цикл 
//		Попытка
//			стр.ПОбъемВсеТТ = стр.КолТТ * стр.ПОбъем_1_ТТ;//Объем ПРОМО на все ТТ, шт 	
//			стр.ОбъемПРОМОВсеТТРуб = (стр.ТекущаяЦена-стр.ТекущаяЦена*(стр.ПроцентСкидки/100))*стр.ПОбъемВсеТТ;	//Объем ПРОМО на все ТТ руб. 
//			стр.СебестоимостьПромоР = стр.КолТТ * стр.ПОбъем_1_ТТ * стр.ПолнаяСС;  
//			стр.ПрибыльОпр =  стр.ОбъемПРОМОВсеТТРуб - стр.ДопИнвестиции - стр.СебестоимостьОПР*стр.ПОбъемВсеТТ;//Прибыль от ОПР с/с   
//			стр.ПрибыльСС = стр.ОбъемПРОМОВсеТТРуб-стр.ДопИнвестиции-стр.СебестоимостьПромоР;//Прибыль от полной с/с    
//			стр.ВыручкаВМесяцПосле = стр.ТекущаяЦена * стр.ПланируемыйОбъем;//Выручка в месяц после акции, руб
//			стр.СебестоимостьВМесяцПосле = стр.ПланируемыйОбъем * стр.ПолнаяСС;//Себестоимость в месяц после акции, руб     
//			стр.Прибыль = стр.ВыручкаВМесяцПосле-стр.СебестоимостьВМесяцПосле;//Прибыль, руб
//            стр.ROI = стр.ПрибыльСС/стр.ОбъемПРОМОВсеТТРуб * 100;//ROI, %
//			стр.Эластичность = (стр.ПОбъемВсеТТ/стр.ПланируемыйОбъем-1)/стр.ПроцентСкидки*100;//Эластичность
//			ПОкупаемость = (-1) * стр.ПрибыльСС /стр.Прибыль;
//			Если стр.ПрибыльСС > 0  Тогда
//				стр.ПОкупаемость = "Окупается в 1 доставку";
//			Иначе
//				стр.ПОкупаемость = Окр(ПОкупаемость + стр.СрокРеализацииПромо - 1,2 ); 
//			КонецЕсли;
//	
//			//стр.ПОбъем_1_ТТ = стр.Объем/стр.КолТТ;
//			//стр.ПОбъемВсеТТ = (стр.ТекущаяЦена-стр.ТекущаяЦена*стр.ПроцентСкидки)*стр.стр.Объем;
//	Исключение
//		
//	КонецПопытки
//			
//КонецЦикла;

//		Объект.ИтогОкупаемостьПромо = "";	
//		Попытка
//			ИтогОкуп = (-1) * Объект.НоменклатураПромо.Итог("ПрибыльСС") /Объект.НоменклатураПромо.Итог("Прибыль");
//			Если Объект.НоменклатураПромо.Итог("ПрибыльСС") > 0  Тогда
//				Объект.ИтогОкупаемостьПромо = "Окупается в 1 доставку";
//				
//			Иначе 
//				
//				СР = Объект.НоменклатураПромо.Итог("СрокРеализацииПромо")/Объект.НоменклатураПромо.Количество(); 
//				Объект.ИтогОкупаемостьПромо = Окр(ИтогОкуп + СР - 1,2 ); 
//			КонецЕсли;
//		Исключение 
//			
//		КонецПопытки;
//		
//		  
//		Попытка 
//			Объект.ИтогROIПромо = Окр((Объект.НоменклатураПромо.Итог("ПрибыльСС") / Объект.НоменклатураПромо.Итог("ОбъемПРОМОВсеТТРуб"))*100,2);
//		Исключение
//			Объект.ИтогROIПромо = "";
//		КонецПопытки;   
//		
//		Попытка 
//			Объект.ИтогROIРегПрод = Окр((Объект.НоменклатураПромо.Итог("ПрибыльСС") / Объект.НоменклатураПромо.Итог("ВыручкаВМесяцПосле"))*100,2);
//		Исключение
//			Объект.ИтогROIРегПрод = "";
//		КонецПопытки;   
//		
//		Попытка 
//			Объект.ROI = Окр((Объект.НоменклатураПромо.Итог("ПрибыльСС") / Объект.НоменклатураПромо.Итог("СебестоимостьПромоР"))*100,2);
//		Исключение
//			Объект.ROI = "";
//		КонецПопытки;   
//		
//		Попытка 
//			Объект.ИтогЭластичностьПромо = Окр(Объект.НоменклатураПромо.Итог("Эластичность") / Объект.НоменклатураПромо.Количество(),2);
//		Исключение
//			Объект.ИтогЭластичностьПромо = "";
//		КонецПопытки;
//		
//	
//	
//КонецПроцедуры

//&НаСервере
//Процедура ВидимостьПромо()

//	Если Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ценовое Тогда 
//		ЭтаФорма.Элементы.ГруппаЦеновые.ТолькоПросмотр = Ложь;
//		ЭтаФорма.Элементы.ГруппаНеЦен.ТолькоПросмотр = Истина; 
//		ЭтаФорма.Элементы.ГруппаРасчет.Доступность = Ложь;  
//		ЭтаФорма.Элементы.ГруппаДопЦеновые.Видимость = Истина; 
//		Объект.Метод = Справочники.СХК_МетодыПромо.НайтиПоНаименованию("Ценовое");
//		ЭтаФорма.Элементы.ПериодЦен.Видимость = Истина;

//		ЭтаФорма.Элементы.ПериодНеЦен.Видимость = Ложь;
//		ЭтаФорма.Элементы.ИтогиЦен.Видимость = Истина;  
//		ЭтаФорма.Элементы.МетодыПромо.Видимость = Ложь;
//		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина; 
//		ЭтаФорма.Элементы.ГруппаПодборНоменклатурыЕком.Видимость = Ложь; 
//		
//		//+Видимость Колонок НоменклатураПромо
//		ЭтаФорма.Элементы.НоменклатураПромоПОбъем_1_ТТ.Видимость = Истина;
//		ЭтаФорма.Элементы.НоменклатураПромоПроцентСкидки.Видимость = Истина; 
//		ЭтаФорма.Элементы.НоменклатураПромоПОбъемВсеТТ.Видимость = Истина;
//		ЭтаФорма.Элементы.НоменклатураПромоСебестоимостьОПР.Видимость = Истина;
//		ЭтаФорма.Элементы.НоменклатураПромо1КолТТ.Видимость = Истина;
//        //-
//		//Объект.НоменклатураПромо.Очистить();
//	ИначеЕсли  Объект.ТипПромо = Перечисления.Промо_ТипПромо.НеЦеновое Тогда
//		ЭтаФорма.Элементы.ГруппаНеЦен.ТолькоПросмотр = Ложь;
//		ЭтаФорма.Элементы.ГруппаЦеновые.ТолькоПросмотр = Истина;
//		ЭтаФорма.Элементы.ГруппаРасчет.Доступность = Истина;
//		
//		ЭтаФорма.Элементы.ПериодЦен.Видимость = Ложь;
//		ЭтаФорма.Элементы.ПериодНеЦен.Видимость = Истина;
//		ЭтаФорма.Элементы.МетодыПромо.Видимость = Истина;
//		ЭтаФорма.Элементы.ИтогиЦен.Видимость = Ложь; 
//		ЭтаФорма.Элементы.НоменклатураПромо1.Видимость = Истина; 
//		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Истина; 
//		ЭтаФорма.Элементы.ГруппаПодборНоменклатурыЕком.Видимость = Ложь;
//		ЭтаФорма.Элементы.Охват.Видимость = Ложь;
//		ЭтаФорма.Элементы.СтоимостьКонтакта.Видимость = Ложь;

//		//+Видимость Колонок НоменклатураПромо
//		ЭтаФорма.Элементы.НоменклатураПромоПОбъем_1_ТТ.Видимость = Ложь;
//		ЭтаФорма.Элементы.НоменклатураПромоПроцентСкидки.Видимость = Ложь;
//		ЭтаФорма.Элементы.НоменклатураПромоПОбъемВсеТТ.Видимость = Ложь; 
//		ЭтаФорма.Элементы.НоменклатураПромоСебестоимостьОПР.Видимость = Ложь;  
//        ЭтаФорма.Элементы.НоменклатураПромо1КолТТ.Видимость = Истина;
//        ЭтаФорма.Элементы.НоменклатураПромо1Объем.Видимость = Истина;
//		ЭтаФорма.Элементы.НоменклатураПромо1ОбъёмМесяцТТ.Видимость = Истина;
//		//-
//	    //Объект.НоменклатураПромо.Очистить();
//	ИначеЕсли Объект.ТипПромо = Перечисления.Промо_ТипПромо.Ecom Тогда 
//		ЭтаФорма.Элементы.ГруппаЦеновые.ТолькоПросмотр = Ложь;
//        ЭтаФорма.Элементы.ГруппаНеЦен.ТолькоПросмотр = Ложь; 
//		ЭтаФорма.Элементы.СрокРПоставки.Видимость = Ложь;
//		ЭтаФорма.Элементы.ГруппаДопЦеновые.Видимость = Ложь;
//		ЭтаФорма.Элементы.ГруппаРасчет.Доступность = Истина; 
//		ЭтаФорма.Элементы.ПериодЦен.Видимость = Ложь;
//		ЭтаФорма.Элементы.ПериодНеЦен.Видимость = Истина;
//		ЭтаФорма.Элементы.МетодыПромо.Видимость = Истина;
//		ЭтаФорма.Элементы.ИтогиЦен.Видимость = Ложь;
//		ЭтаФорма.Элементы.ГруппаНоменклатура.Видимость = Ложь;
//		ЭтаФорма.Элементы.НоменклатураПромо1.Видимость = Ложь; 
//		ЭтаФорма.Элементы.ГруппаПодборНоменклатурыЕком.Видимость = Истина;
//		//ЭтаФорма.Элементы.НоменклатураПромо1КолТТ.Видимость = Ложь;
//		//ЭтаФорма.Элементы.НоменклатураПромо1Объем.Видимость = Ложь; 
//		//ЭтаФорма.Элементы.НоменклатураПромо1ОбъёмМесяцТТ.Видимость = Ложь;
//		//ЭтаФорма.Элементы.НоменклатураПромо1ОбъемЗаПериод.Заголовок = "регулярный оборот, шт в  мес  ";
//		//ЭтаФорма.Элементы.НоменклатураПромо1ОбъёмДеньСетьШт.Заголовок = "регулырный оборот шт в день ";
//        //Объект.НоменклатураПромо.Очистить();
//		ЭтаФорма.Элементы.Охват.Видимость = Истина;
//		ЭтаФорма.Элементы.СтоимостьКонтакта.Видимость = Истина;
//	КонецЕсли;  
//	
//КонецПроцедуры 


//&НаСервере
//Процедура МетодПриИзмененииНаСервере()
//	Объект.ТипKpi = Объект.Метод.ТипKPI;
//	Объект.Kpi = Объект.Метод.Kpi;
//КонецПроцедуры


//&НаКлиенте
//Процедура МетодПриИзменении(Элемент)
//	МетодПриИзмененииНаСервере();
//КонецПроцедуры



//&НаКлиенте
//Процедура НоменклатураПромоПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
//	ПересчитатьНоменклатураПромо() ;
//КонецПроцедуры 


// 

&НаСервере
Процедура УстановитьСтатусНеСогласованПоСтроке() 
	
	Док = Объект.Ссылка.ПолучитьОбъект();
	
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Создан;
	
	Док.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Истина; 
	Док.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Ложь; 
	Док.Записать(РежимЗаписиДокумента.Проведение);

	
КонецПроцедуры

&НаСервере
Функция ИзменитьСтрокуСогл()
	//Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Пользователь = Пользователи.ТекущийПользователь() Тогда
	//	Возврат Истина;
	//Иначе
	//	Возврат Ложь;
	//КонецЕсли;
	Ош = Ложь;
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Пользователь = Пользователи.ТекущийПользователь() Тогда 
		
Ош = Истина;;
	Иначе 
		Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Ложь;
		Ош = "Установите отметку на против своей фамилии";;
	КонецЕсли;  
	Возврат Ош;
	
КонецФункции

&НаСервере
Функция ИзменитьСтрокуНеСогла() 
	Ош = Ложь;
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Пользователь = Пользователи.ТекущийПользователь() Тогда 
		
		Если СтрДлина(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Комментарий) <20 Тогда 
			Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь;
			//Сообщить();
			Ош = "Заполните комментарий причины отказа";
		Иначе 
			//Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Истина;
			Ош = Истина;	
		КонецЕсли;
	Иначе 
		Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь;
		Ош = "Установите отметку на против своей фамилии";;
	КонецЕсли;  
	Возврат Ош;
КонецФункции

&НаСервере
Функция ПроверитьСтатусДокумента() 
	Док = Объект.Ссылка.ПолучитьОбъект(); 
	Если Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.НаСогласование Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверитьОчередность()
	Возврат ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока;	
КонецФункции  


//	



&НаСервере
Функция ПроверитьСогласование(Ном)
	Если Число(Объект.Согласовать.Количество()-1) = Число(Ном) Тогда 
		
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции 

&НаСервере
Процедура ПромоСогласовано()
	Док = Объект.Ссылка.ПолучитьОбъект();
	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован; 
	Док.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры


&НаСервере
Функция ПолучитьПолучателя(Н)
	Возврат Объект.Согласовать[Н+1].ЭлПочта ;	
КонецФункции


&НаСервере
Функция СписокПолейОтбивка() 
	СЗ = Новый Структура; 
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Истина Тогда
		Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь;
		ЗаписатьСогласование(ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока,"",Истина);

	ИначеЕсли  Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Истина Тогда
		Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Ложь; 
		ЗаписатьСогласование(ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока,"",Ложь);
	КонецЕсли;
	Если Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован = Ложь И Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован = Ложь Тогда
		Сообщить("Выбирете согласование");	
	Иначе
		
	ТП = Пользователи.ТекущийПользователь();
	  
	СЗ.Вставить("Номер",Строка(Объект.Номер));
	СЗ.Вставить("СогласующееЛицо",Строка(ТП.Наименование)); 
    СЗ.Вставить("Кому",Строка(Объект.Автор.КонтактнаяИнформация[0].АдресЭП)); 
	СЗ.Вставить("Согласовал",Строка(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Согласован)); 
	СЗ.Вставить("НеСогласовал",Строка(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].НеСогласован)); 
	СЗ.Вставить("Комментарий",Строка(Объект.Согласовать[ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока].Комментарий));
КонецЕсли;

Возврат СЗ;	
КонецФункции

&НаСервере
Процедура ЗаписатьСогласование(НомерСтроки,Бул,Согл)
	Док = Объект.Ссылка.ПолучитьОбъект();
	Если Согл = Истина Тогда
		Док.Согласовать[НомерСтроки].Согласован = Истина ;
		Док.Согласовать[НомерСтроки].НеСогласован = Ложь ;
	Иначе
		Док.Согласовать[НомерСтроки].НеСогласован = Истина;
		Док.Согласовать[НомерСтроки].Согласован = Ложь ;
	КонецЕсли;
	
	Док.Записать(РежимЗаписиДокумента.Проведение);

КонецПроцедуры

//&НаКлиенте
//Процедура НоменклатураПромоПередУдалением(Элемент, Отказ)
//	// Вставить содержимое обработчика.
//КонецПроцедуры

//&НаКлиенте
//Процедура Пересчитать(Команда)
//	ПересчитатьНоменклатураПромо() ;
//КонецПроцедуры

//&НаСервере
//Процедура ВернутьСостояниеСозданНаСервере()
//	Док = Объект.Ссылка.ПолучитьОбъект();
//	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Создан;
//	Док.Записать(РежимЗаписиДокумента.Запись);
//КонецПроцедуры

//&НаКлиенте
//Процедура ВернутьСостояниеСоздан(Команда)
//	ВернутьСостояниеСозданНаСервере();
//КонецПроцедуры

//&НаСервере
//Процедура ТЧСогласоватьКомментарийПриИзмененииНаСервере()
//	// Вставить содержимое обработчика.
//КонецПроцедуры

//&НаКлиенте
//Процедура ТЧСогласоватьКомментарийПриИзменении(Элемент) 
//	ЭтаФорма.Записать();
//КонецПроцедуры

//&НаКлиенте
//Процедура СписокНК1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
//	СписокНКВыборНаСервере(ВыбраннаяСтрока);

//КонецПроцедуры

//&НаКлиенте
//Процедура ПредварительныйРасчет(Команда)
//	// Вставить содержимое обработчика.
//КонецПроцедуры

//&НаСервере
//Процедура СогласованНаСервере()
//		Док = Объект.Ссылка.ПолучитьОбъект();
//	Док.СтатусПромоДокумента = Перечисления.Промо_СтатусПромо.Согласован;
//	Док.Записать(РежимЗаписиДокумента.Запись);

//КонецПроцедуры

//&НаКлиенте
//Процедура Согласован(Команда)
//	СогласованНаСервере();
//КонецПроцедуры


////&НаСервере
////Процедура НоменклатураПромоИтогПрибыльПриИзмененииНаСервере() 
////	
////	ИтогОкуп = (-1) * Объект.НоменклатураПромо.Итог("ПрибыльСС") /Объект.НоменклатураПромо.Итог("Прибыль");
////	Если Объект.НоменклатураПромо.Итог("ПрибыльСС") > 0  Тогда
////		ЭтаФорма.Элементы.ИтогОкупаемость = "Окупается в 1 доставку";
////		
////	Иначе 
////		Попытка
////			СР = Объект.НоменклатураПромо.Итог("СрокРеализацииПромо")/Объект.НоменклатураПромо.Количество(); 
////			ЭтаФорма.Элементы.ИтогОкупаемость = Окр(ИтогОкуп + СР - 1,2 ); 
////		Исключение
////		КонецПопытки;
////	КонецЕсли;
////КонецПроцедуры

////&НаКлиенте
////Процедура НоменклатураПромоИтогПрибыльПриИзменении(Элемент)
////	НоменклатураПромоИтогПрибыльПриИзмененииНаСервере();
////КонецПроцедуры


////Док.Записать(РежимЗаписиДокумента.Проведение);  

   
&НаКлиенте
Процедура ПодборНоменклатуры(Команда) 
	Если Не ПроверитьСоглашение() Тогда 
		ЗаполнитьСписокНП(Партнер());  
		ДоступностьНП();
	Иначе
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.Соглашение;
		Сообщить("Укажите соглашение"); 
	КонецЕсли;
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьСписокНП(Партнер) 
	СписокНК.Параметры.УстановитьЗначениеПараметра("ПометкаУдаления",Ложь);	
	СписокНК.Параметры.УстановитьЗначениеПараметра("ВладелецНоменклатуры",Партнер);	 
КонецПроцедуры 

&НаСервере
Функция Партнер()
	Возврат Объект.Партнер.Ссылка;	
КонецФункции


&НаСервере
Процедура ДоступностьНП() 
	ЭтаФорма.Элементы.ПодборНоменклатуры.Видимость = Ложь;
	ЭтаФорма.Элементы.ОчиститьПодбор.Видимость = Ложь;
	ЭтаФорма.Элементы.ЗакрытьПодборНоменклатуры.Видимость = Истина; 
	ЭтаФорма.Элементы.СписокНК.Видимость = Истина;
КонецПроцедуры

&НаСервере
Функция ПроверитьСоглашение()
	Если Не Объект.Соглашение.Пустая() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СписокНКВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокНКВыборНаСервере(ВыбраннаяСтрока);
КонецПроцедуры

&НаСервере
Процедура СписокНКВыборНаСервере(НоменклатураПартнера)
	
	Отбор = Новый Структура;
	Отбор.Вставить("НоменклатураПартнера", НоменклатураПартнера);
	НайденноеЗначение = Объект["НоменклатураПромо"].НайтиСтроки(Отбор);
	
	Если НайденноеЗначение.Количество() = 0 Тогда 
			Т = Объект.НоменклатураПромо.Добавить();
			Т.Бренд = НоменклатураПартнера.Номенклатура.Марка;
			Т.НоменклатураПартнера = НоменклатураПартнера;
			Т.Номенклатура = НоменклатураПартнера.Номенклатура;
			Т.sku = НоменклатураПартнера.ИдентификаторНоменклатуры; 
			Если НоменклатураПартнера.Номенклатура.КоэффициентЕдиницыДляОтчетов > 1 Тогда
				КолШтРасчет = 1; 
			Иначе
				КолШтРасчет = НоменклатураПартнера.Упаковка.Числитель;
			КонецЕсли;
			
			Т.КолШтРасчет = КолШтРасчет; 
			КолШт =  НоменклатураПартнера.Упаковка.Числитель;
			Т.КолШт = НоменклатураПартнера.Упаковка.Числитель; 
			
			//Прайс E-com 2023
			Таб =  ТаблицаПрайс(Объект.Соглашение);
			НайденнаяСтрока = Таб.Найти( НоменклатураПартнера.Номенклатура );
			Если НайденнаяСтрока <> Неопределено Тогда
				Если КолШтРасчет = КолШт Тогда  
					Т.ЦенаЗаШт = НайденнаяСтрока.Цена;
					Т.ТекущаяЦена = КолШтРасчет * НайденнаяСтрока.Цена; 
				Иначе
					Т.ТекущаяЦена = НайденнаяСтрока.Цена;
					Попытка
						Т.ЦенаЗаШт = НайденнаяСтрока.Цена/КолШт;
					Исключение
						Т.ЦенаЗаШт = 0 ;
					КонецПопытки;
				КонецЕсли;				
			ИНаче  
				Т.ТекущаяЦена = 0;
				Сообщить("Для Номенклатуры " + Строка(НоменклатураПартнера.Номенклатура) + " не заполнена цена");
			КонецЕсли; 
			
			//Полная себестоимость для канала Ecom
			ТабСеб =  ТаблицаПрайсСебестоимость();
			НайденнаяСтрокаСеб = ТабСеб.Найти( НоменклатураПартнера.Номенклатура );
			Если НайденнаяСтрокаСеб <> Неопределено Тогда 
				Если КолШтРасчет = КолШт Тогда 
					Т.СебестоимостьШт = НайденнаяСтрокаСеб.Цена ; 
					Т.СебестоимостьSKU = Окр((НайденнаяСтрокаСеб.Цена*Т.КолШт)+(НайденнаяСтрокаСеб.Цена*Т.КолШт*НоменклатураПартнера.Номенклатура.СтавкаНДС.Ставка/100),2); 
				Иначе
					
					Попытка
						Т.СебестоимостьSKU = НайденнаяСтрокаСеб.Цена + (НайденнаяСтрокаСеб.Цена*НоменклатураПартнера.Номенклатура.СтавкаНДС.Ставка/100);
						Т.СебестоимостьШт = НайденнаяСтрокаСеб.Цена/КолШт;
					Исключение  
						Т.СебестоимостьШт = 0;
						Т.СебестоимостьSKU =0;
					КонецПопытки;
				КонецЕсли;	
			Иначе  
				Т.СебестоимостьШт = 0;
			КонецЕсли; 
			//расчет			
			Т.Скидка = 0;
			Т.ЦенаСНдсSku = 0;
			Т.ЦенаСНдсШт = 0;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗакрытьПодборНоменклатурыНаСервере()  
	
	ЭтаФорма.Элементы.ПодборНоменклатуры.Видимость = Истина;
	ЭтаФорма.Элементы.ЗакрытьПодборНоменклатуры.Видимость = Ложь; 
	ЭтаФорма.Элементы.СписокНК.Видимость = Ложь;  
	
	Если Объект.НоменклатураПромо.Количество()>=1 Тогда 
		Отбор = Новый Структура;
		Отбор.Вставить("ТекущаяЦена",0);
			НайденныеСтроки = Объект.НоменклатураПромо.НайтиСтроки(Отбор);
			Для Каждого НСтрока из НайденныеСтроки Цикл 
				Сообщить("Для номенклатуры " + Строка(НСтрока.Номенклатура) + " не заполнена цена");
				Объект.НоменклатураПромо.Удалить(НСтрока);
			КонецЦикла;
		ЭтаФорма.Элементы.ОчиститьПодбор.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПодборНоменклатуры(Команда)
	ЗакрытьПодборНоменклатурыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗакрытьИнфоНаСервере()
	ЭтаФорма.Элементы.ГруппаОш.Видимость = Ложь;	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьИнфо(Команда)
	ЗакрытьИнфоНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОзон(Команда)
	ТЧОзон = ЗаполнитьТЧОзонНаСервере();
КонецПроцедуры

&НаСервере
Функция ЗаполнитьТЧОзонНаСервере()
	ТаблДокум = Новый  ТабличныйДокумент;
	ТаблДокум.Очистить(); 
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СХК_ИмпортОзон");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка"); 
	ТаблДокум.Вывести(ОбластьШапка); 
	
	Для Каждого стр из Объект.НоменклатураПромо Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("Товары");
		ОбластьСтрока.Параметры.Номер = стр.ИсходныйНомерСтроки;
		ОбластьСтрока.Параметры.Бренд = стр.Бренд;
		ОбластьСтрока.Параметры.НоменклатураПартнера = стр.НоменклатураПартнера;
		ОбластьСтрока.Параметры.SKU = стр.sku;
		ОбластьСтрока.Параметры.КолШт = стр.КолШт;
		ОбластьСтрока.Параметры.РегулярнаяЦенабезНДС = ?(ЗначениеЗаполнено(стр.ТекущаяЦена),стр.ТекущаяЦена,"0,00");//стр.ТекущаяЦена;
		ОбластьСтрока.Параметры.ЦенаЗаШт = ?(ЗначениеЗаполнено(стр.ЦенаЗаШт),стр.ЦенаЗаШт,"0,00");//стр.ЦенаЗаШт;
		ОбластьСтрока.Параметры.ПолнаяССШТБезНдс = ?(ЗначениеЗаполнено(стр.СебестоимостьШт),стр.СебестоимостьШт,"0,00");//стр.СебестоимостьШт;
		ОбластьСтрока.Параметры.СебестоимостьSKUСНДС = ?(ЗначениеЗаполнено(стр.СебестоимостьSKU),стр.СебестоимостьSKU,"0,00");//стр.СебестоимостьSKU;
		ОбластьСтрока.Параметры.Скидка = стр.Скидка;
		ОбластьСтрока.Параметры.ЦенаСНДСЗаSKU = ?(ЗначениеЗаполнено(стр.ЦенаСНдсSku),стр.ЦенаСНдсSku,"0,00");//стр.ЦенаСНдсSku;
		ОбластьСтрока.Параметры.ЦенаСНДСЗаШт = ?(ЗначениеЗаполнено(стр.ЦенаСНдсШт),стр.ЦенаСНдсШт,"0,00");//стр.ЦенаСНдсШт;
		ОбластьСтрока.Параметры.ОбъемПРОМОШт = стр.ОбъемПромоШт;
		ОбластьСтрока.Параметры.ОбъемПРОМОРуб = ?(ЗначениеЗаполнено(стр.ОбъемПромоРуб),стр.ОбъемПромоРуб,"0,00");
		ОбластьСтрока.Параметры.СебестоимостьПРОМОРуб = ?(ЗначениеЗаполнено(стр.СебестоимостьПромо),стр.СебестоимостьПромо,"0,00");//стр.СебестоимостьПромо;
		ОбластьСтрока.Параметры.Комиссия = ?(ЗначениеЗаполнено(стр.Комиссия),стр.Комиссия,"0,00");//стр.Комиссия;
		ОбластьСтрока.Параметры.Логистика = ?(ЗначениеЗаполнено(стр.Логистика),стр.Логистика,"0,00");//стр.Логистика;
		ОбластьСтрока.Параметры.ПоследняяМиля = ?(ЗначениеЗаполнено(стр.ПоследняяМиля),стр.ПоследняяМиля,"0,00");//стр.ПоследняяМиля;
		ОбластьСтрока.Параметры.Локализация = ?(ЗначениеЗаполнено(стр.Локализация),стр.Локализация,"0,00");//стр.Локализация;
		ОбластьСтрока.Параметры.Маркетинг = ?(ЗначениеЗаполнено(стр.Маркетинг),стр.Маркетинг,"0,00");//стр.Маркетинг;
		ОбластьСтрока.Параметры.РентабельностьМаркетинг = ?(ЗначениеЗаполнено(стр.РентабельностьМаркетинг),стр.РентабельностьМаркетинг,"0,00");//стр.РентабельностьМаркетинг;
		ОбластьСтрока.Параметры.РентабельностьБезМаркетинг = ?(ЗначениеЗаполнено(стр.РентабельностьБезМаркетинг),стр.РентабельностьБезМаркетинг,"0,00");//стр.РентабельностьБезМаркетинг;
		ОбластьСтрока.Параметры.ПрибылОтПолнойССРуб = ?(ЗначениеЗаполнено(стр.ПрибыльОтПолнойСС),стр.ПрибыльОтПолнойСС,"0,00");//стр.ПрибыльОтПолнойСС;
		ОбластьСтрока.Параметры.ROI = ?(ЗначениеЗаполнено(стр.ROI),стр.ROI,"0,00");//стр.ROI;
		ОбластьСтрока.Параметры.ОкупаемостьМесяцев = стр.ОкупаемостьМес;
		ТаблДокум.Вывести(ОбластьСтрока);
	КонецЦикла;
	ТаблДокум.ФиксацияСверху = 1;
	
	Возврат ТаблДокум;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьОзонНаСервере()
	М = Новый Массив;
	
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТЧОзон.Область(1, 1, ТЧОзон.ВысотаТаблицы, 25));
	Построитель.Выполнить();
	Результат = Построитель.Результат.Выгрузить();	
	
	Т = НоменклатураКонтрагентов();
	
	Объект.НоменклатураПромо.Очистить();
	
	Для Каждого стр из Результат Цикл
		Если стр.SKU <> "" Тогда
			НайденнаяСтрока = Т.Найти(стр.SKU );
			Если НайденнаяСтрока <> Неопределено Тогда 
				Попытка
				Строка = Объект.НоменклатураПромо.Добавить();
				Строка.Бренд = НайденнаяСтрока.НоменклатураМарка;
				Строка.sku = НайденнаяСтрока.ИдентификаторНоменклатуры;
				Строка.НоменклатураПартнера = НайденнаяСтрока.Ссылка;  
				Строка.КолШт = Число(стр.Кол_штВУп);
				Строка.Номенклатура = НайденнаяСтрока.Номенклатура;
				Строка.ТекущаяЦена = Число(стр.РегулярнаяЦенаБезНДС);
				Строка.ЦенаЗаШт = Число(стр.ЦенаЗаШт);
				Строка.СебестоимостьШт = Число(стр.ПолнаяС_сШт_безНДС_);
				Строка.СебестоимостьSKU = Число(стр.СебестоимостьSKU_сНДС_);
				Строка.Скидка = Число(стр.Скидка);
				Строка.ЦенаСНдсSku = Число(стр.ЦенаСНДСЗаSKU);
				Строка.ЦенаСНдсШт = Число(стр.ЦенаСНДСЗаШт);
				Строка.ОбъемПромоШт = Число(стр.ОбъемПРОМО_Шт);
				Строка.ОбъемПромоРуб = Число(стр.ОбъемПРОМО_Руб_); 
				Строка.СебестоимостьПромо = Число(стр.СебестоимостьПРОМО_Руб);
				Строка.Комиссия = Число(стр.Комиссия);
				Строка.Логистика = Число(стр.Логистика);
				Строка.ПоследняяМиля = Число(стр.ПоследняяМиля);
				Строка.Локализация = Число(стр.Локализация);
				Строка.Маркетинг = Число(стр.Маркетинг);
				Строка.РентабельностьМаркетинг = Число(стр.РентабельностьМаркетинг);
				Строка.РентабельностьБезМаркетинг = Число(стр.РентабельностьБезМаркетинг);
				Строка.ПрибыльОтПолнойСС = Число(стр.ПрибыльОтПолнойС_с_Руб);
				Строка.ROI = Число(стр.ROI__);
				Строка.ОкупаемостьМес = стр.Окупаемость_Месяцев;  
			Исключение 
				Сообщить("Не указана скидка или количество" + Строка(стр.SKU) );
                    КонецПопытки;
					Иначе 
				Сообщить("Не удалось найти номенклатуру " + Строка(стр.SKU) );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
    РасчетИтогов();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОзон(Команда)
	ЗагрузитьОзонНаСервере();
КонецПроцедуры




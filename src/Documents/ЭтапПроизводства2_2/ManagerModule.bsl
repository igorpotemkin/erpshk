
&Вместо("СформироватьПечатнуюФормуЗаданиеНаПроизводство")
Функция Расш1_СформироватьПечатнуюФормуЗаданиеНаПроизводство(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЭтапПроизводства2_2_ЗаданиеНаПроизводство";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЭтапПроизводства2_2.ПФ_MXL_ЗаданиеНаПроизводство");
	ПервыйДокумент = Истина;
	
	ДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыЗаданиеНаПроизводство(МассивОбъектов, ПараметрыПечати);
	ВыборкаДокумент = ДанныеДляПечати.ВыборкаДокумент;
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаданиеНаПроизводствоВывестиЗаголовок(ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		ЗаданиеНаПроизводствоВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(
		ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Истина);
		
		ЗаданиеНаПроизводствоВывестиМатериалы(
		ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати);
		
		ЗаданиеНаПроизводствоВывестиВыходныеИзделия(
		ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати);
		
		ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(
		ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Ложь);
		
		ЗаданиеНаПроизводствоВывестиОперации(
		ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
		ТабличныйДокумент,
		НомерСтрокиНачало,
		ОбъектыПечати,
		ВыборкаДокумент.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&Вместо("ЗаданиеНаПроизводствоВывестиМатериалы")
Процедура Расш1_ЗаданиеНаПроизводствоВывестиМатериалы(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати)  
	
	Если НЕ ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати) Тогда
		Возврат;
	Иначе
		
		ВыборкаМатериалы = ДанныеДляПечати.ВыборкаМатериалы; 
		
		ОбеспечениеМатериаламиИРаботами = ВыборкаДокумент.Ссылка.ОбеспечениеМатериаламиИРаботами.Выгрузить(); 
		ОбеспечениеМатериаламиИРаботами.Свернуть("Номенклатура","КоличествоУпаковок");
		
		ЭкономияМатериалов = ВыборкаДокумент.Ссылка.ЭкономияМатериалов.Выгрузить();; 
		ЭкономияМатериалов.Свернуть("Номенклатура","КоличествоУпаковок");
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокумент.Ссылка);
		Если НЕ ВыборкаМатериалы.НайтиСледующий(СтруктураПоиска) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов = КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов = КолонкаКодов.ПредставлениеКолонки;
	ВыводитьКоды = ЗначениеЗаполнено(ИмяКолонкиКодов);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицыМатериалы");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ВыводитьКоды Тогда
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМатериалы_СКодом");
		ОбластьШапка.Параметры.ИмяКолонкиКодов = ПредставлениеКолонкиКодов;
		
		ИмяОбластиСтрока = "СтрокаТаблицыМатериалы_СКодом";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	Иначе
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМатериалы_БезКода");
		
		ИмяОбластиСтрока = "СтрокаТаблицыМатериалы_БезКода";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	КонецЕсли;
	
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	НомерСтроки = 0;
	Выборка = ВыборкаМатериалы.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура",Выборка.Номенклатура);
		
		СтрокиРасход = ОбеспечениеМатериаламиИРаботами.НайтиСтроки(Отбор);
		Если СтрокиРасход.Количество()>=1 Тогда
			ОбластьСтрока.Параметры.КоличествоРасход = СтрокиРасход[0].КоличествоУпаковок; 
		КонецЕсли;
		
		СтрокиЭкономия = ЭкономияМатериалов.НайтиСтроки(Отбор);
		Если СтрокиЭкономия.Количество()>=1 Тогда
			ОбластьСтрока.Параметры.КоличествоВозврат = СтрокиЭкономия[0].КоличествоУпаковок; 
		КонецЕсли;
		
		
		
		
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		Если ВыводитьКоды Тогда
			ОбластьСтрока.Параметры.Артикул = Выборка[ИмяКолонкиКодов];
		КонецЕсли;
		
		ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
		ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
		
		ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		Выборка.НоменклатураНаименованиеПолное,
		Выборка.ХарактеристикаНаименованиеПолное,
		,
		,
		ДопПараметрыПредставлениеНоменклатуры);
		ОбластьСтрока.Параметры.ПредставлениеНоменклатуры = ПредставлениеНоменклатуры;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	Если ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВМатериалы(ПараметрыПечати) Тогда
		
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		ЗаданиеНаПроизводствоВывестиПустыеСтроки(ТабличныйДокумент, ОбластьСтрока, НомерСтроки);
		
	КонецЕсли;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицыМатериалы");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

&Вместо("ПолучитьДанныеДляПечатнойФормыЗаданиеНаПроизводство")
Функция Расш1_ПолучитьДанныеДляПечатнойФормыЗаданиеНаПроизводство(МассивОбъектов, ПараметрыПечати)
	
	ТекстыЗапросовПакета = Новый Массив;
	ИндексыРезультатов = Новый Соответствие;
	Индекс = 0;
	
	#Область ТекстЗапросаШапка
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка            КАК Ссылка,
	|	ДанныеДокумента.Номер             КАК Номер,
	|	ДанныеДокумента.НаименованиеЭтапа КАК НаименованиеЭтапа,
	|	ДанныеДокумента.Дата             КАК ПлановоеОкончаниеЭтапа,
	|	ДанныеДокумента.Распоряжение                КАК Распоряжение,
	|	ДанныеДокумента.Распоряжение.Представление  КАК ПредставлениеРаспоряжения,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	ДанныеДокумента.Подразделение.Представление КАК ПредставлениеПодразделения,
	|
	|	ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура                              КАК Изделие,
	|	ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеХарактеристика                            КАК ИзделиеХарактеристика,
	|	ЕСТЬNULL(ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура.Наименование, """") КАК ИзделиеПредставление,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеХарактеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура.ИспользованиеХарактеристик В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			ТОГДА ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеХарактеристика.Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                                                       КАК ИзделиеХарактеристикаПредставление,
	|
	|	ДанныеДокумента.Спецификация                                                                КАК Спецификация,
	|	ДанныеДокумента.Спецификация.Представление                                                  КАК ПредставлениеСпецификации,
	|	ДанныеДокумента.Этап                                                                        КАК ЭтапСпецификации,
	|
	|	ДанныеДокумента.Подразделение.ИспользоватьПооперационноеУправление  КАК ИспользоватьПооперационноеУправление,
	|
	|	&ПараметрыТехпроцесса,
	|
	|	ДанныеДокумента.КоличествоУпаковокПлан     КАК Количество,   
	|	ДанныеДокумента.КоличествоУпаковокФакт     КАК КоличествоУпаковокФакт,
	|	ЕСТЬNULL(&КоэффициентУпаковки, 1)          КАК КоэффициентУпаковки,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.УпаковкаПлан = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.УпаковкаПлан)
	|	КОНЕЦ                                      КАК ПредставлениеЕдиницыИзмерения,
	|
	//|	ЕСТЬNULL(ГрафикПроизводства.Окончание, ДАТАВРЕМЯ(1, 1, 1)) КАК ПлановоеОкончаниеЭтапа,
	|
	|	ДанныеДокумента.Исполнитель.Представление КАК ПредставлениеИсполнителя,
	|
	|	ЕСТЬNULL(Техпроцесс.ИдентификаторПервойОперации, 0) КАК ИдентификаторПервойОперации,
	|	ЕСТЬNULL(Техпроцесс.ИдентификаторПоследнейОперации, 0) КАК ИдентификаторПоследнейОперации
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО ДанныеДокумента.Ссылка = ГрафикПроизводства.Этап
	|			И ДанныеДокумента.Распоряжение = ГрафикПроизводства.ЗаказНаПроизводство
	|			И (ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТехнологическиеПроцессыЭтаповПроизводства КАК Техпроцесс
	|		ПО ДанныеДокумента.Ссылка = Техпроцесс.Этап
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ТекстЗапросаКоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
	"ДанныеДокумента.УпаковкаПлан",
	"ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура");
	
	ТекстЗапроса = СтрЗаменить(
	ТекстЗапроса,
	"&КоэффициентУпаковки",
	ТекстЗапросаКоэффициентУпаковки);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&ПараметрыТехпроцесса",
	РедакторПроизводственногоПроцесса.ТекстЗапросаПараметрыТехпроцессаЭтапа("ДанныеДокумента"));
	
	ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
	ИндексыРезультатов.Вставить("ВыборкаДокумент", Индекс);
	Индекс = Индекс + 1;
	
	#КонецОбласти
	
	#Область ТекстЗапросаСмежныеЭтапы
	
	Если ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТСвязиЭтапов.СледующийЭтап КАК Ссылка,
		|	ВТСвязиЭтапов.Этап КАК ЭтапПроизводства,
		|	&ВТСвязиЭтаповПредставлениеЭтап КАК ПредставлениеЭтапа,
		|	ВЫРАЗИТЬ(ВТСвязиЭтапов.Этап КАК Документ.ЭтапПроизводства2_2).Подразделение КАК Подразделение
		|ИЗ
		|	ВТСвязиЭтапов КАК ВТСвязиЭтапов
		|ГДЕ
		|	ВТСвязиЭтапов.СледующийЭтап В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ЭтапПроизводства
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("ВТСвязиЭтапов.Этап");
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВТСвязиЭтаповПредставлениеЭтап",
		ТекстПредставлениеЭтапа);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаПредшественники", Индекс);
		Индекс = Индекс + 1;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТСвязиЭтапов.Этап КАК Ссылка,
		|	ВТСвязиЭтапов.СледующийЭтап КАК ЭтапПроизводства,
		|	&ВТСвязиЭтаповПредставлениеСледующийЭтап КАК ПредставлениеЭтапа,
		|	ВЫРАЗИТЬ(ВТСвязиЭтапов.СледующийЭтап КАК Документ.ЭтапПроизводства2_2).Подразделение КАК Подразделение
		|ИЗ
		|	ВТСвязиЭтапов КАК ВТСвязиЭтапов
		|ГДЕ
		|	ВТСвязиЭтапов.Этап В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ЭтапПроизводства
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("ВТСвязиЭтапов.СледующийЭтап");
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВТСвязиЭтаповПредставлениеСледующийЭтап",
		ТекстПредставлениеЭтапа);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаПоследователи", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ТекстЗапросаМатериалы
	
	Если ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати) Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Материалы.Ссылка КАК Ссылка,
		|	Материалы.Номенклатура КАК Номенклатура,
		|	Материалы.Номенклатура.Код КАК Код,
		|	Материалы.Номенклатура.Артикул КАК Артикул,
		|	Материалы.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	Материалы.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
		|	Материалы.Склад КАК Склад,
		|	Материалы.Склад.Представление КАК ПредставлениеСклада,
		|	ВЫБОР
		|		КОГДА Материалы.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(Материалы.Номенклатура.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Материалы.Упаковка)
		|	КОНЕЦ КАК ПредставлениеЕдиницыИзмерения,
		|	Материалы.КоличествоУпаковок КАК Количество
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Материалы
		|ГДЕ
		|	Материалы.Ссылка В(&МассивОбъектов)
		|	И НЕ Материалы.Отменено
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Материалы.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаМатериалы", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ТекстЗапросаВыходныеИзделия
	
	Если ЗаданиеНаПроизводствоПечататьВыходныеИзделия(ПараметрыПечати) Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Выпуск.Ссылка КАК Ссылка,
		|	Выпуск.Номенклатура КАК Номенклатура,
		|	Выпуск.Характеристика КАК Характеристика,
		|	Выпуск.Получатель КАК Получатель,
		|	ВЫБОР
		|		КОГДА Выпуск.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(Выпуск.Номенклатура.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Выпуск.Упаковка)
		|	КОНЕЦ КАК ПредставлениеЕдиницыИзмерения,		
		|	Выпуск.КоличествоУпаковок КАК Количество,
		|	Выпуск.Назначение КАК Назначение,
		|	Выпуск.ЭтапПотребитель КАК ЭтапПотребитель,
		|	Выпуск.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТВыпуск
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Выпуск
		|ГДЕ
		|	Выпуск.Ссылка В(&МассивОбъектов)
		|	И НЕ Выпуск.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПобочныйВыпуск.Ссылка,
		|	ПобочныйВыпуск.Номенклатура,
		|	ПобочныйВыпуск.Характеристика,
		|	ПобочныйВыпуск.Получатель,
		|	ВЫБОР
		|		КОГДА ПобочныйВыпуск.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ПобочныйВыпуск.Номенклатура.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПобочныйВыпуск.Упаковка)
		|	КОНЕЦ,
		|	ПобочныйВыпуск.КоличествоУпаковок,
		|	ПобочныйВыпуск.Назначение,
		|	ПобочныйВыпуск.ЭтапПотребитель,
		|	ПобочныйВыпуск.НомерСтроки
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ПобочныйВыпуск
		|ГДЕ
		|	ПобочныйВыпуск.Ссылка В(&МассивОбъектов)
		|	И НЕ ПобочныйВыпуск.Отменено
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выпуск.Ссылка КАК Ссылка,
		|	Выпуск.Номенклатура КАК Номенклатура,
		|	Выпуск.Номенклатура.Код КАК Код,
		|	Выпуск.Номенклатура.Артикул КАК Артикул,
		|	Выпуск.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	Выпуск.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
		|	ВЫБОР
		|		КОГДА Выпуск.ЭтапПотребитель <> &ПустаяСсылкаЭтап 
		|			ТОГДА &ПредставлениеЭтапа
		|		ИНАЧЕ Выпуск.Назначение.Представление
		|	КОНЕЦ КАК ПредставлениеНазначения,
		|	Выпуск.Получатель КАК Получатель,
		|	Выпуск.Получатель.Представление КАК ПредставлениеПолучателя,
		|	Выпуск.ПредставлениеЕдиницыИзмерения КАК ПредставлениеЕдиницыИзмерения,
		|	Выпуск.Количество КАК Количество
		|ИЗ
		|	ВТВыпуск КАК Выпуск
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Выпуск.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("Выпуск.ЭтапПотребитель");
		
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ПредставлениеЭтапа",
		ТекстПредставлениеЭтапа);
		
		Индекс = Индекс + 1;
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаВыходныеИзделия", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СборкаТекста
	
	Разделитель =
	"
	|;
	|/////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросовПакета, Разделитель);
	
	#КонецОбласти
	
	#Область ВыполнениеЗапроса
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПустаяСсылкаЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	Запрос.УстановитьПараметр("ХранитьОперацииВРесурсныхСпецификациях", ПолучитьФункциональнуюОпцию("ХранитьОперацииВРесурсныхСпецификациях"));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		СоздатьВТСвязиЭтапов(Запрос.МенеджерВременныхТаблиц, МассивОбъектов);
	КонецЕсли;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();  
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ДанныеДляПечати = Новый Структура;
	
	Для каждого Результат Из ИндексыРезультатов Цикл
		
		РезультатЗапроса = МассивРезультатов[Результат.Значение]; // РезультатЗапроса
		Выборка = РезультатЗапроса.Выбрать(
		?(Результат.Ключ = "ВыборкаДокумент",
		ОбходРезультатаЗапроса.Прямой,
		ОбходРезультатаЗапроса.ПоГруппировкам));
		ДанныеДляПечати.Вставить(Результат.Ключ, Выборка);
		
	КонецЦикла;
	
	#КонецОбласти
	
	Возврат ДанныеДляПечати;
КонецФункции

&Вместо("ЗаданиеНаПроизводствоВывестиШапку")
Процедура Расш1_ЗаданиеНаПроизводствоВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	ФорматнаяСтрока = УправлениеПроизводством.ФорматнаяСтрокаДляДатыГрафикаПроизводства();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	
	Область.Параметры.Заполнить(ВыборкаДокумент);
	
	Область.Параметры.ПредставлениеИзделия = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
	ВыборкаДокумент.ИзделиеПредставление, 
	ВыборкаДокумент.ИзделиеХарактеристикаПредставление);
	
	Область.Параметры.ПлановоеОкончаниеЭтапа = Формат(ВыборкаДокумент.ПлановоеОкончаниеЭтапа, ФорматнаяСтрока);
	
	Область.Параметры.ПредставлениеИсполнителя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокумент.Ссылка.Ответственный, ВыборкаДокумент.Ссылка.Дата);
	
	ТабличныйДокумент.Вывести(Область);
	
КонецПроцедуры


&ИзменениеИКонтроль("ЗаполнитьСтрокуКнигиПродаж")
Процедура Расш1_ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, Секция, ЗаписьКниги, НомерСтроки, ДополнительнаяИнформация, ДетальнаяЗапись)

	Если ДетальнаяЗапись <> Неопределено Тогда
		ПараметрыЗаполнения = ДетальнаяЗапись;
	Иначе
		ПараметрыЗаполнения = ЗаписьКниги;
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(Секция, ПараметрыЗаполнения);

	// Универсальная структура для заполнения книги по разным версиям постановления.
	СоставСтроки = Новый Структура;

	// В соответствии с письмом ФНС России от 16.01.2018 N СД-4-3/480@ операции по реализации 
	// товаров п.8 ст.161 НК РФ отражаются с прочерками "-" в графах 13б, 17.
	Если ПараметрыЗаполнения.Событие = Перечисления.СобытияПоНДСПродажи.НалогИсчисляетПокупатель Тогда 
		ПараметрВсегоПродаж = "-";
		ПараметрНДС20       = "-";
		ПараметрНДС18       = "-";
	Иначе
		ПараметрВсегоПродаж = ЗаписьКниги.ВсегоПродаж;
		ПараметрНДС20       = ЗаписьКниги.НДС20;
		ПараметрНДС18       = ЗаписьКниги.НДС18;
	КонецЕсли;
	СоставСтроки.Вставить("ВсегоПродаж",       ПараметрВсегоПродаж);
	СоставСтроки.Вставить("СуммаБезНДС20",     ЗаписьКниги.СуммаБезНДС20);
	СоставСтроки.Вставить("НДС20",             ПараметрНДС20);
	СоставСтроки.Вставить("СуммаБезНДС18",     ЗаписьКниги.СуммаБезНДС18);
	СоставСтроки.Вставить("НДС18",             ПараметрНДС18);
	СоставСтроки.Вставить("СуммаБезНДС10",     ЗаписьКниги.СуммаБезНДС10);
	СоставСтроки.Вставить("НДС10",             ЗаписьКниги.НДС10);
	СоставСтроки.Вставить("СуммаБезНДС7",      ЗаписьКниги.СуммаБезНДС7);
	СоставСтроки.Вставить("НДС7",              ЗаписьКниги.НДС7);
	СоставСтроки.Вставить("СуммаБезНДС5",      ЗаписьКниги.СуммаБезНДС5);
	СоставСтроки.Вставить("НДС5",              ЗаписьКниги.НДС5);
	СоставСтроки.Вставить("НДС0",              ЗаписьКниги.НДС0);
	СоставСтроки.Вставить("СуммаСовсемБезНДС", ЗаписьКниги.СуммаСовсемБезНДС);

	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		СоставСтроки.Вставить("СчетФактура", ЗаписьКниги.СчетФактураДокумент);
	ИначеЕсли ДетальнаяЗапись <> Неопределено Тогда
		СоставСтроки.Вставить("СчетФактура", ДетальнаяЗапись.СчетФактура);
	КонецЕсли;

	ПредставлениеСФ = УчетНДС.ОпределитьДатуИНомерСФ(ПараметрыЗаполнения);

	СоставСтроки.Вставить("ДатаНомер",                   ПредставлениеСФ.ДатаНомер);
	СоставСтроки.Вставить("НомерДата",                   ПредставлениеСФ.НомерДата);
	СоставСтроки.Вставить("НомерОтДата",                 ПредставлениеСФ.НомерОтДата);
	#Вставка
	  //zaitsev@syspod.ru #77407
	Документ=ПараметрыЗаполнения.СчетФактура;    
  
	Если ТИПЗНЧ(Документ)=Тип("ДокументСсылка.СчетФактураКомиссионеру") и Документ.Покупатели.Количество() >0 и ЗначениеЗаполнено(Документ.Покупатели[0].НомерСчетаФактурыРасширенный) тогда      
	
		//СоставСтроки.НомерОтДата=Документ.Покупатели[0].НомерСчетаФактурыРасширенный;  
		//СоставСтроки.НомерОтДатаОплаты=Документ.Покупатели[0].НомерСчетаФактурыРасширенный;
		СоставСтроки.НомерОтДата=Документ.Покупатели[0].НомерСчетаФактурыРасширенный +" от " +Формат(Документ.Дата,"ДФ=dd.MM.yyyy");
	КонецЕсли;
    //zaitsev@syspod.ru #77407
	#КонецВставки

	СоставСтроки.Вставить("НомерДатаИсправления",        ПредставлениеСФ.НомерДатаИсправленный);
	СоставСтроки.Вставить("НомерОтДатаИсправленный",     ПредставлениеСФ.НомерОтДатаИсправленный);

	СоставСтроки.Вставить("НомерДатаКорректировки",      ПредставлениеСФ.НомерДатаКорректировочный);
	СоставСтроки.Вставить("НомерОтДатаКорректировочный", ПредставлениеСФ.НомерОтДатаКорректировочный);

	СоставСтроки.Вставить("НомерДатаИсправленияКорректировки",
	ПредставлениеСФ.НомерДатаИсправленныйКорректировочный);
	СоставСтроки.Вставить("НомерОтДатаИсправленныйКорректировочный",
	ПредставлениеСФ.НомерОтДатаИсправленныйКорректировочный);

	СоставСтроки.Вставить("Ном",         НомерСтроки);
	СоставСтроки.Вставить("КодОперации", ПараметрыЗаполнения.КодВидаОперации);

	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Покупатель) Тогда
		Если ПараметрыЗаполнения.СводныйКомиссионный Тогда
			Секция.Покупатель = "";
			Секция.Графа8 = "";
		Иначе
			СоставСтроки.Вставить("Покупатель",    ПараметрыЗаполнения.Покупатель);
			СоставСтроки.Вставить("ПокупательИНН", ПараметрыЗаполнения.ПокупательИНН);
			СоставСтроки.Вставить("ПокупательКПП", ПараметрыЗаполнения.ПокупательКПП);
			СоставСтроки.Вставить("Графа8", Строка(ПараметрыЗаполнения.ПокупательИНН) 
			+ ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПокупательКПП), "/" + Строка(ПараметрыЗаполнения.ПокупательКПП), ""));
		КонецЕсли;
		СоставСтроки.Вставить("Посредник", ПараметрыЗаполнения.Посредник);
		СоставСтроки.Вставить("ПосредникИНН_КПП", "" + Строка(ПараметрыЗаполнения.ПосредникИНН) 
		+ ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПосредникКПП), "/" + Строка(ПараметрыЗаполнения.ПосредникКПП), ""));

	ИначеЕсли ПараметрыЗаполнения.КодВидаОперации = "10" Тогда
		Секция.Покупатель = "--";
		Секция.Графа8     = "";
	КонецЕсли;

	СоставСтроки.Вставить("Валюта", 
	?(ЗначениеЗаполнено(ПараметрыЗаполнения.Валюта),
	"" + ПараметрыЗаполнения.Валюта + ", " + ПараметрыЗаполнения.ВалютаКод,  ""));
	СоставСтроки.Вставить("ВсегоПродажВВалюте", 
	?(ЗначениеЗаполнено(ПараметрыЗаполнения.Валюта), ПараметрыЗаполнения.ВсегоПродажВВалюте, ""));

	МассивДокПдтвОпл = Новый Массив(); // Массив документов оплаты НДС для декларации с 1 кв 2015 года

	ТекстОплаты = "";
	СписокДатОплат = Новый СписокЗначений();
	ТекстОплатыСНомером = "";
	ТекстНомерОтДатаОплаты = "";
	СписокНомеровИДатОплат = Новый СписокЗначений();

	СчетаФактуры = Новый Массив();

	Если ДетальнаяЗапись = Неопределено Тогда

		Если ЗначениеЗаполнено(ЗаписьКниги.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено Тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", "," + Символы.ПС) 
				+ Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;

		Если ЗначениеЗаполнено(ЗаписьКниги.НомерДокументаОплаты) Тогда

			НомерДатаОплаты = СтрШаблон(НСтр("ru = '%1;%2';
			|en = '%1;%2'"), 
			ЗаписьКниги.НомерДокументаОплаты, Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
			НомерОтДатаОплаты = СтрШаблон(НСтр("ru = '%1 от %2';
			|en = '%1 from %2'"), 
			ЗаписьКниги.НомерДокументаОплаты, Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));

			Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено Тогда

				ТекстОплатыСНомером = ТекстОплатыСНомером 
				+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", "," + Символы.ПС) + НомерДатаОплаты;
				ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
				+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";" + Символы.ПС) + НомерОтДатаОплаты;
				СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);

				Если СтруктураПараметров.ЗаполнениеДекларации Тогда
					СтруктураДокПдтвОпл = Новый Структура("НомДокПдтвОпл,ДатаДокПдтвОпл");
					СтруктураДокПдтвОпл.НомДокПдтвОпл = ЗаписьКниги.НомерДокументаОплаты;
				Иначе
					СтруктураДокПдтвОпл = Новый Структура("НомерДокПдтвОпл,ДатаДокПдтвОпл");
					СтруктураДокПдтвОпл.НомерДокПдтвОпл = ЗаписьКниги.НомерДокументаОплаты;
				КонецЕсли;
				СтруктураДокПдтвОпл.ДатаДокПдтвОпл = Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
				МассивДокПдтвОпл.Добавить(СтруктураДокПдтвОпл);

			КонецЕсли;
		КонецЕсли;

		СчетаФактуры.Добавить(ЗаписьКниги.СчетФактура);

	Иначе

		// Получаем новую выборку для обхода, ДетальнуюЗапись не используем, она всегда спозиционирована на первую строку.
		СтрокаЗаписи = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);

		Пока СтрокаЗаписи.Следующий() Цикл

			Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
				Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено Тогда
					ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", "," + Символы.ПС) 
					+ Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
					СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЕсли;

			Если ЗначениеЗаполнено(СтрокаЗаписи.НомерДокументаОплаты) Тогда

				НомерДатаОплаты = СтрШаблон(НСтр("ru = '%1;%2';
				|en = '%1;%2'"), 
				СтрокаЗаписи.НомерДокументаОплаты, Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
				НомерОтДатаОплаты = СтрШаблон(НСтр("ru = '%1 от %2';
				|en = '%1 from %2'"), 
				СтрокаЗаписи.НомерДокументаОплаты, Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));

				Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено Тогда

					ТекстОплатыСНомером = ТекстОплатыСНомером 
					+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", "," + Символы.ПС) + НомерДатаОплаты;
					ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
					+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";" + Символы.ПС) + НомерОтДатаОплаты;
					СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);

					Если СтруктураПараметров.ЗаполнениеДекларации Тогда
						СтруктураДокПдтвОпл = Новый Структура("НомДокПдтвОпл,ДатаДокПдтвОпл");
						СтруктураДокПдтвОпл.НомДокПдтвОпл = СтрокаЗаписи.НомерДокументаОплаты;
					Иначе
						СтруктураДокПдтвОпл = Новый Структура("НомерДокПдтвОпл,ДатаДокПдтвОпл");
						СтруктураДокПдтвОпл.НомерДокПдтвОпл = СтрокаЗаписи.НомерДокументаОплаты;
					КонецЕсли;
					СтруктураДокПдтвОпл.ДатаДокПдтвОпл = Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					МассивДокПдтвОпл.Добавить(СтруктураДокПдтвОпл);

				КонецЕсли;
			КонецЕсли;

			СчетаФактуры.Добавить(СтрокаЗаписи.СчетФактура);

		КонецЦикла; // СтрокаЗаписи.Следующий()

	КонецЕсли;

	СоставСтроки.Вставить("НомерДатаОплаты",   ТекстОплатыСНомером);
	СоставСтроки.Вставить("НомерОтДатаОплаты", ТекстНомерОтДатаОплаты);
	СоставСтроки.Вставить("ДатаОплаты",        ТекстОплаты);

	// Код вида товара (ТНВЭД) и РНПТ
	СчетаФактуры = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(СчетаФактуры);
	СтрокаКодВидаТовара = "";
	МассивСвРегНом = Новый Массив();

	Для Каждого СчетФактура Из СчетаФактуры Цикл
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СтрокаДополнительнойИнформации = ДополнительнаяИнформация.Найти(СчетФактура, "Ссылка"); 
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		Если СтрокаДополнительнойИнформации <> Неопределено Тогда
			Если ЗначениеЗаполнено(СтрокаДополнительнойИнформации.ТНВЭД) Тогда
				СтрокаКодВидаТовара = СтрокаДополнительнойИнформации.ТНВЭД;
			КонецЕсли;

			Если ЗначениеЗаполнено(СтрокаДополнительнойИнформации.СвРегНом) Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСвРегНом, СтрокаДополнительнойИнформации.СвРегНом);
			КонецЕсли;

			Если ЗначениеЗаполнено(СтрокаДополнительнойИнформации.СвРегНомТД) Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСвРегНом, СтрокаДополнительнойИнформации.СвРегНомТД);
			КонецЕсли;

		КонецЕсли;
	КонецЦикла;

	Если ПараметрыЗаполнения.ВсегоПродаж < 0 Тогда
		// Для сторнирующей записи необходимо отразить показатели прослеживаемости с отрицательным знаком
		УчетНДСПереопределяемый.ПреобразоватьПоказателиРНПТКСторнирующейЗаписи(МассивСвРегНом);
	КонецЕсли;

	Если ЗначениеЗаполнено(МассивСвРегНом) Тогда
		// Выводим первую строку и сохраняем коллекцию в параметрах формирования
		ПервыйРНПТ = МассивСвРегНом[0];
		СоставСтроки.Вставить("РегНомер",     ПервыйРНПТ.РегНомПросл);
		СоставСтроки.Вставить("КолПрослеж",   ПервыйРНПТ.КолТовПросл);
		СоставСтроки.Вставить("СтоимПрослеж", ПервыйРНПТ.СтоимТовПросл);
		СоставСтроки.Вставить("ЕдПрослеж",    ПервыйРНПТ.ОКЕИ);
		СтруктураПараметров.Вставить("МассивСвРегНом", МассивСвРегНом);
	Иначе
		СоставСтроки.Вставить("РегНомер",     "");
		СоставСтроки.Вставить("КолПрослеж",   "");
		СоставСтроки.Вставить("СтоимПрослеж", "");
		СоставСтроки.Вставить("ЕдПрослеж",    "");
		СтруктураПараметров.Вставить("МассивСвРегНом", Неопределено);
	КонецЕсли;

	СоставСтроки.Вставить("КодВидаТовара", СтрокаКодВидаТовара);
	МассивКодВидаТовара = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаКодВидаТовара, ";");

	ЗаполнитьЗначенияСвойств(Секция, СоставСтроки);

	Если СтруктураПараметров.ЗаполнениеДекларации Тогда

		ДополнительныеСведения = Новый Структура("Контрагент,ПредставлениеКонтрагента,Документ,ПредставлениеДокумента");

		СоставСтроки.Вставить("НомерПор", НомерСтроки);

		СоставСтроки.Вставить("НомСчФПрод",   ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФПрод",  ПредставлениеСФ.Дата);

		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);

		СоставСтроки.Вставить("НомКСчФПрод",  ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФПрод", ПредставлениеСФ.ДатаКорректировочный);

		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);

		СоставСтроки.Вставить("ОКВ", Строка(ПараметрыЗаполнения.ВалютаКод));

		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрыЗаполнения.КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);

		СоставСтроки.Вставить("ДокПдтвОпл", МассивДокПдтвОпл);

		// Сведения о покупателе

		МассивСвПок = Новый Массив();

		Если СоставСтроки.Свойство("ПокупательИНН")
			И (ЗначениеЗаполнено(СоставСтроки.ПокупательИНН)
			ИЛИ ЗначениеЗаполнено(СоставСтроки.ПокупательКПП)) Тогда
			СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПокупательИНН, ПараметрыЗаполнения.ПокупательКПП);
			СтруктураРеквизитовКонтрагента.Вставить("Контрагент", ПараметрыЗаполнения.Контрагент);
			СтруктураРеквизитовКонтрагента.Вставить("КонтрагентНаименование", ПараметрыЗаполнения.Покупатель);
			МассивСвПок.Добавить(СтруктураРеквизитовКонтрагента);
		КонецЕсли;

		ДополнительныеСведения.Контрагент = ПараметрыЗаполнения.Контрагент;
		ДополнительныеСведения.ПредставлениеКонтрагента = ПараметрыЗаполнения.Покупатель;

		СоставСтроки.Вставить("СвПокуп", МассивСвПок);

		// Сведения о посреднике

		Если СоставСтроки.Свойство("Посредник")
			И (ЗначениеЗаполнено(ПараметрыЗаполнения.ПосредникИНН)
			ИЛИ ЗначениеЗаполнено(ПараметрыЗаполнения.ПосредникКПП)) Тогда
			СтруктураРеквизитовПосредника = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПосредникИНН, ПараметрыЗаполнения.ПосредникКПП);
			СтруктураРеквизитовПосредника.Вставить("Контрагент", ПараметрыЗаполнения.ПосредникСсылка);
			СтруктураРеквизитовПосредника.Вставить("КонтрагентНаименование", СоставСтроки.Посредник);
			СоставСтроки.Вставить("СвПос", СтруктураРеквизитовПосредника);
		КонецЕсли;

		СоставСтроки.Вставить("СтоимПродСФВ",  ПараметрыЗаполнения.ВсегоПродажВВалюте);
		СоставСтроки.Вставить("СтоимПродСФ",   ЗаписьКниги.ВсегоПродаж);
		СоставСтроки.Вставить("СтоимПродСФ20", ЗаписьКниги.СуммаБезНДС20);
		СоставСтроки.Вставить("СтоимПродСФ18", ЗаписьКниги.СуммаБезНДС18);
		СоставСтроки.Вставить("СтоимПродСФ10", ЗаписьКниги.СуммаБезНДС10);
		СоставСтроки.Вставить("СтоимПродСФ0",  ЗаписьКниги.НДС0);
		СоставСтроки.Вставить("СтоимПродСФ7",  ЗаписьКниги.СуммаБезНДС7);
		СоставСтроки.Вставить("СтоимПродСФ5",  ЗаписьКниги.СуммаБезНДС5);
		СоставСтроки.Вставить("СумНДССФ20",    ЗаписьКниги.НДС20);
		СоставСтроки.Вставить("СумНДССФ18",    ЗаписьКниги.НДС18);
		СоставСтроки.Вставить("СумНДССФ10",    ЗаписьКниги.НДС10);
		СоставСтроки.Вставить("СумНДССФ7",     ЗаписьКниги.НДС7);
		СоставСтроки.Вставить("СумНДССФ5",     ЗаписьКниги.НДС5);

		СоставСтроки.Вставить("СтоимПродОсв",  ЗаписьКниги.СуммаСовсемБезНДС);

		Если ЗначениеЗаполнено(ПредставлениеСФ.НомерКорректировочный) Тогда
			ДополнительныеСведения.ПредставлениеДокумента = СтрШаблон(
			НСтр("ru = 'Корректировочный счет-фактура № %1 от %2 на сумму %3 %4';
			|en = 'Corrective tax invoice No. %1 from %2 in the amount of %3 %4 '"), 
			ПредставлениеСФ.НомерКорректировочный, 
			ПредставлениеСФ.ДатаКорректировочный, 
			Формат(ЗаписьКниги.ВсегоПродаж, "ЧДЦ=2; ЧН="),
			ПараметрыЗаполнения.ВалютаНаименование);
		Иначе
			ДополнительныеСведения.ПредставлениеДокумента = СтрШаблон(
			НСтр("ru = '%1 на сумму %2 %3';
			|en = '%1 in the amount of %2 %3'"),
			ПредставлениеСФ.Представление,
			Формат(ЗаписьКниги.ВсегоПродаж, "ЧДЦ=2; ЧН="),
			ПараметрыЗаполнения.ВалютаНаименование);
		КонецЕсли;

		ДополнительныеСведения.Документ = СоставСтроки.СчетФактура;
		СоставСтроки.Вставить("ДополнительныеСведения", ДополнительныеСведения);

		Если СтруктураПараметров.ПравилаЗаполнения = "2019Кв1"
			ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2020Кв4"
			ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2021Кв3"
			ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2023Кв1"
			ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2025Кв1" Тогда
			СоставСтроки.Вставить("КодВидТовар", МассивКодВидаТовара);
		КонецЕсли;

		Если СтруктураПараметров.ПравилаЗаполнения = "2021Кв3"
			ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2023Кв1"
			ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2025Кв1" Тогда
			СоставСтроки.Вставить("СвРегНом", МассивСвРегНом);
		КонецЕсли;

		Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел91.Добавить();
		Иначе
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел9.Добавить();
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);

	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда

		СоставСтроки.Вставить("НомПП",        НомерСтроки);
		СоставСтроки.Вставить("НомерСчФ",     ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФ",      ПредставлениеСФ.Дата);
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		СоставСтроки.Вставить("НомерКСчФ",    ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФ",     ПредставлениеСФ.ДатаКорректировочный);
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);

		Если СтруктураПараметров.ВерсияПостановленияНДС1137 >= 5
			И Не ЗначениеЗаполнено(ПараметрыЗаполнения.ВалютаКод) Тогда
			ВалютаКод = "643";
		Иначе
			ВалютаКод = Строка(ПараметрыЗаполнения.ВалютаКод);
		КонецЕсли;
		СоставСтроки.Вставить("КодОКВ", ВалютаКод);
		СоставСтроки.Вставить("ВидТов", МассивКодВидаТовара);

		// Сведения о покупателе

		СтруктураРеквизитовКонтрагента = Новый Структура;

		Если СоставСтроки.Свойство("ПокупательИНН")
			И НЕ ПустаяСтрока(СоставСтроки.ПокупательИНН) Тогда

			СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(
			ПараметрыЗаполнения.ПокупательИНН, ПараметрыЗаполнения.ПокупательКПП);

			Если СтруктураРеквизитовКонтрагента.Свойство("ИННФЛ") Тогда
				СоставСтроки.Вставить("ИННФЛ", СтруктураРеквизитовКонтрагента.ИННФЛ);
			Иначе
				СоставСтроки.Вставить("ИННЮЛ", СтруктураРеквизитовКонтрагента.ИННЮЛ);
				СоставСтроки.Вставить("КПП", СтруктураРеквизитовКонтрагента.КПП);
			КонецЕсли;

		КонецЕсли;

		СоставСтроки.Вставить("НаимПок", ПараметрыЗаполнения.Покупатель);

		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрыЗаполнения.КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);

		// Сведения о посреднике

		Если СоставСтроки.Свойство("Посредник")
			И НЕ ПустаяСтрока(ПараметрыЗаполнения.ПосредникИНН) Тогда
			СоставСтроки.Вставить("СвПосредн", 
			УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(
			ПараметрыЗаполнения.ПосредникИНН, ПараметрыЗаполнения.ПосредникКПП, СоставСтроки.Посредник));
		КонецЕсли;

		СоставСтроки.Вставить("СтТовУчНалВсего",    ПараметрыЗаполнения.ВсегоПродажВВалюте);
		СоставСтроки.Вставить("СтТовУчНалРубКоп",   ЗаписьКниги.ВсегоПродаж);
		СоставСтроки.Вставить("СтТовРубКоп20",      ЗаписьКниги.СуммаБезНДС20);
		СоставСтроки.Вставить("СтТовРубКоп18",      ЗаписьКниги.СуммаБезНДС18);
		СоставСтроки.Вставить("СтТовРубКоп10",      ЗаписьКниги.СуммаБезНДС10);
		СоставСтроки.Вставить("СтТовРубКоп7",       ЗаписьКниги.СуммаБезНДС7);
		СоставСтроки.Вставить("СтТовРубКоп5",       ЗаписьКниги.СуммаБезНДС5);
		СоставСтроки.Вставить("СтТовРубКоп0",       ЗаписьКниги.НДС0);
		СоставСтроки.Вставить("СумНДСРубКоп20",     ЗаписьКниги.НДС20);
		СоставСтроки.Вставить("СумНДСРубКоп18",     ЗаписьКниги.НДС18);
		СоставСтроки.Вставить("СумНДСРубКоп10",     ЗаписьКниги.НДС10);
		СоставСтроки.Вставить("СумНДСРубКоп7",      ЗаписьКниги.НДС7);
		СоставСтроки.Вставить("СумНДСРубКоп5",      ЗаписьКниги.НДС5);
		СоставСтроки.Вставить("СтПродОсвНДСРубКоп", ЗаписьКниги.СуммаСовсемБезНДС);

		СоставСтроки.Вставить("СвДокПдтвОпл", МассивДокПдтвОпл);

		Если ЗначениеЗаполнено(МассивСвРегНом) Тогда
			СоставСтроки.Вставить("СвРегНом", МассивСвРегНом);
		КонецЕсли;

		СтрокаРаздела = СтруктураПараметров.Записи.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);

	КонецЕсли;

КонецПроцедуры

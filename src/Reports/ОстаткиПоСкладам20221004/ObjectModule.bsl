

#Область ОписаниеПеременных

Перем ДатаОтчета,Период;

#КонецОбласти  

Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроекФормы, Истина);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;   
	
КонецПроцедуры 

Процедура УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	ПараметрДатаНачала = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаНачала");  
	ПараметрДатаНачала.Использование = Истина;
КонецПроцедуры

#Область ОбработчикиСобытий 


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка) 
	ДатаОтчета = ТекущаяДата();
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	//
	//// Подготовим и выведем отчет.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	//	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	//	
	//КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(СтруктураЗаголовковПолей(), МакетКомпоновки);
	//
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//
	//ПериодОтчета = ОтчетыУТКлиентСервер.ГраницаРасчета(КомпоновщикНастроек, ПоляОтбора.Период);
	ТаблицаВеб = НаборВеб();
		//
	ВнешниеНаборыДанных = Новый Структура("ТаблицаВеб", ТаблицаВеб);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	ПроцессорВывода.ЗакончитьВывод();
		

КонецПроцедуры    
#КонецОбласти 


Функция НаборВеб()  
	
	
	ДатаНачала = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаНачала"); 
	ДатаОкончания = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОкончания"); 
	//
	Парам = Новый Структура;
	Парам.Вставить("day_start",Строка(Формат(ДатаНачала.Значение.Дата,"ДФ=yyyy-MM-dd")));
	Парам.Вставить("day_end",Строка(Формат(ДатаОкончания.Значение.Дата,"ДФ=yyyy-MM-dd")));
	
	Рез = ЗапросPost("/api/get_stocks","present",Парам) ; 
	Результат = ПростоеЧтениеJSON(Рез); 

	Таб = Новый ТаблицаЗначений; 
	Таб.Колонки.Добавить("День");
	Таб.Колонки.Добавить("Количество");
	Таб.Колонки.Добавить("Склад");  
	Таб.Колонки.Добавить("РекомендованоЗаказать");
	Таб.Колонки.Добавить("sku");   
	Таб.Колонки.Добавить("Ост");

	Если Результат.Количество()>0 Тогда
		Для сч=0 по Результат.Количество()-1 Цикл 
			Попытка
	        	Стр = Таб.Добавить();
	            Стр.День =ДатаОкончания.Значение.Дата; 
	            Стр.Количество =Результат[сч].present; 
	            Стр.sku =Результат[сч].sku; 
	            Стр.РекомендованоЗаказать ="";
				Стр.Ост ="";
				Если Результат[сч].sklad = "mos" Тогда
	            	Стр.Склад ="Москва";
				Иначе
					Стр.Склад ="Регионы";
				КонецЕсли;
			Исключение
				Сообщить(Результат[сч]);
			КонецПопытки;
			
		КонецЦикла;
	КонецЕсли;

	Рез = ЗапросPost("/api/get_reck_order","present",Парам) ; 
	Результат = ПростоеЧтениеJSON(Рез); 
	Если Результат.Количество()>0 Тогда
		Для сч=0 по Результат.Количество()-1 Цикл 
			Попытка
	        	Стр = Таб.Добавить(); 
				Стр.Склад ="";
	            Стр.sku =Результат[сч].sku_rek; 
	            Стр.РекомендованоЗаказать =Результат[сч].present_rek; 
				Стр.Ост =Результат[сч].present_ost;
                //Сообщить(Результат[сч].present_ost);
			Исключение
				Сообщить(Результат[сч]);
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	//Сообщить("123");	
	
	
	Возврат Таб;	
КонецФункции   

Функция ЗапросPost(урл,post,Параметры)  
	url = "192.168.88.146:8000";

	Сервер = url+урл;
	Соединение =  Новый HTTPСоединение(Сервер,,,,,90,,);
	
	Заголовки = Новый Соответствие; 
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");

	//Масс = СоздатьПартнераНаСервере();
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON();
	ЗаписьJSON.ОткрытьФайл(КаталогВременныхФайлов()+"contr.json", , , ПараметрыЗаписи) ;
	ЗаписатьJSON(ЗаписьJSON, Параметры);
	
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Параметры);
	СтрJSON = ЗаписьJSON.Закрыть(); 
	
	
	Запрос = Новый HTTPЗапрос("/",Заголовки);
	Запрос.УстановитьТелоИзСтроки(post+"="+СтрJSON); 

	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.ОтправитьДляОбработки(Запрос,ФайлРезультата);
	
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата,КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст(); 
	Возврат СтрокаОтветСервера;
КонецФункции      

Функция ПростоеЧтениеJSON(Данные)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Данные);  		
	Возврат ПрочитатьJSON(ЧтениеJSON);
	
КонецФункции



  Функция СведенияОВнешнейОбработке() Экспорт 
	РегистрационныеДанные = Новый Структура; 
	РегистрационныеДанные.Вставить("Наименование", "Остатки по складам маркетплэйс"); 
	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь); 
	РегистрационныеДанные.Вставить("Версия", "1.0"); 
	РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет"); 
	РегистрационныеДанные.Вставить("Информация", "Остатки по складам маркетплэйс"); 
 ///////////// команды ///////////////////////// 
	тзКоманд = Новый ТаблицаЗначений; 
	тзКоманд.Колонки.Добавить("Идентификатор"); 
	тзКоманд.Колонки.Добавить("Представление"); 
	тзКоманд.Колонки.Добавить("Модификатор"); 
	тзКоманд.Колонки.Добавить("ПоказыватьОповещение"); 
	тзКоманд.Колонки.Добавить("Использование"); 
	строкаКоманды = тзКоманд.Добавить(); 
	строкаКоманды.Идентификатор = "1"; 
	строкаКоманды.Представление = "Остатки по складам маркетплэйс"; 
	строкаКоманды.ПоказыватьОповещение = Истина; 
	строкаКоманды.Использование = "ОткрытиеФормы"; 
	РегистрационныеДанные.Вставить("Команды", тзКоманд); 
	Возврат РегистрационныеДанные; 
КонецФункции





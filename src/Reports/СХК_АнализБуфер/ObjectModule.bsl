#Область ОписаниеПеременных

Перем ДатаОкончания,Период;

#КонецОбласти  

Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроекФормы, Истина);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;   
	
КонецПроцедуры 

Процедура УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	ПараметрДатаОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОтчета");  
	ПараметрДатаОтчета.Использование = Истина;
	
КонецПроцедуры

#Область ОбработчикиСобытий
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка) 
	//ДатаНачала = ТекущаяДата()-180*86400;
	//ДатаОкончания = ТекущаяДата();
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	//
	//// Подготовим и выведем отчет.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	//	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	//	
	//КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(СтруктураЗаголовковПолей(), МакетКомпоновки);
	//
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//
	ТабБуфер = Платежи();
		//
	ВнешниеНаборыДанных = Новый Структура("ТабБуфер", ТабБуфер);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	//ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	//ПроцессорВывода.ЗакончитьВывод();
	

КонецПроцедуры    
#КонецОбласти 


Функция Платежи()  
	
	ДатаОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОтчета").Значение.Дата;;	
	//ДатаНачала = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "Период").Значение.ДатаНачала;	
	
	Таб = Новый ТаблицаЗначений; 
	Таб.Колонки.Добавить("Номенклатура");
	Таб.Колонки.Добавить("СерииНоменклатуры");
	Таб.Колонки.Добавить("Документ");
	//Таб.Колонки.Добавить("ПриходныйОрдер");  
	Таб.Колонки.Добавить("Остаток");  
	Таб.Колонки.Добавить("Приход");  
	Таб.Колонки.Добавить("Расход");  
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СУММА(ВЫБОР
	               |			КОГДА СХК_ТоварыНаСкладеОстатки.Ячейка <> &Ячейка
	               |				ТОГДА СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Остаток,
	               |	СУММА(ВЫБОР
	               |			КОГДА СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка
	               |				ТОГДА СХК_ТоварыНаСкладеОстатки.ВНаличииОстаток
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ОстатокБуфер,
	               |	СХК_ТоварыНаСкладеОстатки.Номенклатура КАК Номенклатура,
	               |	ДвиженияСерийТоваровОбороты.Серия КАК СерииНоменклатуры,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.ПриходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА (ДвиженияСерийТоваровОбороты.Документ.Отправитель = &ОтправительЦМ
	               |							ИЛИ ДвиженияСерийТоваровОбороты.Документ.Отправитель = &ОтправительЦК
	               |							ИЛИ ДвиженияСерийТоваровОбороты.Документ.Отправитель = &СкладПолучатель)
	               |							И ДвиженияСерийТоваровОбороты.Документ.Отправитель <> ДвиженияСерийТоваровОбороты.Документ.Склад
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Приход,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Расход,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ДвиженияСерийТоваровОбороты.Документ.Получатель = &СкладПолучатель
	               |							И ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК РасходСписание,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ДвиженияСерийТоваровОбороты.Документ.Получатель = &ОтправительЦК
	               |							И ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК РасходЦК,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ.Получатель) = ТИП(Справочник.Партнеры)
	               |							И ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК РасходКлиенту,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |				ИЛИ ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.ПриходныйОрдерНаТовары)
	               |			ТОГДА ДвиженияСерийТоваровОбороты.Документ
	               |	КОНЕЦ КАК Документ,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	               |ИЗ
	               |	РегистрНакопления.СХК_ТоварыНаСкладе.Остатки(&ДатаОтчета, ) КАК СХК_ТоварыНаСкладеОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияСерийТоваров.Обороты КАК ДвиженияСерийТоваровОбороты
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаОтчета,Склад = &СкладГП ) КАК ТоварыНаСкладахОстатки
	               |			ПО ДвиженияСерийТоваровОбороты.Серия = ТоварыНаСкладахОстатки.Серия
	               |		ПО СХК_ТоварыНаСкладеОстатки.Номенклатура = ДвиженияСерийТоваровОбороты.Номенклатура
	               |			И СХК_ТоварыНаСкладеОстатки.Серия = ДвиженияСерийТоваровОбороты.Серия.Номер
	               |
	               |	
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СХК_ТоварыНаСкладеОстатки.Номенклатура,
	               |	ДвиженияСерийТоваровОбороты.Серия,
	               |	ДвиженияСерийТоваровОбороты.Документ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.ПриходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА (ДвиженияСерийТоваровОбороты.Документ.Отправитель = &ОтправительЦМ
	               |							ИЛИ ДвиженияСерийТоваровОбороты.Документ.Отправитель = &ОтправительЦК
	               |							ИЛИ ДвиженияСерийТоваровОбороты.Документ.Отправитель = &СкладПолучатель)
	               |							И ДвиженияСерийТоваровОбороты.Документ.Отправитель <> ДвиженияСерийТоваровОбороты.Документ.Склад
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ДвиженияСерийТоваровОбороты.Документ.Получатель = &СкладПолучатель
	               |							И ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ДвиженияСерийТоваровОбороты.Документ.Получатель = &ОтправительЦК
	               |							И ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ТИПЗНАЧЕНИЯ(ДвиженияСерийТоваровОбороты.Документ.Получатель) = ТИП(Справочник.Партнеры)
	               |							И ДвиженияСерийТоваровОбороты.Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	               |						ТОГДА ДвиженияСерийТоваровОбороты.КоличествоОборот
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток";
	              // |ГДЕ
	              // |	СХК_ТоварыНаСкладеОстатки.Ячейка = &Ячейка";
	Запрос.УстановитьПараметр("ДатаОтчета",КонецДня(ДатаОтчета)); 
	Запрос.УстановитьПараметр("Ячейка",Справочники.СХК_СкладЯчейки.НайтиПоНаименованию("Буфер")); 
	Запрос.УстановитьПараметр("СкладПолучатель",Справочники.Склады.НайтиПоНаименованию("Склад списания")); 
	Запрос.УстановитьПараметр("ОтправительЦМ",Справочники.Склады.НайтиПоНаименованию("ЦМ Цех Мюсли")); 
	Запрос.УстановитьПараметр("ОтправительЦК",Справочники.Склады.НайтиПоНаименованию("ЦК Цех Комплектации")); 
	Запрос.УстановитьПараметр("СкладГП",Справочники.Склады.НайтиПоНаименованию("ГП Склад готовой продукции")); 

	Таб =  Запрос.Выполнить().Выгрузить();  
	
	ТабНС = Таб.Скопировать();
	ТабНС.Свернуть("");
	
	Возврат Таб;
	
 КонецФункции   


//  Функция СведенияОВнешнейОбработке() Экспорт 
//	РегистрационныеДанные = Новый Структура; 
//	РегистрационныеДанные.Вставить("Наименование", "СХК_АнализБуфер"); 
//	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь); 
//	РегистрационныеДанные.Вставить("Версия", "1.0"); 
//	РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет"); 
//	РегистрационныеДанные.Вставить("Информация", "СХК_АнализБуфер"); 
// ///////////// команды ///////////////////////// 
//	тзКоманд = Новый ТаблицаЗначений; 
//	тзКоманд.Колонки.Добавить("Идентификатор"); 
//	тзКоманд.Колонки.Добавить("Представление"); 
//	тзКоманд.Колонки.Добавить("Модификатор"); 
//	тзКоманд.Колонки.Добавить("ПоказыватьОповещение"); 
//	тзКоманд.Колонки.Добавить("Использование"); 
//	строкаКоманды = тзКоманд.Добавить(); 
//	строкаКоманды.Идентификатор = "1"; 
//	строкаКоманды.Представление = "СХК_АнализБуфер"; 
//	строкаКоманды.ПоказыватьОповещение = Истина; 
//	строкаКоманды.Использование = "ОткрытиеФормы"; 
//	РегистрационныеДанные.Вставить("Команды", тзКоманд); 
//	Возврат РегистрационныеДанные; 
//КонецФункции







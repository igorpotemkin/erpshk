

#Область ОписаниеПеременных

Перем ДатаОтчета,Период;

#КонецОбласти  

Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроекФормы, Истина);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;   
	
КонецПроцедуры 

Процедура УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	ПараметрДатаНачала = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаНачала");  
	ПараметрДатаНачала.Использование = Истина;
КонецПроцедуры

#Область ОбработчикиСобытий 


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка) 
	ДатаОтчета = ТекущаяДата();
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	//
	//// Подготовим и выведем отчет.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	//	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	//	
	//КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(СтруктураЗаголовковПолей(), МакетКомпоновки);
	//
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//
	//ПериодОтчета = ОтчетыУТКлиентСервер.ГраницаРасчета(КомпоновщикНастроек, ПоляОтбора.Период);
	ТаблицаВеб = НаборВеб();
		//
	ВнешниеНаборыДанных = Новый Структура("Таб", ТаблицаВеб);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	ПроцессорВывода.ЗакончитьВывод();
		

КонецПроцедуры    
#КонецОбласти 


Функция НаборВеб()  
	
	
	ДатаНачала = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаНачала"); 
	ДатаОкончания = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОкончания"); 
	 
	//
	

	Таб = Новый ТаблицаЗначений; 
	
	Таб.Колонки.Добавить("ДокументОтгрузки");
	Таб.Колонки.Добавить("ТК");
	Таб.Колонки.Добавить("Действие");
	Таб.Колонки.Добавить("Дата");
	Таб.Колонки.Добавить("НомерДокументаПоставщика");
	Таб.Колонки.Добавить("Клиент");
	Таб.Колонки.Добавить("Направление");
	Таб.Колонки.Добавить("СуммаРейсПоПлану");
	Таб.Колонки.Добавить("СуммаРейсПоФакту");
	Таб.Колонки.Добавить("СуммаНакладной");
	Таб.Колонки.Добавить("Паллеты"); 
	Таб.Колонки.Добавить("ПроцентПлан");
	Таб.Колонки.Добавить("ПроцентФакт");
	Таб.Колонки.Добавить("Комментарии");
	Таб.Колонки.Добавить("Накладные");

	
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Расш1_ОтгрузкаФакт.Ссылка КАК Ссылка
	             |ИЗ
	             |	Документ.Расш1_ОтгрузкаФакт КАК Расш1_ОтгрузкаФакт
	             |ГДЕ
	             |	Расш1_ОтгрузкаФакт.ПометкаУдаления = &ПометкаУдаления
	             |	И Расш1_ОтгрузкаФакт.Проведен = &Проведен
	             |	И Расш1_ОтгрузкаФакт.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания"; 
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала.Значение.Дата);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания.Значение.Дата);
	
	//Рез = Запрос.Выполнить().Выбрать(); 
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);   
	
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ТК");
	ТЗ.Колонки.Добавить("Ссылка");
	//
	////Пока Рез.Следующий() Цикл
	////	//ТЗ.Очистить();
	////	//Т = Таб.Добавить();
	////	//Т.ДокументОтгрузки = Рез.Ссылка; 
	Для Каждого Строка из ТабЗнач Цикл 
		Для Каждого стр из Строка.Ссылка.ТЧОрдер Цикл
			Т = ТЗ.Добавить();
			Т.ТК = стр.ТК;
			Т.Ссылка = Строка.Ссылка;
		КонецЦикла; 
	КонецЦикла;

	//КонецЦикла;
	
	ТЗ.Свернуть("ТК,Ссылка");
	
	Для Каждого строк из ТЗ Цикл     

		Отбор = Новый Структура;
	   	Отбор.Вставить("Ссылка", строк.Ссылка); 

		Строки = ТабЗнач.НайтиСтроки(Отбор);

		Для Каждого Стр Из Строки Цикл
			Клиент = "";
			Направление = ""; 
			СуммаРейсПоПлану = 0; 
			СуммаРейсПоФакту = 0 ;
			СуммаНакладной = 0;
			Паллеты = 0;
			Комментарии = "";
			Накладные = "";
			Для Каждого Строка Из Стр.Ссылка.ТЧОрдер Цикл
				Если Строка.ТК = строк.ТК Тогда
					Клиент = Строка(Клиент)  + Строка.ЗаказКлиента.Партнер+ ", ";
					Направление = Строка(Направление)  + Строка.ЗаказКлиента.АдресДоставки+ ", ";   
					СуммаРейсПоПлану = СуммаРейсПоПлану +  Строка.ТарифПлан2 + Строка.ТарифФакт2; 
					СуммаРейсПоФакту = СуммаРейсПоФакту +  Строка.ТарифФакт + Строка.ТарифФакт2; 
					СуммаНакладной = СуммаНакладной + Строка.ЗаказКлиента.СуммаДокумента; 
					Паллеты = Паллеты +Строка.КоличествоПалет; 
					//Комментарии = Строка(Комментарии)  + Строка.ЗаказКлиента.Комментарий+ ", "; 
					Накладные =  Накладные + Строка.ЗаказКлиента.Номер+ ", ";
				КонецЕсли;
				
			КонецЦикла; 
				Т = Таб.Добавить();
		        Т.ДокументОтгрузки = строк.Ссылка; 
				
				Если  строк.ТК <> Справочники.Контрагенты.ПустаяСсылка() Тогда
		        	Т.ТК = строк.ТК;  
				Иначе
					Т.ТК = строк.Ссылка.ФИОВодителя;
				КонецЕсли;
				
				Т.Дата = Формат(стр.Ссылка.Дата, "ДЛФ=Д"); 
		//	Т.НомерДокументаПоставщика = ""; 	
				Т.Клиент = Клиент; 	
				Т.Направление = Направление; 	
				Т.СуммаРейсПоПлану = СуммаРейсПоПлану; 	 
				Т.СуммаРейсПоФакту = СуммаРейсПоФакту-строк.Ссылка.ЗатратыСырье; 
				
				Т.СуммаНакладной = СуммаНакладной; 	
				
				Т.Паллеты = Паллеты;
			
			Попытка
				Т.ПроцентПлан = Окр(СуммаРейсПоПлану/СуммаНакладной*100,2); 
			Исключение
				Т.ПроцентПлан = 0 ;
			КонецПопытки ;
			
			Попытка
				Т.ПроцентФакт = Окр(СуммаРейсПоФакту/СуммаНакладной*100,2); 
			Исключение
				Т.ПроцентФакт = 0 ;
			КонецПопытки ;
			
			Т.Комментарии = строк.Ссылка.Комментарий; 	
			Т.Накладные = Накладные; 	

		КонецЦикла;
		//Сообщить(Строка(строк.ТК) + " - " + Строка(строк.НомерДок));
	КонецЦикла;   
	
	
	
	//Для Каждого стр из ТабЗнач Цикл	
	//	Т = Таб.Добавить();
	//	Т.ДокументОтгрузки = стр.Ссылка; 
	//	Для Каждого Строка из стр.Ссылка.ТЧОрдер Цикл 
	//		Если Строка.ТК = Справочники.Контрагенты.ПустаяСсылка() Тогда 
	//			Т.ТК = стр.Ссылка.ФИОВодителя;
	//		Иначе
	//			Т.ТК = Строка.ТК ;
	//		КонецЕсли;
	//	
	//		Т.Дата = стр.Ссылка.Дата; 
	//		Т.НомерДокументаПоставщика = ""; 	
	//		Т.Клиент = Строка.ЗаказКлиента.Партнер; 	
	//		Т.Направление = стр.Ссылка; 	
	//		Т.СуммаРейс = стр.Ссылка; 	
	//		Т.СуммаНакладной = стр.Ссылка; 	
	//		Т.Паллеты = стр.Ссылка; 	
	//		Т.Процент = стр.Ссылка; 	
	//		Т.Комментарии = стр.Ссылка; 	
	//		Т.Накладные = стр.Ссылка; 	
	//	КонецЦикла;
	//
	//КонецЦикла;
	
	
	Возврат Таб;	
	
	
КонецФункции   



  Функция СведенияОВнешнейОбработке() Экспорт 
 //   РегистрационныеДанные = Новый Структура; 
 //   РегистрационныеДанные.Вставить("Наименование", "Остатки по складам маркетплэйс sku по неделям"); 
 //   РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь); 
 //   РегистрационныеДанные.Вставить("Версия", "1.0"); 
 //   РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет"); 
 //   РегистрационныеДанные.Вставить("Информация", "Остатки по складам маркетплэйс sku по неделям"); 
 /////////////// команды ///////////////////////// 
 //   тзКоманд = Новый ТаблицаЗначений; 
 //   тзКоманд.Колонки.Добавить("Идентификатор"); 
 //   тзКоманд.Колонки.Добавить("Представление"); 
 //   тзКоманд.Колонки.Добавить("Модификатор"); 
 //   тзКоманд.Колонки.Добавить("ПоказыватьОповещение"); 
 //   тзКоманд.Колонки.Добавить("Использование"); 
 //   строкаКоманды = тзКоманд.Добавить(); 
 //   строкаКоманды.Идентификатор = "1"; 
 //   строкаКоманды.Представление = "Остатки по складам маркетплэйс sku по неделям"; 
 //   строкаКоманды.ПоказыватьОповещение = Истина; 
 //   строкаКоманды.Использование = "ОткрытиеФормы"; 
 //   РегистрационныеДанные.Вставить("Команды", тзКоманд); 
 //   Возврат РегистрационныеДанные; 
КонецФункции





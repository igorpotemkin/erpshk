

#Область ОписаниеПеременных

Перем ДатаОтчета,Период;

#КонецОбласти  

Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроекФормы, Истина);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;   
	
КонецПроцедуры 

Процедура УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	ПараметрДатаОкончания = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОкончания");  
	ПараметрДатаОкончания.Использование = Истина;
КонецПроцедуры

#Область ОбработчикиСобытий 


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка) 
	ДатаОтчета = ТекущаяДата();
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	//
	//// Подготовим и выведем отчет.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	//	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	//	
	//КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(СтруктураЗаголовковПолей(), МакетКомпоновки);
	//
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//
	//ПериодОтчета = ОтчетыУТКлиентСервер.ГраницаРасчета(КомпоновщикНастроек, ПоляОтбора.Период);
	НаборПромо = НаборПромо();   
	НаборПродажи = НаборПродажиЗаПериод();

		//
	//ВнешниеНаборыДанных = Новый Структура("НаборПромо", НаборПромо);
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("НаборПромо", НаборПромо);
	//ВнешниеНаборыДанных.Вставить("НаборПродажиЗаПериод", НаборПродажи);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	ПроцессорВывода.ЗакончитьВывод();
		

КонецПроцедуры    
#КонецОбласти 

Функция НаборПродажиЗаПериод()  
	Таб = Новый ТаблицаЗначений; 
	Таб.Колонки.Добавить("вв");
    Т = Таб.Добавить();
	Т.вв = "аааааааа";
	Возврат Таб;
	
КонецФункции

	

Функция НаборПромо()  
	
	
	ДатаНачала = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаНачала"); 
	ДатаОкончания = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОкончания"); 

	Таб = Новый ТаблицаЗначений; 
	Таб.Колонки.Добавить("АкцияСсылка");
	Таб.Колонки.Добавить("ТипПромо");
	Таб.Колонки.Добавить("Выручка");
	Таб.Колонки.Добавить("КоличествоДо");
	Таб.Колонки.Добавить("Номенклатура");
	Таб.Колонки.Добавить("СтатусПромоДокумента");
	Таб.Колонки.Добавить("НачалоАкцииОтгр");
	Таб.Колонки.Добавить("ОкончаниеАкцииОтгр");
	Таб.Колонки.Добавить("Партнер");
	Таб.Колонки.Добавить("Номер");
	Таб.Колонки.Добавить("Менеджер");
	Таб.Колонки.Добавить("ПроцентСкидки");
	Таб.Колонки.Добавить("ROI");
	Таб.Колонки.Добавить("Комментарий");
	Таб.Колонки.Добавить("ЦенаПрайс");  
	Таб.Колонки.Добавить("ЦенаПрайсСкидка"); 
	
	Таб.Колонки.Добавить("ЦенаПолкаРег");
	Таб.Колонки.Добавить("ЦенаПолкаПромоПлан");
	Таб.Колонки.Добавить("Артикул");
	Таб.Колонки.Добавить("Марка");
	Таб.Колонки.Добавить("ПОбъемВсеТТ"); 
	
	
	Таб.Колонки.Добавить("ОбъемДоАкции");
	Таб.Колонки.Добавить("ВыручкаДоАкции");
	Таб.Колонки.Добавить("ОбъемБезАкции"); 
	Таб.Колонки.Добавить("ВыручкаБезАкции"); 
	
	Таб.Колонки.Добавить("ФактПродаж");
	Таб.Колонки.Добавить("ВыручкаФактСНДС"); 
	Таб.Колонки.Добавить("ВыручкаФактПланЦена");
	Таб.Колонки.Добавить("ЗатратыФакт");
	Таб.Колонки.Добавить("ДопПрибыльПлан");
	Таб.Колонки.Добавить("ДопПрибыльФакт");  
	
	Таб.Колонки.Добавить("СтавкаНДС");
   
    //ВыручкаБезАкции
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СХК_Промо.Ссылка КАК АкцияСсылка,
	               |	СХК_Промо.Ссылка.ТипПромо КАК ТипПромо,
	               |	СХК_Промо.Ссылка.СтатусПромоДокумента КАК СтатусПромоДокумента,
	               |	СХК_Промо.Ссылка.НачалоАкцииОтгр КАК НачалоАкцииОтгр,
	               |	СХК_Промо.Ссылка.ОкончаниеАкцииОтгр КАК ОкончаниеАкцииОтгр,
	               |	СХК_Промо.Номенклатура КАК Номенклатура,
	               |	СХК_Промо.ПроцентСкидки КАК ПроцентСкидки,
	               |	СХК_Промо.ROI КАК ROI,
	               |	СХК_Промо.ЦенаПолкаРег КАК ЦенаПолкаРег,
	               |	СХК_Промо.ЦенаПолкаПромоПлан КАК ЦенаПолкаПромоПлан,
	               |	СХК_Промо.ПОбъемВсеТТ КАК ПОбъемВсеТТ,
	               |	СХК_Промо.ДопИнвестиции КАК ДопИнвестиции,
	               |	СХК_Промо.ТекущаяЦена КАК ТекущаяЦена,
	               |	СХК_Промо.Номенклатура.СтавкаНДС КАК НоменклатураСтавкаНДС,
	               |	СХК_Промо.Прибыль КАК Прибыль,
	               |	СХК_Промо.СебестоимостьВМесяцПосле КАК СебестоимостьВМесяцПосле
	               |ИЗ
	               |	Документ.СХК_Промо.НоменклатураПромо КАК СХК_Промо
	               |ГДЕ
	               |	СХК_Промо.Ссылка.Проведен = &Проведен
	               |	И СХК_Промо.Ссылка.ПометкаУдаления = &ПометкаУдаления
	               |	И СХК_Промо.Ссылка.НачалоАкцииОтгр >= &НачалоАкцииОтгр
	               |	И СХК_Промо.Ссылка.ОкончаниеАкцииОтгр <= &ОкончаниеАкцииОтгр";    
	
	Запрос.УстановитьПараметр("Проведен",Истина);
	Запрос.УстановитьПараметр("ПометкаУдаления",Ложь);
	Запрос.УстановитьПараметр("НачалоАкцииОтгр",ДатаНачала.Значение.Дата);
	Запрос.УстановитьПараметр("ОкончаниеАкцииОтгр",ДатаОкончания.Значение.Дата);
	
	Рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		Т = Таб.Добавить();
		Т.АкцияСсылка = Рез.АкцияСсылка; 
		Т.ТипПромо = Рез.ТипПромо; 
		Т.СтатусПромоДокумента = Рез.СтатусПромоДокумента;
		Т.НачалоАкцииОтгр = Рез.НачалоАкцииОтгр;
		Т.ОкончаниеАкцииОтгр = Рез.ОкончаниеАкцииОтгр;
		Т.Партнер = Рез.АкцияСсылка.Партнер; 
		Т.Номенклатура = Рез.Номенклатура; 
		Т.СтавкаНДС = Рез.НоменклатураСтавкаНДС;
		Т.Номер = Рез.АкцияСсылка.Номер;
		Т.Менеджер = Рез.АкцияСсылка.Автор;  
		Т.ПроцентСкидки = Рез.ПроцентСкидки;
		Т.ROI = Рез.ROI;
		Т.Комментарий = Рез.АкцияСсылка.Комментарий;
		Т.ЦенаПрайс = Рез.ТекущаяЦена; 
		Т.ЦенаПрайсСкидка = Рез.ТекущаяЦена - (Рез.ТекущаяЦена * Рез.ПроцентСкидки/100);
		Т.ЦенаПолкаРег = Рез.ЦенаПолкаРег;
		Т.ЦенаПолкаПромоПлан = Рез.ЦенаПолкаПромоПлан;
		Т.Артикул = Рез.Номенклатура.Артикул;
		Т.Марка = Рез.Номенклатура.Марка;
		Т.ПОбъемВсеТТ = Рез.ПОбъемВсеТТ; 
		
		Прод = ПродажиЗаПериод(Рез.АкцияСсылка.Партнер,Рез.Номенклатура,Рез.АкцияСсылка.Дата);
		Т.ОбъемДоАкции = Прод.Итог("Количество"); 
		Т.ВыручкаДоАкции = Прод.Итог("СуммаВыручки"); 
		Если Прод.Количество()>=1 Тогда
			ВыручкаБезАкции = 0;
			ОбъемБезАкции = 0;
			Отбор = Новый Структура;
			Отбор.Вставить("Цена", Рез.ТекущаяЦена);
			Отбор.Вставить("Соглашение", Рез.АкцияСсылка.Соглашение);
			Строки = Прод.НайтиСтроки(Отбор);
			Для Каждого Строка Из Строки Цикл
				ВыручкаБезАкции = ВыручкаБезАкции + Строка.СуммаВыручки;		
				ОбъемБезАкции = ОбъемБезАкции + Строка.Количество;		
			КонецЦикла;
			Т.ОбъемБезАкции = ОбъемБезАкции; 
			Т.ВыручкаБезАкции = ВыручкаБезАкции; 
		Иначе
			Т.ОбъемБезАкции = 0; 
			Т.ВыручкаБезАкции = 0; 
		КонецЕсли;
		
		ПродФакт = ПродажиЗаПериодФакт(Рез.АкцияСсылка.Партнер,Рез.АкцияСсылка.Соглашение,Рез.Номенклатура,Рез.АкцияСсылка.НачалоАкцииОтгр,Рез.АкцияСсылка.ОкончаниеАкцииОтгр);

		Т.ФактПродаж = ПродФакт.Итог("Количество"); ; 
		Т.ВыручкаФактСНДС =ПродФакт.Итог("СуммаВыручки"); 
		Т.ВыручкаФактПланЦена = ПродФакт.Итог("Количество") * (Рез.ТекущаяЦена - (Рез.ТекущаяЦена * Рез.ПроцентСкидки/100)) ;
		Т.ЗатратыФакт = Рез.ДопИнвестиции +ПродФакт.Итог("Количество") * (Рез.ТекущаяЦена - (Рез.ТекущаяЦена * Рез.ПроцентСкидки/100)) ; 
		Т.ДопПрибыльПлан = Рез.Прибыль;
		Если ПродФакт.Итог("СуммаВыручки") > 0 Тогда
			Т.ДопПрибыльФакт = ПродФакт.Итог("СуммаВыручки") - Рез.СебестоимостьВМесяцПосле; 
		Иначе
			Т.ДопПрибыльФакт = 0;
		КонецЕсли;
		

		//Прод = ПродажиЗаПериод(Рез.АкцияСсылка.Партнер,Рез.Номенклатура,Рез.АкцияСсылка.Дата); 
		//Т.Выручка = Прод.Итог("СуммаВыручки");
		//Т.КоличествоДо = Прод.Итог("Количество"); 
		//
		//Если Прод.Количество()>=1 Тогда
		//	Т.Ном = Прод[0].АналитикаУчетаНоменклатурыНоменклатура;
		//	ВыручкаБезАкции = 0;
		//	Отбор = Новый Структура;
		//	Отбор.Вставить("Цена", Рез.ТекущаяЦена); 
		//	Отбор.Вставить("Соглашение", Рез.АкцияСсылка.Соглашение);

		//	Строки = Прод.НайтиСтроки(Отбор);
		//	Для Каждого Строка Из Строки Цикл
		//		ВыручкаБезАкции = ВыручкаБезАкции + Строка.СуммаВыручки;// Яблоко Киви
		//	КонецЦикла; 
		//	Т.ВыручкаБезАкции = ВыручкаБезАкции;  
		//	
		//	//затраты ПЛАН, руб = Добавить колонку (ДопИнвестиции + (Выручка факт в плановых ценах  * Процент Скидка))
		//Иначе
		//	Т.Ном = Справочники.Номенклатура.ПустаяСсылка(); 
		//	Т.ВыручкаБезАкции = 0 ;
		//КонецЕсли;
		//
		//ПродФакт = ПродажиЗаПериодФакт(Рез.АкцияСсылка.Партнер,Рез.АкцияСсылка.Соглашение,Рез.Номенклатура,Рез.АкцияСсылка.НачалоАкцииОтгр,Рез.АкцияСсылка.ОкончаниеАкцииОтгр);
		////Если 
		//
		////Т.ЗатратыФ = Рез.ДопИнвестиции + 
	КонецЦикла;
	
	Возврат Таб;
	
КонецФункции   

Функция ПродажиЗаПериод(Партнер,Номенклатура,Дата)
	Д = ДобавитьМесяц(Дата,-3);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручки КАК СуммаВыручки, 
	|	ВыручкаИСебестоимостьПродаж.Соглашение КАК Соглашение,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
	|	ВыручкаИСебестоимостьПродаж.Количество КАК Количество,
	|   Выбор Когда ВыручкаИСебестоимостьПродаж.СуммаВыручки >0 И ВыручкаИСебестоимостьПродаж.Количество > 0 Тогда
	|		ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС / ВыручкаИСебестоимостьПродаж.Количество 
	|	Иначе 0
	| Конец КАК Цена 
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|ГДЕ
	|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
	//|	И ВыручкаИСебестоимостьПродаж.Соглашение = &Соглашение
	|	И ВыручкаИСебестоимостьПродаж.Соглашение.Партнер = &Партнер"; 
	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(Д));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(Дата));
	//Запрос.УстановитьПараметр("Соглашение",Соглашение);
	Запрос.УстановитьПараметр("Партнер",Партнер);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);   
	Возврат ТабЗнач;
	
КонецФункции

Функция ПродажиЗаПериодФакт(Партнер,Соглашение,Номенклатура,ДатаНачала,ДатаОкончания)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручки КАК СуммаВыручки,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
	|	ВыручкаИСебестоимостьПродаж.Количество КАК Количество,
	|   Выбор Когда ВыручкаИСебестоимостьПродаж.СуммаВыручки >0 И ВыручкаИСебестоимостьПродаж.Количество > 0 Тогда
	|		ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС / ВыручкаИСебестоимостьПродаж.Количество Иначе
	|	0 Конец КАК Цена 
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|ГДЕ
	|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
	|	И ВыручкаИСебестоимостьПродаж.Соглашение = &Соглашение
	|	И ВыручкаИСебестоимостьПродаж.Соглашение.Партнер = &Партнер"; 
	
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
	Запрос.УстановитьПараметр("Соглашение",Соглашение);
	Запрос.УстановитьПараметр("Партнер",Партнер);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Результат = Запрос.Выполнить();
	СпособОбхода = ОбходРезультатаЗапроса.Прямой;
	ТабЗнач = Результат.Выгрузить(СпособОбхода);   
	Возврат ТабЗнач;
	
КонецФункции

